
testreadout.elf:     file format elf32-littlenios2
testreadout.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000230

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000fd5c memsz 0x0000fd5c flags r-x
    LOAD off    0x00010d7c vaddr 0x0000fd7c paddr 0x00011868 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013354 vaddr 0x00013354 paddr 0x00013354 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f804  00000230  00000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000348  0000fa34  0000fa34  00010a34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0000fd7c  00011868  00010d7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00013354  00013354  00013354  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  000134b4  000134b4  00012868  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012868  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e98  00000000  00000000  00012890  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023236  00000000  00000000  00013728  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008e68  00000000  00000000  0003695e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b34c  00000000  00000000  0003f7c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000203c  00000000  00000000  0004ab14  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003899  00000000  00000000  0004cb50  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017acc  00000000  00000000  000503e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00067eb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018d0  00000000  00000000  00067ec8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c756  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c759  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c765  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c766  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006c767  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006c772  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006c77d  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000006  00000000  00000000  0006c788  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000003c  00000000  00000000  0006c78e  2**0
                  CONTENTS, READONLY
 26 .jdi          0000429c  00000000  00000000  0006c7ca  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0005c0d5  00000000  00000000  00070a66  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000230 l    d  .text	00000000 .text
0000fa34 l    d  .rodata	00000000 .rodata
0000fd7c l    d  .rwdata	00000000 .rwdata
00013354 l    d  .bss	00000000 .bss
000134b4 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../testreadout_bsp//obj/HAL/src/crt0.o
00000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 testreadout.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000fac2 l     O .rodata	00000010 zeroes.4404
0000280c l     F .text	000000bc __sbprintf
0000fad2 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002a1c l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004574 l     F .text	00000008 __fp_unlock
00004588 l     F .text	0000019c __sinit.part.1
00004724 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000fd7c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
000101c0 l     O .rwdata	00000020 lc_ctype_charset
000101a0 l     O .rwdata	00000020 lc_message_charset
000101e0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000fb04 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007bf8 l     F .text	000000fc __sprint_r.part.0
0000fc28 l     O .rodata	00000010 zeroes.4349
00009234 l     F .text	000000bc __sbprintf
0000fc38 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d278 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d3a0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d3cc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d4d4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d5d0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d6bc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d8ac l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00011858 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000db34 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000dc84 l     F .text	00000038 alt_dev_reg
000107c8 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000df70 l     F .text	0000020c altera_avalon_jtag_uart_irq
0000e17c l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e91c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000edc0 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000ef20 l     F .text	00000050 alt_get_errno
0000ef70 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00013388 g     O .bss	00000004 alt_instruction_exception_handler
0000723c g     F .text	00000074 _mprec_log10
00007328 g     F .text	0000008c __any_on
000097e8 g     F .text	00000054 _isatty_r
0000fb10 g     O .rodata	00000028 __mprec_tinytens
0000d7e8 g     F .text	0000007c alt_main
000003a8 g     F .text	000000c0 _puts_r
000133b4 g     O .bss	00000100 alt_irq
0000983c g     F .text	00000060 _lseek_r
00011868 g       *ABS*	00000000 __flash_rwdata_start
0000bc54 g     F .text	00000088 .hidden __eqdf2
000134b4 g       *ABS*	00000000 __alt_heap_start
0000036c g     F .text	0000003c printf
00009a54 g     F .text	0000009c _wcrtomb_r
00007ab8 g     F .text	0000005c __sseek
000048d4 g     F .text	00000010 __sinit
000098fc g     F .text	00000140 __swbuf_r
000053a8 g     F .text	0000007c _setlocale_r
0000472c g     F .text	00000078 __sfmoreglue
0000d888 g     F .text	00000024 __malloc_unlock
00006078 g     F .text	0000015c memmove
000048bc g     F .text	00000018 _cleanup
000062fc g     F .text	000000a8 _Balloc
0000bcdc g     F .text	000000dc .hidden __gtdf2
0000f368 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
0000978c g     F .text	0000005c _fstat_r
0001336c g     O .bss	00000004 errno
00007a34 g     F .text	00000008 __seofread
00013374 g     O .bss	00000004 alt_argv
00019828 g       *ABS*	00000000 _gp
00010648 g     O .rwdata	00000180 alt_fd_list
0000f38c g     F .text	00000090 alt_find_dev
00005f30 g     F .text	00000148 memcpy
0000457c g     F .text	0000000c _cleanup_r
0000d090 g     F .text	000000dc .hidden __floatsidf
0000eea4 g     F .text	0000007c alt_io_redirect
0000bdb8 g     F .text	000000f4 .hidden __ltdf2
0000fa34 g       *ABS*	00000000 __DTOR_END__
00000468 g     F .text	00000014 puts
0000f604 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00007918 g     F .text	00000074 __fpclassifyd
00007198 g     F .text	000000a4 __ratio
00009218 g     F .text	0000001c __vfiprintf_internal
0000e37c g     F .text	0000021c altera_avalon_jtag_uart_read
0000033c g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000a8f4 g     F .text	00000064 .hidden __udivsi3
0000d524 g     F .text	000000ac isatty
0000fb60 g     O .rodata	000000c8 __mprec_tens
00005424 g     F .text	0000000c __locale_charset
00013368 g     O .bss	00000004 __malloc_top_pad
00011830 g     O .rwdata	00000004 __mb_cur_max
00005454 g     F .text	0000000c _localeconv_r
00006730 g     F .text	0000003c __i2b
00004d58 g     F .text	000004c8 __sfvwrite_r
0000798c g     F .text	00000054 _sbrk_r
0000989c g     F .text	00000060 _read_r
00011850 g     O .rwdata	00000004 alt_max_fd
00009480 g     F .text	000000f0 _fclose_r
00004544 g     F .text	00000030 fflush
00013364 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a9d8 g     F .text	000008ac .hidden __adddf3
00006f40 g     F .text	0000010c __b2d
0000a238 g     F .text	000005c4 .hidden __umoddi3
0000d70c g     F .text	000000dc lseek
00011828 g     O .rwdata	00000004 _global_impure_ptr
000073b4 g     F .text	00000564 _realloc_r
000134b4 g       *ABS*	00000000 __bss_end
0000ecd0 g     F .text	000000f0 alt_iic_isr_register
0000f260 g     F .text	00000108 alt_tick
00009c3c g     F .text	000005fc .hidden __udivdi3
000096e8 g     F .text	00000024 _fputwc_r
0000fb38 g     O .rodata	00000028 __mprec_bigtens
00006514 g     F .text	00000104 __s2b
0000d16c g     F .text	000000a8 .hidden __floatunsidf
00006c80 g     F .text	00000060 __mcmp
000048f4 g     F .text	00000018 __fp_lock_all
0000ec84 g     F .text	0000004c alt_ic_irq_enabled
0000f1c4 g     F .text	0000009c alt_alarm_stop
0001337c g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
00010620 g     O .rwdata	00000028 alt_dev_null
0000e8fc g     F .text	00000020 alt_dcache_flush_all
00006618 g     F .text	00000068 __hi0bits
0000d010 g     F .text	00000080 .hidden __fixdfsi
00011868 g       *ABS*	00000000 __ram_rwdata_end
00011848 g     O .rwdata	00000008 alt_dev_list
0000db84 g     F .text	00000100 write
0000fd7c g       *ABS*	00000000 __ram_rodata_end
0000d41c g     F .text	000000b8 fstat
0000bdb8 g     F .text	000000f4 .hidden __ledf2
000069f8 g     F .text	00000140 __pow5mult
00007d0c g     F .text	0000150c ___vfiprintf_internal_r
0001335c g     O .bss	00000004 __nlocale_changed
0000a958 g     F .text	00000058 .hidden __umodsi3
000134b4 g       *ABS*	00000000 end
0000dea8 g     F .text	000000c8 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0000fa34 g       *ABS*	00000000 __CTOR_LIST__
000493e0 g       *ABS*	00000000 __alt_stack_pointer
0000d214 g     F .text	00000064 .hidden __clzsi2
0000e598 g     F .text	00000224 altera_avalon_jtag_uart_write
000048e4 g     F .text	00000004 __sfp_lock_acquire
00005e4c g     F .text	000000e4 memchr
00000514 g     F .text	000022dc ___vfprintf_internal_r
00004a48 g     F .text	00000310 _free_r
00005430 g     F .text	00000010 __locale_mb_cur_max
0000f880 g     F .text	00000180 __call_exitprocs
00013358 g     O .bss	00000004 __mlocale_changed
00011834 g     O .rwdata	00000004 __malloc_sbrk_base
00000230 g     F .text	0000003c _start
00013380 g     O .bss	00000004 _alt_tick_rate
00006b38 g     F .text	00000148 __lshift
00013384 g     O .bss	00000004 _alt_nticks
0000d8fc g     F .text	00000104 read
0000dcf4 g     F .text	00000050 alt_sys_init
0000f768 g     F .text	00000118 __register_exitproc
0000676c g     F .text	0000028c __multiply
0000e224 g     F .text	00000068 altera_avalon_jtag_uart_close
0000a9b0 g     F .text	00000028 .hidden __mulsi3
0000fd7c g       *ABS*	00000000 __ram_rwdata_start
0000fa34 g       *ABS*	00000000 __ram_rodata_start
0001338c g     O .bss	00000028 __malloc_current_mallinfo
0000704c g     F .text	0000014c __d2b
0000dd44 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f530 g     F .text	000000d4 alt_get_fd
00009350 g     F .text	00000054 _close_r
0000f6ec g     F .text	0000007c memcmp
0000de04 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000134b4 g       *ABS*	00000000 __alt_stack_base
0000de54 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000028c8 g     F .text	00000154 __swsetup_r
0000b284 g     F .text	000009d0 .hidden __divdf3
000047a4 g     F .text	00000118 __sfp
000072b0 g     F .text	00000078 __copybits
00010218 g     O .rwdata	00000408 __malloc_av_
000048f0 g     F .text	00000004 __sinit_lock_release
0000beac g     F .text	00000868 .hidden __muldf3
000079e0 g     F .text	00000054 __sread
0000f41c g     F .text	00000114 alt_find_file
0000e96c g     F .text	000000a4 alt_dev_llist_insert
0000d864 g     F .text	00000024 __malloc_lock
0000da84 g     F .text	000000b0 sbrk
000044e8 g     F .text	0000005c _fflush_r
000093a4 g     F .text	000000dc _calloc_r
00013354 g       *ABS*	00000000 __bss_start
000061d4 g     F .text	00000128 memset
0000026c g     F .text	000000d0 main
00013378 g     O .bss	00000004 alt_envp
00013360 g     O .bss	00000004 __malloc_max_total_mem
0000dda4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009a3c g     F .text	00000018 __swbuf
00007b14 g     F .text	00000008 __sclose
000493e0 g       *ABS*	00000000 __alt_heap_limit
00009570 g     F .text	00000014 fclose
00002c44 g     F .text	00001688 _dtoa_r
00005640 g     F .text	0000080c _malloc_r
00009bb0 g     F .text	00000030 __ascii_wctomb
00011854 g     O .rwdata	00000004 alt_errno
00005220 g     F .text	000000c4 _fwalk
0000a7fc g     F .text	00000084 .hidden __divsi3
00004924 g     F .text	00000124 _malloc_trim_r
0000fa34 g       *ABS*	00000000 __CTOR_END__
00007b1c g     F .text	000000dc strcmp
0000fa34 g       *ABS*	00000000 __flash_rodata_start
0000fa34 g       *ABS*	00000000 __DTOR_LIST__
0000bc54 g     F .text	00000088 .hidden __nedf2
0000dcbc g     F .text	00000038 alt_irq_init
0000da00 g     F .text	00000084 alt_release_fd
0000fc48 g     O .rodata	00000100 .hidden __clz_tab
00013354 g     O .bss	00000004 _PathLocale
0000f6a0 g     F .text	00000014 atexit
000092f0 g     F .text	00000060 _write_r
00005460 g     F .text	00000018 setlocale
0001182c g     O .rwdata	00000004 _impure_ptr
00013370 g     O .bss	00000004 alt_argc
000042cc g     F .text	0000021c __sflush_r
0000ea70 g     F .text	00000060 _do_dtors
0000544c g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006edc g     F .text	00000064 __ulp
0000490c g     F .text	00000018 __fp_unlock_all
00011840 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005478 g     F .text	0000000c localeconv
0000eaf0 g     F .text	00000050 alt_ic_isr_register
00011868 g       *ABS*	00000000 _edata
000134b4 g       *ABS*	00000000 _end
00009584 g     F .text	00000164 __fputwc
00000230 g       *ABS*	00000000 __ram_exceptions_end
0000e28c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000ebe0 g     F .text	000000a4 alt_ic_irq_disable
00007a3c g     F .text	0000007c __swrite
00011838 g     O .rwdata	00000004 __malloc_trim_threshold
00005440 g     F .text	0000000c __locale_msgcharset
0000f6b4 g     F .text	00000038 exit
000052e4 g     F .text	000000c4 _fwalk_reent
00006ce0 g     F .text	000001fc __mdiff
0000a880 g     F .text	00000074 .hidden __modsi3
000493e0 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
000048e8 g     F .text	00000004 __sfp_lock_release
0000fa00 g     F .text	00000034 _exit
0000e7bc g     F .text	00000140 alt_alarm_start
00005484 g     F .text	000001bc __smakebuf_r
0000047c g     F .text	00000098 strlen
0000f064 g     F .text	00000160 open
0000bcdc g     F .text	000000dc .hidden __gedf2
0001183c g     O .rwdata	00000004 __wctomb
00007cf4 g     F .text	00000018 __sprint_r
0000ead0 g     F .text	00000020 alt_icache_flush_all
0001185c g     O .rwdata	00000004 alt_priority_mask
0000eb40 g     F .text	000000a0 alt_ic_irq_enable
000027f0 g     F .text	0000001c __vfprintf_internal
00009be0 g     F .text	0000005c _wctomb_r
0000c714 g     F .text	000008fc .hidden __subdf3
00006680 g     F .text	000000b0 __lo0bits
00011860 g     O .rwdata	00000008 alt_alarm_list
0000ea10 g     F .text	00000060 _do_ctors
00009af0 g     F .text	000000c0 wcrtomb
0000d2c8 g     F .text	000000d8 close
0000d638 g     F .text	00000084 alt_load
0000970c g     F .text	00000080 fputwc
000048ec g     F .text	00000004 __sinit_lock_acquire
000063cc g     F .text	00000148 __multadd
000063a4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408c14 	ori	at,at,560
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	108ced04 	addi	r2,r2,13236
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	108ced04 	addi	r2,r2,13236
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_data_end+0xfffb6d4c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_data_end+0xfffb6d40>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e4:	00bfffc4 	movi	r2,-1
 1e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1f0:	d0a6d817 	ldw	r2,-25760(gp)
 1f4:	10000726 	beq	r2,zero,214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f8:	d0a6d817 	ldw	r2,-25760(gp)
 1fc:	e0fffd17 	ldw	r3,-12(fp)
 200:	e1bffe17 	ldw	r6,-8(fp)
 204:	e17fff17 	ldw	r5,-4(fp)
 208:	1809883a 	mov	r4,r3
 20c:	103ee83a 	callr	r2
 210:	00000206 	br	21c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 218:	0005883a 	mov	r2,zero
}
 21c:	e037883a 	mov	sp,fp
 220:	dfc00117 	ldw	ra,4(sp)
 224:	df000017 	ldw	fp,0(sp)
 228:	dec00204 	addi	sp,sp,8
 22c:	f800283a 	ret

Disassembly of section .text:

00000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     230:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
     234:	dee4f814 	ori	sp,sp,37856
    movhi gp, %hi(_gp)
     238:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     23c:	d6a60a14 	ori	gp,gp,38952
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     240:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     244:	108cd514 	ori	r2,r2,13140

    movhi r3, %hi(__bss_end)
     248:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     24c:	18cd2d14 	ori	r3,r3,13492

    beq r2, r3, 1f
     250:	10c00326 	beq	r2,r3,260 <_start+0x30>

0:
    stw zero, (r2)
     254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     25c:	10fffd36 	bltu	r2,r3,254 <__alt_data_end+0xfffb6e74>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     260:	000d6380 	call	d638 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     264:	000d7e80 	call	d7e8 <alt_main>

00000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     268:	003fff06 	br	268 <__alt_data_end+0xfffb6e88>

0000026c <main>:
#include "system.h"
#include "altera_avalon_jtag_uart_regs.h"
#include "altera_avalon_pio_regs.h"

int main()
{
     26c:	defffa04 	addi	sp,sp,-24
     270:	dfc00515 	stw	ra,20(sp)
     274:	df000415 	stw	fp,16(sp)
     278:	df000404 	addi	fp,sp,16
	printf("Hello world!\n");
     27c:	01000074 	movhi	r4,1
     280:	213e8d04 	addi	r4,r4,-1484
     284:	00004680 	call	468 <puts>

	int index = 0;
     288:	e03ffc15 	stw	zero,-16(fp)
	int data, data2;

	int version = IORD_ALTERA_AVALON_JTAG_UART_DATA(VERSION_INFO_BASE);
     28c:	00844034 	movhi	r2,4352
     290:	10800037 	ldwio	r2,0(r2)
     294:	e0bffd15 	stw	r2,-12(fp)
	printf ("\n ** Version: %x ** \n\n",version);
     298:	e17ffd17 	ldw	r5,-12(fp)
     29c:	01000074 	movhi	r4,1
     2a0:	213e9104 	addi	r4,r4,-1468
     2a4:	000036c0 	call	36c <printf>

	IOWR_ALTERA_AVALON_PIO_DATA(WRITE_EN_PIO_BASE,1);
     2a8:	00c00044 	movi	r3,1
     2ac:	00880034 	movhi	r2,8192
     2b0:	10c00035 	stwio	r3,0(r2)

	while (1) {
		++index;
     2b4:	e0bffc17 	ldw	r2,-16(fp)
     2b8:	10800044 	addi	r2,r2,1
     2bc:	e0bffc15 	stw	r2,-16(fp)
		data = IORD_ALTERA_AVALON_JTAG_UART_DATA(FIFO_0_OUT_BASE);
     2c0:	00840074 	movhi	r2,4097
     2c4:	10a04004 	addi	r2,r2,-32512
     2c8:	10800037 	ldwio	r2,0(r2)
     2cc:	e0bffe15 	stw	r2,-8(fp)
		data2 = IORD_ALTERA_AVALON_JTAG_UART_DATA(FIFO_1_OUT_BASE);
     2d0:	00840074 	movhi	r2,4097
     2d4:	10a44004 	addi	r2,r2,-28416
     2d8:	10800037 	ldwio	r2,0(r2)
     2dc:	e0bfff15 	stw	r2,-4(fp)
		printf("%d,%d,%d\n",index,data,data2);
     2e0:	e1ffff17 	ldw	r7,-4(fp)
     2e4:	e1bffe17 	ldw	r6,-8(fp)
     2e8:	e17ffc17 	ldw	r5,-16(fp)
     2ec:	01000074 	movhi	r4,1
     2f0:	213e9704 	addi	r4,r4,-1444
     2f4:	000036c0 	call	36c <printf>
		if (index==500) break;
     2f8:	e0bffc17 	ldw	r2,-16(fp)
     2fc:	10807d18 	cmpnei	r2,r2,500
     300:	10000126 	beq	r2,zero,308 <main+0x9c>
	}
     304:	003feb06 	br	2b4 <__alt_data_end+0xfffb6ed4>
	while (1) {
		++index;
		data = IORD_ALTERA_AVALON_JTAG_UART_DATA(FIFO_0_OUT_BASE);
		data2 = IORD_ALTERA_AVALON_JTAG_UART_DATA(FIFO_1_OUT_BASE);
		printf("%d,%d,%d\n",index,data,data2);
		if (index==500) break;
     308:	0001883a 	nop
	}

	IOWR_ALTERA_AVALON_PIO_DATA(WRITE_EN_PIO_BASE,0);
     30c:	0007883a 	mov	r3,zero
     310:	00880034 	movhi	r2,8192
     314:	10c00035 	stwio	r3,0(r2)

	printf("End of the code.\n");
     318:	01000074 	movhi	r4,1
     31c:	213e9a04 	addi	r4,r4,-1432
     320:	00004680 	call	468 <puts>
	return 0;
     324:	0005883a 	mov	r2,zero
}
     328:	e037883a 	mov	sp,fp
     32c:	dfc00117 	ldw	ra,4(sp)
     330:	df000017 	ldw	fp,0(sp)
     334:	dec00204 	addi	sp,sp,8
     338:	f800283a 	ret

0000033c <_printf_r>:
     33c:	defffd04 	addi	sp,sp,-12
     340:	2805883a 	mov	r2,r5
     344:	dfc00015 	stw	ra,0(sp)
     348:	d9800115 	stw	r6,4(sp)
     34c:	d9c00215 	stw	r7,8(sp)
     350:	21400217 	ldw	r5,8(r4)
     354:	d9c00104 	addi	r7,sp,4
     358:	100d883a 	mov	r6,r2
     35c:	00005140 	call	514 <___vfprintf_internal_r>
     360:	dfc00017 	ldw	ra,0(sp)
     364:	dec00304 	addi	sp,sp,12
     368:	f800283a 	ret

0000036c <printf>:
     36c:	defffc04 	addi	sp,sp,-16
     370:	dfc00015 	stw	ra,0(sp)
     374:	d9400115 	stw	r5,4(sp)
     378:	d9800215 	stw	r6,8(sp)
     37c:	d9c00315 	stw	r7,12(sp)
     380:	00800074 	movhi	r2,1
     384:	10860b04 	addi	r2,r2,6188
     388:	10800017 	ldw	r2,0(r2)
     38c:	200b883a 	mov	r5,r4
     390:	d9800104 	addi	r6,sp,4
     394:	11000217 	ldw	r4,8(r2)
     398:	00027f00 	call	27f0 <__vfprintf_internal>
     39c:	dfc00017 	ldw	ra,0(sp)
     3a0:	dec00404 	addi	sp,sp,16
     3a4:	f800283a 	ret

000003a8 <_puts_r>:
     3a8:	defff604 	addi	sp,sp,-40
     3ac:	dc000715 	stw	r16,28(sp)
     3b0:	2021883a 	mov	r16,r4
     3b4:	2809883a 	mov	r4,r5
     3b8:	dc400815 	stw	r17,32(sp)
     3bc:	dfc00915 	stw	ra,36(sp)
     3c0:	2823883a 	mov	r17,r5
     3c4:	000047c0 	call	47c <strlen>
     3c8:	10c00044 	addi	r3,r2,1
     3cc:	d8800115 	stw	r2,4(sp)
     3d0:	00800074 	movhi	r2,1
     3d4:	10be9f04 	addi	r2,r2,-1412
     3d8:	d8800215 	stw	r2,8(sp)
     3dc:	00800044 	movi	r2,1
     3e0:	d8800315 	stw	r2,12(sp)
     3e4:	00800084 	movi	r2,2
     3e8:	dc400015 	stw	r17,0(sp)
     3ec:	d8c00615 	stw	r3,24(sp)
     3f0:	dec00415 	stw	sp,16(sp)
     3f4:	d8800515 	stw	r2,20(sp)
     3f8:	80000226 	beq	r16,zero,404 <_puts_r+0x5c>
     3fc:	80800e17 	ldw	r2,56(r16)
     400:	10001426 	beq	r2,zero,454 <_puts_r+0xac>
     404:	81400217 	ldw	r5,8(r16)
     408:	2880030b 	ldhu	r2,12(r5)
     40c:	10c8000c 	andi	r3,r2,8192
     410:	1800061e 	bne	r3,zero,42c <_puts_r+0x84>
     414:	29001917 	ldw	r4,100(r5)
     418:	00f7ffc4 	movi	r3,-8193
     41c:	10880014 	ori	r2,r2,8192
     420:	20c6703a 	and	r3,r4,r3
     424:	2880030d 	sth	r2,12(r5)
     428:	28c01915 	stw	r3,100(r5)
     42c:	d9800404 	addi	r6,sp,16
     430:	8009883a 	mov	r4,r16
     434:	0004d580 	call	4d58 <__sfvwrite_r>
     438:	1000091e 	bne	r2,zero,460 <_puts_r+0xb8>
     43c:	00800284 	movi	r2,10
     440:	dfc00917 	ldw	ra,36(sp)
     444:	dc400817 	ldw	r17,32(sp)
     448:	dc000717 	ldw	r16,28(sp)
     44c:	dec00a04 	addi	sp,sp,40
     450:	f800283a 	ret
     454:	8009883a 	mov	r4,r16
     458:	00048d40 	call	48d4 <__sinit>
     45c:	003fe906 	br	404 <__alt_data_end+0xfffb7024>
     460:	00bfffc4 	movi	r2,-1
     464:	003ff606 	br	440 <__alt_data_end+0xfffb7060>

00000468 <puts>:
     468:	00800074 	movhi	r2,1
     46c:	10860b04 	addi	r2,r2,6188
     470:	200b883a 	mov	r5,r4
     474:	11000017 	ldw	r4,0(r2)
     478:	00003a81 	jmpi	3a8 <_puts_r>

0000047c <strlen>:
     47c:	208000cc 	andi	r2,r4,3
     480:	10002026 	beq	r2,zero,504 <strlen+0x88>
     484:	20800007 	ldb	r2,0(r4)
     488:	10002026 	beq	r2,zero,50c <strlen+0x90>
     48c:	2005883a 	mov	r2,r4
     490:	00000206 	br	49c <strlen+0x20>
     494:	10c00007 	ldb	r3,0(r2)
     498:	18001826 	beq	r3,zero,4fc <strlen+0x80>
     49c:	10800044 	addi	r2,r2,1
     4a0:	10c000cc 	andi	r3,r2,3
     4a4:	183ffb1e 	bne	r3,zero,494 <__alt_data_end+0xfffb70b4>
     4a8:	10c00017 	ldw	r3,0(r2)
     4ac:	01ffbff4 	movhi	r7,65279
     4b0:	39ffbfc4 	addi	r7,r7,-257
     4b4:	00ca303a 	nor	r5,zero,r3
     4b8:	01a02074 	movhi	r6,32897
     4bc:	19c7883a 	add	r3,r3,r7
     4c0:	31a02004 	addi	r6,r6,-32640
     4c4:	1946703a 	and	r3,r3,r5
     4c8:	1986703a 	and	r3,r3,r6
     4cc:	1800091e 	bne	r3,zero,4f4 <strlen+0x78>
     4d0:	10800104 	addi	r2,r2,4
     4d4:	10c00017 	ldw	r3,0(r2)
     4d8:	19cb883a 	add	r5,r3,r7
     4dc:	00c6303a 	nor	r3,zero,r3
     4e0:	28c6703a 	and	r3,r5,r3
     4e4:	1986703a 	and	r3,r3,r6
     4e8:	183ff926 	beq	r3,zero,4d0 <__alt_data_end+0xfffb70f0>
     4ec:	00000106 	br	4f4 <strlen+0x78>
     4f0:	10800044 	addi	r2,r2,1
     4f4:	10c00007 	ldb	r3,0(r2)
     4f8:	183ffd1e 	bne	r3,zero,4f0 <__alt_data_end+0xfffb7110>
     4fc:	1105c83a 	sub	r2,r2,r4
     500:	f800283a 	ret
     504:	2005883a 	mov	r2,r4
     508:	003fe706 	br	4a8 <__alt_data_end+0xfffb70c8>
     50c:	0005883a 	mov	r2,zero
     510:	f800283a 	ret

00000514 <___vfprintf_internal_r>:
     514:	deffb804 	addi	sp,sp,-288
     518:	dfc04715 	stw	ra,284(sp)
     51c:	ddc04515 	stw	r23,276(sp)
     520:	dd404315 	stw	r21,268(sp)
     524:	d9002d15 	stw	r4,180(sp)
     528:	282f883a 	mov	r23,r5
     52c:	302b883a 	mov	r21,r6
     530:	d9c02e15 	stw	r7,184(sp)
     534:	df004615 	stw	fp,280(sp)
     538:	dd804415 	stw	r22,272(sp)
     53c:	dd004215 	stw	r20,264(sp)
     540:	dcc04115 	stw	r19,260(sp)
     544:	dc804015 	stw	r18,256(sp)
     548:	dc403f15 	stw	r17,252(sp)
     54c:	dc003e15 	stw	r16,248(sp)
     550:	00054540 	call	5454 <_localeconv_r>
     554:	10800017 	ldw	r2,0(r2)
     558:	1009883a 	mov	r4,r2
     55c:	d8803415 	stw	r2,208(sp)
     560:	000047c0 	call	47c <strlen>
     564:	d8803715 	stw	r2,220(sp)
     568:	d8802d17 	ldw	r2,180(sp)
     56c:	10000226 	beq	r2,zero,578 <___vfprintf_internal_r+0x64>
     570:	10800e17 	ldw	r2,56(r2)
     574:	1000fb26 	beq	r2,zero,964 <___vfprintf_internal_r+0x450>
     578:	b880030b 	ldhu	r2,12(r23)
     57c:	10c8000c 	andi	r3,r2,8192
     580:	1800061e 	bne	r3,zero,59c <___vfprintf_internal_r+0x88>
     584:	b9001917 	ldw	r4,100(r23)
     588:	00f7ffc4 	movi	r3,-8193
     58c:	10880014 	ori	r2,r2,8192
     590:	20c6703a 	and	r3,r4,r3
     594:	b880030d 	sth	r2,12(r23)
     598:	b8c01915 	stw	r3,100(r23)
     59c:	10c0020c 	andi	r3,r2,8
     5a0:	1800c326 	beq	r3,zero,8b0 <___vfprintf_internal_r+0x39c>
     5a4:	b8c00417 	ldw	r3,16(r23)
     5a8:	1800c126 	beq	r3,zero,8b0 <___vfprintf_internal_r+0x39c>
     5ac:	1080068c 	andi	r2,r2,26
     5b0:	00c00284 	movi	r3,10
     5b4:	10c0c626 	beq	r2,r3,8d0 <___vfprintf_internal_r+0x3bc>
     5b8:	d8c00404 	addi	r3,sp,16
     5bc:	05000074 	movhi	r20,1
     5c0:	d9001e04 	addi	r4,sp,120
     5c4:	a53eb084 	addi	r20,r20,-1342
     5c8:	d8c01e15 	stw	r3,120(sp)
     5cc:	d8002015 	stw	zero,128(sp)
     5d0:	d8001f15 	stw	zero,124(sp)
     5d4:	d8003315 	stw	zero,204(sp)
     5d8:	d8003615 	stw	zero,216(sp)
     5dc:	d8003815 	stw	zero,224(sp)
     5e0:	1811883a 	mov	r8,r3
     5e4:	d8003915 	stw	zero,228(sp)
     5e8:	d8003a15 	stw	zero,232(sp)
     5ec:	d8002f15 	stw	zero,188(sp)
     5f0:	d9002815 	stw	r4,160(sp)
     5f4:	a8800007 	ldb	r2,0(r21)
     5f8:	10028b26 	beq	r2,zero,1028 <___vfprintf_internal_r+0xb14>
     5fc:	00c00944 	movi	r3,37
     600:	a823883a 	mov	r17,r21
     604:	10c0021e 	bne	r2,r3,610 <___vfprintf_internal_r+0xfc>
     608:	00001406 	br	65c <___vfprintf_internal_r+0x148>
     60c:	10c00326 	beq	r2,r3,61c <___vfprintf_internal_r+0x108>
     610:	8c400044 	addi	r17,r17,1
     614:	88800007 	ldb	r2,0(r17)
     618:	103ffc1e 	bne	r2,zero,60c <__alt_data_end+0xfffb722c>
     61c:	8d61c83a 	sub	r16,r17,r21
     620:	80000e26 	beq	r16,zero,65c <___vfprintf_internal_r+0x148>
     624:	d8c02017 	ldw	r3,128(sp)
     628:	d8801f17 	ldw	r2,124(sp)
     62c:	45400015 	stw	r21,0(r8)
     630:	1c07883a 	add	r3,r3,r16
     634:	10800044 	addi	r2,r2,1
     638:	d8c02015 	stw	r3,128(sp)
     63c:	44000115 	stw	r16,4(r8)
     640:	d8801f15 	stw	r2,124(sp)
     644:	00c001c4 	movi	r3,7
     648:	1880a916 	blt	r3,r2,8f0 <___vfprintf_internal_r+0x3dc>
     64c:	42000204 	addi	r8,r8,8
     650:	d9402f17 	ldw	r5,188(sp)
     654:	2c0b883a 	add	r5,r5,r16
     658:	d9402f15 	stw	r5,188(sp)
     65c:	88800007 	ldb	r2,0(r17)
     660:	1000aa26 	beq	r2,zero,90c <___vfprintf_internal_r+0x3f8>
     664:	8d400044 	addi	r21,r17,1
     668:	8c400047 	ldb	r17,1(r17)
     66c:	0021883a 	mov	r16,zero
     670:	00bfffc4 	movi	r2,-1
     674:	0025883a 	mov	r18,zero
     678:	dc002905 	stb	r16,164(sp)
     67c:	d8002785 	stb	zero,158(sp)
     680:	d8002b05 	stb	zero,172(sp)
     684:	d8802a15 	stw	r2,168(sp)
     688:	d8003115 	stw	zero,196(sp)
     68c:	04c01604 	movi	r19,88
     690:	05800244 	movi	r22,9
     694:	9021883a 	mov	r16,r18
     698:	4039883a 	mov	fp,r8
     69c:	ad400044 	addi	r21,r21,1
     6a0:	88bff804 	addi	r2,r17,-32
     6a4:	98833236 	bltu	r19,r2,1370 <___vfprintf_internal_r+0xe5c>
     6a8:	100490ba 	slli	r2,r2,2
     6ac:	00c00034 	movhi	r3,0
     6b0:	18c1b004 	addi	r3,r3,1728
     6b4:	10c5883a 	add	r2,r2,r3
     6b8:	10800017 	ldw	r2,0(r2)
     6bc:	1000683a 	jmp	r2
     6c0:	00001268 	cmpgeui	zero,zero,73
     6c4:	00001370 	cmpltui	zero,zero,77
     6c8:	00001370 	cmpltui	zero,zero,77
     6cc:	00001288 	cmpgei	zero,zero,74
     6d0:	00001370 	cmpltui	zero,zero,77
     6d4:	00001370 	cmpltui	zero,zero,77
     6d8:	00001370 	cmpltui	zero,zero,77
     6dc:	00001370 	cmpltui	zero,zero,77
     6e0:	00001370 	cmpltui	zero,zero,77
     6e4:	00001370 	cmpltui	zero,zero,77
     6e8:	00000970 	cmpltui	zero,zero,37
     6ec:	00001178 	rdprs	zero,zero,69
     6f0:	00001370 	cmpltui	zero,zero,77
     6f4:	00000834 	movhi	zero,32
     6f8:	00000994 	movui	zero,38
     6fc:	00001370 	cmpltui	zero,zero,77
     700:	000009e4 	muli	zero,zero,39
     704:	000009f0 	cmpltui	zero,zero,39
     708:	000009f0 	cmpltui	zero,zero,39
     70c:	000009f0 	cmpltui	zero,zero,39
     710:	000009f0 	cmpltui	zero,zero,39
     714:	000009f0 	cmpltui	zero,zero,39
     718:	000009f0 	cmpltui	zero,zero,39
     71c:	000009f0 	cmpltui	zero,zero,39
     720:	000009f0 	cmpltui	zero,zero,39
     724:	000009f0 	cmpltui	zero,zero,39
     728:	00001370 	cmpltui	zero,zero,77
     72c:	00001370 	cmpltui	zero,zero,77
     730:	00001370 	cmpltui	zero,zero,77
     734:	00001370 	cmpltui	zero,zero,77
     738:	00001370 	cmpltui	zero,zero,77
     73c:	00001370 	cmpltui	zero,zero,77
     740:	00001370 	cmpltui	zero,zero,77
     744:	00001370 	cmpltui	zero,zero,77
     748:	00001370 	cmpltui	zero,zero,77
     74c:	00001370 	cmpltui	zero,zero,77
     750:	00000a2c 	andhi	zero,zero,40
     754:	00000af4 	movhi	zero,43
     758:	00001370 	cmpltui	zero,zero,77
     75c:	00000af4 	movhi	zero,43
     760:	00001370 	cmpltui	zero,zero,77
     764:	00001370 	cmpltui	zero,zero,77
     768:	00001370 	cmpltui	zero,zero,77
     76c:	00001370 	cmpltui	zero,zero,77
     770:	00000ba0 	cmpeqi	zero,zero,46
     774:	00001370 	cmpltui	zero,zero,77
     778:	00001370 	cmpltui	zero,zero,77
     77c:	00000bac 	andhi	zero,zero,46
     780:	00001370 	cmpltui	zero,zero,77
     784:	00001370 	cmpltui	zero,zero,77
     788:	00001370 	cmpltui	zero,zero,77
     78c:	00001370 	cmpltui	zero,zero,77
     790:	00001370 	cmpltui	zero,zero,77
     794:	00001030 	cmpltui	zero,zero,64
     798:	00001370 	cmpltui	zero,zero,77
     79c:	00001370 	cmpltui	zero,zero,77
     7a0:	0000109c 	xori	zero,zero,66
     7a4:	00001370 	cmpltui	zero,zero,77
     7a8:	00001370 	cmpltui	zero,zero,77
     7ac:	00001370 	cmpltui	zero,zero,77
     7b0:	00001370 	cmpltui	zero,zero,77
     7b4:	00001370 	cmpltui	zero,zero,77
     7b8:	00001370 	cmpltui	zero,zero,77
     7bc:	00001370 	cmpltui	zero,zero,77
     7c0:	00001370 	cmpltui	zero,zero,77
     7c4:	00001370 	cmpltui	zero,zero,77
     7c8:	00001370 	cmpltui	zero,zero,77
     7cc:	00001314 	movui	zero,76
     7d0:	00001294 	movui	zero,74
     7d4:	00000af4 	movhi	zero,43
     7d8:	00000af4 	movhi	zero,43
     7dc:	00000af4 	movhi	zero,43
     7e0:	000012b4 	movhi	zero,74
     7e4:	00001294 	movui	zero,74
     7e8:	00001370 	cmpltui	zero,zero,77
     7ec:	00001370 	cmpltui	zero,zero,77
     7f0:	000012c0 	call	12c <alt_irq_handler+0x30>
     7f4:	00001370 	cmpltui	zero,zero,77
     7f8:	000012d4 	movui	zero,75
     7fc:	00001158 	cmpnei	zero,zero,69
     800:	00000840 	call	84 <__flash_exceptions_start+0x64>
     804:	00001190 	cmplti	zero,zero,70
     808:	00001370 	cmpltui	zero,zero,77
     80c:	0000119c 	xori	zero,zero,70
     810:	00001370 	cmpltui	zero,zero,77
     814:	00001200 	call	120 <alt_irq_handler+0x24>
     818:	00001370 	cmpltui	zero,zero,77
     81c:	00001370 	cmpltui	zero,zero,77
     820:	00001220 	cmpeqi	zero,zero,72
     824:	d8c03117 	ldw	r3,196(sp)
     828:	d8802e15 	stw	r2,184(sp)
     82c:	00c7c83a 	sub	r3,zero,r3
     830:	d8c03115 	stw	r3,196(sp)
     834:	84000114 	ori	r16,r16,4
     838:	ac400007 	ldb	r17,0(r21)
     83c:	003f9706 	br	69c <__alt_data_end+0xfffb72bc>
     840:	00800c04 	movi	r2,48
     844:	d8802705 	stb	r2,156(sp)
     848:	00801e04 	movi	r2,120
     84c:	d8802745 	stb	r2,157(sp)
     850:	d9002a17 	ldw	r4,168(sp)
     854:	d8802e17 	ldw	r2,184(sp)
     858:	d8002785 	stb	zero,158(sp)
     85c:	e011883a 	mov	r8,fp
     860:	10c00104 	addi	r3,r2,4
     864:	14c00017 	ldw	r19,0(r2)
     868:	002d883a 	mov	r22,zero
     86c:	80800094 	ori	r2,r16,2
     870:	2002ca16 	blt	r4,zero,139c <___vfprintf_internal_r+0xe88>
     874:	00bfdfc4 	movi	r2,-129
     878:	80a4703a 	and	r18,r16,r2
     87c:	d8c02e15 	stw	r3,184(sp)
     880:	94800094 	ori	r18,r18,2
     884:	9802b41e 	bne	r19,zero,1358 <___vfprintf_internal_r+0xe44>
     888:	01400074 	movhi	r5,1
     88c:	297ea904 	addi	r5,r5,-1372
     890:	d9403915 	stw	r5,228(sp)
     894:	04401e04 	movi	r17,120
     898:	d8802a17 	ldw	r2,168(sp)
     89c:	0039883a 	mov	fp,zero
     8a0:	1001fa26 	beq	r2,zero,108c <___vfprintf_internal_r+0xb78>
     8a4:	0027883a 	mov	r19,zero
     8a8:	002d883a 	mov	r22,zero
     8ac:	00021906 	br	1114 <___vfprintf_internal_r+0xc00>
     8b0:	d9002d17 	ldw	r4,180(sp)
     8b4:	b80b883a 	mov	r5,r23
     8b8:	00028c80 	call	28c8 <__swsetup_r>
     8bc:	1005dc1e 	bne	r2,zero,2030 <___vfprintf_internal_r+0x1b1c>
     8c0:	b880030b 	ldhu	r2,12(r23)
     8c4:	00c00284 	movi	r3,10
     8c8:	1080068c 	andi	r2,r2,26
     8cc:	10ff3a1e 	bne	r2,r3,5b8 <__alt_data_end+0xfffb71d8>
     8d0:	b880038f 	ldh	r2,14(r23)
     8d4:	103f3816 	blt	r2,zero,5b8 <__alt_data_end+0xfffb71d8>
     8d8:	d9c02e17 	ldw	r7,184(sp)
     8dc:	d9002d17 	ldw	r4,180(sp)
     8e0:	a80d883a 	mov	r6,r21
     8e4:	b80b883a 	mov	r5,r23
     8e8:	000280c0 	call	280c <__sbprintf>
     8ec:	00001106 	br	934 <___vfprintf_internal_r+0x420>
     8f0:	d9002d17 	ldw	r4,180(sp)
     8f4:	d9801e04 	addi	r6,sp,120
     8f8:	b80b883a 	mov	r5,r23
     8fc:	0007cf40 	call	7cf4 <__sprint_r>
     900:	1000081e 	bne	r2,zero,924 <___vfprintf_internal_r+0x410>
     904:	da000404 	addi	r8,sp,16
     908:	003f5106 	br	650 <__alt_data_end+0xfffb7270>
     90c:	d8802017 	ldw	r2,128(sp)
     910:	10000426 	beq	r2,zero,924 <___vfprintf_internal_r+0x410>
     914:	d9002d17 	ldw	r4,180(sp)
     918:	d9801e04 	addi	r6,sp,120
     91c:	b80b883a 	mov	r5,r23
     920:	0007cf40 	call	7cf4 <__sprint_r>
     924:	b880030b 	ldhu	r2,12(r23)
     928:	1080100c 	andi	r2,r2,64
     92c:	1005c01e 	bne	r2,zero,2030 <___vfprintf_internal_r+0x1b1c>
     930:	d8802f17 	ldw	r2,188(sp)
     934:	dfc04717 	ldw	ra,284(sp)
     938:	df004617 	ldw	fp,280(sp)
     93c:	ddc04517 	ldw	r23,276(sp)
     940:	dd804417 	ldw	r22,272(sp)
     944:	dd404317 	ldw	r21,268(sp)
     948:	dd004217 	ldw	r20,264(sp)
     94c:	dcc04117 	ldw	r19,260(sp)
     950:	dc804017 	ldw	r18,256(sp)
     954:	dc403f17 	ldw	r17,252(sp)
     958:	dc003e17 	ldw	r16,248(sp)
     95c:	dec04804 	addi	sp,sp,288
     960:	f800283a 	ret
     964:	d9002d17 	ldw	r4,180(sp)
     968:	00048d40 	call	48d4 <__sinit>
     96c:	003f0206 	br	578 <__alt_data_end+0xfffb7198>
     970:	d9002e17 	ldw	r4,184(sp)
     974:	d9402e17 	ldw	r5,184(sp)
     978:	21000017 	ldw	r4,0(r4)
     97c:	28800104 	addi	r2,r5,4
     980:	d9003115 	stw	r4,196(sp)
     984:	203fa716 	blt	r4,zero,824 <__alt_data_end+0xfffb7444>
     988:	d8802e15 	stw	r2,184(sp)
     98c:	ac400007 	ldb	r17,0(r21)
     990:	003f4206 	br	69c <__alt_data_end+0xfffb72bc>
     994:	ac400007 	ldb	r17,0(r21)
     998:	01000a84 	movi	r4,42
     99c:	a8c00044 	addi	r3,r21,1
     9a0:	89075826 	beq	r17,r4,2704 <___vfprintf_internal_r+0x21f0>
     9a4:	8cbff404 	addi	r18,r17,-48
     9a8:	b486ae36 	bltu	r22,r18,2464 <___vfprintf_internal_r+0x1f50>
     9ac:	0009883a 	mov	r4,zero
     9b0:	1823883a 	mov	r17,r3
     9b4:	01400284 	movi	r5,10
     9b8:	000a9b00 	call	a9b0 <__mulsi3>
     9bc:	88c00007 	ldb	r3,0(r17)
     9c0:	1489883a 	add	r4,r2,r18
     9c4:	8d400044 	addi	r21,r17,1
     9c8:	1cbff404 	addi	r18,r3,-48
     9cc:	a823883a 	mov	r17,r21
     9d0:	b4bff82e 	bgeu	r22,r18,9b4 <__alt_data_end+0xfffb75d4>
     9d4:	1823883a 	mov	r17,r3
     9d8:	2005f616 	blt	r4,zero,21b4 <___vfprintf_internal_r+0x1ca0>
     9dc:	d9002a15 	stw	r4,168(sp)
     9e0:	003f2f06 	br	6a0 <__alt_data_end+0xfffb72c0>
     9e4:	84002014 	ori	r16,r16,128
     9e8:	ac400007 	ldb	r17,0(r21)
     9ec:	003f2b06 	br	69c <__alt_data_end+0xfffb72bc>
     9f0:	8cbff404 	addi	r18,r17,-48
     9f4:	d8003115 	stw	zero,196(sp)
     9f8:	0009883a 	mov	r4,zero
     9fc:	a823883a 	mov	r17,r21
     a00:	01400284 	movi	r5,10
     a04:	000a9b00 	call	a9b0 <__mulsi3>
     a08:	88c00007 	ldb	r3,0(r17)
     a0c:	9089883a 	add	r4,r18,r2
     a10:	ad400044 	addi	r21,r21,1
     a14:	1cbff404 	addi	r18,r3,-48
     a18:	a823883a 	mov	r17,r21
     a1c:	b4bff82e 	bgeu	r22,r18,a00 <__alt_data_end+0xfffb7620>
     a20:	1823883a 	mov	r17,r3
     a24:	d9003115 	stw	r4,196(sp)
     a28:	003f1d06 	br	6a0 <__alt_data_end+0xfffb72c0>
     a2c:	8025883a 	mov	r18,r16
     a30:	dc002903 	ldbu	r16,164(sp)
     a34:	e011883a 	mov	r8,fp
     a38:	84003fcc 	andi	r16,r16,255
     a3c:	8007531e 	bne	r16,zero,278c <___vfprintf_internal_r+0x2278>
     a40:	94800414 	ori	r18,r18,16
     a44:	9080080c 	andi	r2,r18,32
     a48:	1003a326 	beq	r2,zero,18d8 <___vfprintf_internal_r+0x13c4>
     a4c:	d9002e17 	ldw	r4,184(sp)
     a50:	20800117 	ldw	r2,4(r4)
     a54:	24c00017 	ldw	r19,0(r4)
     a58:	21000204 	addi	r4,r4,8
     a5c:	d9002e15 	stw	r4,184(sp)
     a60:	102d883a 	mov	r22,r2
     a64:	10047316 	blt	r2,zero,1c34 <___vfprintf_internal_r+0x1720>
     a68:	d9002a17 	ldw	r4,168(sp)
     a6c:	df002783 	ldbu	fp,158(sp)
     a70:	2003e416 	blt	r4,zero,1a04 <___vfprintf_internal_r+0x14f0>
     a74:	00ffdfc4 	movi	r3,-129
     a78:	9d84b03a 	or	r2,r19,r22
     a7c:	90e4703a 	and	r18,r18,r3
     a80:	10018026 	beq	r2,zero,1084 <___vfprintf_internal_r+0xb70>
     a84:	b003ab26 	beq	r22,zero,1934 <___vfprintf_internal_r+0x1420>
     a88:	dc402915 	stw	r17,164(sp)
     a8c:	dc001e04 	addi	r16,sp,120
     a90:	b023883a 	mov	r17,r22
     a94:	402d883a 	mov	r22,r8
     a98:	9809883a 	mov	r4,r19
     a9c:	880b883a 	mov	r5,r17
     aa0:	01800284 	movi	r6,10
     aa4:	000f883a 	mov	r7,zero
     aa8:	000a2380 	call	a238 <__umoddi3>
     aac:	10800c04 	addi	r2,r2,48
     ab0:	843fffc4 	addi	r16,r16,-1
     ab4:	9809883a 	mov	r4,r19
     ab8:	880b883a 	mov	r5,r17
     abc:	80800005 	stb	r2,0(r16)
     ac0:	01800284 	movi	r6,10
     ac4:	000f883a 	mov	r7,zero
     ac8:	0009c3c0 	call	9c3c <__udivdi3>
     acc:	1027883a 	mov	r19,r2
     ad0:	10c4b03a 	or	r2,r2,r3
     ad4:	1823883a 	mov	r17,r3
     ad8:	103fef1e 	bne	r2,zero,a98 <__alt_data_end+0xfffb76b8>
     adc:	d8c02817 	ldw	r3,160(sp)
     ae0:	dc402917 	ldw	r17,164(sp)
     ae4:	b011883a 	mov	r8,r22
     ae8:	1c07c83a 	sub	r3,r3,r16
     aec:	d8c02b15 	stw	r3,172(sp)
     af0:	00005f06 	br	c70 <___vfprintf_internal_r+0x75c>
     af4:	8025883a 	mov	r18,r16
     af8:	dc002903 	ldbu	r16,164(sp)
     afc:	e011883a 	mov	r8,fp
     b00:	84003fcc 	andi	r16,r16,255
     b04:	80071e1e 	bne	r16,zero,2780 <___vfprintf_internal_r+0x226c>
     b08:	9080020c 	andi	r2,r18,8
     b0c:	1004af26 	beq	r2,zero,1dcc <___vfprintf_internal_r+0x18b8>
     b10:	d9002e17 	ldw	r4,184(sp)
     b14:	d9402e17 	ldw	r5,184(sp)
     b18:	d8802e17 	ldw	r2,184(sp)
     b1c:	21000017 	ldw	r4,0(r4)
     b20:	29400117 	ldw	r5,4(r5)
     b24:	10800204 	addi	r2,r2,8
     b28:	d9003615 	stw	r4,216(sp)
     b2c:	d9403815 	stw	r5,224(sp)
     b30:	d8802e15 	stw	r2,184(sp)
     b34:	d9003617 	ldw	r4,216(sp)
     b38:	d9403817 	ldw	r5,224(sp)
     b3c:	da003d15 	stw	r8,244(sp)
     b40:	04000044 	movi	r16,1
     b44:	00079180 	call	7918 <__fpclassifyd>
     b48:	da003d17 	ldw	r8,244(sp)
     b4c:	1404441e 	bne	r2,r16,1c60 <___vfprintf_internal_r+0x174c>
     b50:	d9003617 	ldw	r4,216(sp)
     b54:	d9403817 	ldw	r5,224(sp)
     b58:	000d883a 	mov	r6,zero
     b5c:	000f883a 	mov	r7,zero
     b60:	000bdb80 	call	bdb8 <__ledf2>
     b64:	da003d17 	ldw	r8,244(sp)
     b68:	1005e316 	blt	r2,zero,22f8 <___vfprintf_internal_r+0x1de4>
     b6c:	df002783 	ldbu	fp,158(sp)
     b70:	008011c4 	movi	r2,71
     b74:	1445580e 	bge	r2,r17,20d8 <___vfprintf_internal_r+0x1bc4>
     b78:	04000074 	movhi	r16,1
     b7c:	843ea104 	addi	r16,r16,-1404
     b80:	00c000c4 	movi	r3,3
     b84:	00bfdfc4 	movi	r2,-129
     b88:	d8c02915 	stw	r3,164(sp)
     b8c:	90a4703a 	and	r18,r18,r2
     b90:	d8c02b15 	stw	r3,172(sp)
     b94:	d8002a15 	stw	zero,168(sp)
     b98:	d8003215 	stw	zero,200(sp)
     b9c:	00003a06 	br	c88 <___vfprintf_internal_r+0x774>
     ba0:	84000214 	ori	r16,r16,8
     ba4:	ac400007 	ldb	r17,0(r21)
     ba8:	003ebc06 	br	69c <__alt_data_end+0xfffb72bc>
     bac:	8025883a 	mov	r18,r16
     bb0:	dc002903 	ldbu	r16,164(sp)
     bb4:	e011883a 	mov	r8,fp
     bb8:	84003fcc 	andi	r16,r16,255
     bbc:	8007001e 	bne	r16,zero,27c0 <___vfprintf_internal_r+0x22ac>
     bc0:	94800414 	ori	r18,r18,16
     bc4:	9080080c 	andi	r2,r18,32
     bc8:	1002fa26 	beq	r2,zero,17b4 <___vfprintf_internal_r+0x12a0>
     bcc:	d9002e17 	ldw	r4,184(sp)
     bd0:	d9402a17 	ldw	r5,168(sp)
     bd4:	d8002785 	stb	zero,158(sp)
     bd8:	20800204 	addi	r2,r4,8
     bdc:	24c00017 	ldw	r19,0(r4)
     be0:	25800117 	ldw	r22,4(r4)
     be4:	2804b116 	blt	r5,zero,1eac <___vfprintf_internal_r+0x1998>
     be8:	013fdfc4 	movi	r4,-129
     bec:	9d86b03a 	or	r3,r19,r22
     bf0:	d8802e15 	stw	r2,184(sp)
     bf4:	9124703a 	and	r18,r18,r4
     bf8:	1802fb1e 	bne	r3,zero,17e8 <___vfprintf_internal_r+0x12d4>
     bfc:	d8c02a17 	ldw	r3,168(sp)
     c00:	0039883a 	mov	fp,zero
     c04:	1805e526 	beq	r3,zero,239c <___vfprintf_internal_r+0x1e88>
     c08:	0027883a 	mov	r19,zero
     c0c:	002d883a 	mov	r22,zero
     c10:	dc001e04 	addi	r16,sp,120
     c14:	9806d0fa 	srli	r3,r19,3
     c18:	b008977a 	slli	r4,r22,29
     c1c:	b02cd0fa 	srli	r22,r22,3
     c20:	9cc001cc 	andi	r19,r19,7
     c24:	98800c04 	addi	r2,r19,48
     c28:	843fffc4 	addi	r16,r16,-1
     c2c:	20e6b03a 	or	r19,r4,r3
     c30:	80800005 	stb	r2,0(r16)
     c34:	9d86b03a 	or	r3,r19,r22
     c38:	183ff61e 	bne	r3,zero,c14 <__alt_data_end+0xfffb7834>
     c3c:	90c0004c 	andi	r3,r18,1
     c40:	18014126 	beq	r3,zero,1148 <___vfprintf_internal_r+0xc34>
     c44:	10803fcc 	andi	r2,r2,255
     c48:	1080201c 	xori	r2,r2,128
     c4c:	10bfe004 	addi	r2,r2,-128
     c50:	00c00c04 	movi	r3,48
     c54:	10c13c26 	beq	r2,r3,1148 <___vfprintf_internal_r+0xc34>
     c58:	80ffffc5 	stb	r3,-1(r16)
     c5c:	d8c02817 	ldw	r3,160(sp)
     c60:	80bfffc4 	addi	r2,r16,-1
     c64:	1021883a 	mov	r16,r2
     c68:	1887c83a 	sub	r3,r3,r2
     c6c:	d8c02b15 	stw	r3,172(sp)
     c70:	d8802b17 	ldw	r2,172(sp)
     c74:	d9002a17 	ldw	r4,168(sp)
     c78:	1100010e 	bge	r2,r4,c80 <___vfprintf_internal_r+0x76c>
     c7c:	2005883a 	mov	r2,r4
     c80:	d8802915 	stw	r2,164(sp)
     c84:	d8003215 	stw	zero,200(sp)
     c88:	e7003fcc 	andi	fp,fp,255
     c8c:	e700201c 	xori	fp,fp,128
     c90:	e73fe004 	addi	fp,fp,-128
     c94:	e0000326 	beq	fp,zero,ca4 <___vfprintf_internal_r+0x790>
     c98:	d8c02917 	ldw	r3,164(sp)
     c9c:	18c00044 	addi	r3,r3,1
     ca0:	d8c02915 	stw	r3,164(sp)
     ca4:	90c0008c 	andi	r3,r18,2
     ca8:	d8c02c15 	stw	r3,176(sp)
     cac:	18000326 	beq	r3,zero,cbc <___vfprintf_internal_r+0x7a8>
     cb0:	d8c02917 	ldw	r3,164(sp)
     cb4:	18c00084 	addi	r3,r3,2
     cb8:	d8c02915 	stw	r3,164(sp)
     cbc:	90c0210c 	andi	r3,r18,132
     cc0:	d8c03015 	stw	r3,192(sp)
     cc4:	1801c51e 	bne	r3,zero,13dc <___vfprintf_internal_r+0xec8>
     cc8:	d9003117 	ldw	r4,196(sp)
     ccc:	d8c02917 	ldw	r3,164(sp)
     cd0:	20e7c83a 	sub	r19,r4,r3
     cd4:	04c1c10e 	bge	zero,r19,13dc <___vfprintf_internal_r+0xec8>
     cd8:	02400404 	movi	r9,16
     cdc:	d8c02017 	ldw	r3,128(sp)
     ce0:	d8801f17 	ldw	r2,124(sp)
     ce4:	4cc52f0e 	bge	r9,r19,21a4 <___vfprintf_internal_r+0x1c90>
     ce8:	01400074 	movhi	r5,1
     cec:	297eb484 	addi	r5,r5,-1326
     cf0:	dc403b15 	stw	r17,236(sp)
     cf4:	d9403515 	stw	r5,212(sp)
     cf8:	9823883a 	mov	r17,r19
     cfc:	482d883a 	mov	r22,r9
     d00:	9027883a 	mov	r19,r18
     d04:	070001c4 	movi	fp,7
     d08:	8025883a 	mov	r18,r16
     d0c:	dc002d17 	ldw	r16,180(sp)
     d10:	00000306 	br	d20 <___vfprintf_internal_r+0x80c>
     d14:	8c7ffc04 	addi	r17,r17,-16
     d18:	42000204 	addi	r8,r8,8
     d1c:	b440130e 	bge	r22,r17,d6c <___vfprintf_internal_r+0x858>
     d20:	01000074 	movhi	r4,1
     d24:	18c00404 	addi	r3,r3,16
     d28:	10800044 	addi	r2,r2,1
     d2c:	213eb484 	addi	r4,r4,-1326
     d30:	41000015 	stw	r4,0(r8)
     d34:	45800115 	stw	r22,4(r8)
     d38:	d8c02015 	stw	r3,128(sp)
     d3c:	d8801f15 	stw	r2,124(sp)
     d40:	e0bff40e 	bge	fp,r2,d14 <__alt_data_end+0xfffb7934>
     d44:	d9801e04 	addi	r6,sp,120
     d48:	b80b883a 	mov	r5,r23
     d4c:	8009883a 	mov	r4,r16
     d50:	0007cf40 	call	7cf4 <__sprint_r>
     d54:	103ef31e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
     d58:	8c7ffc04 	addi	r17,r17,-16
     d5c:	d8c02017 	ldw	r3,128(sp)
     d60:	d8801f17 	ldw	r2,124(sp)
     d64:	da000404 	addi	r8,sp,16
     d68:	b47fed16 	blt	r22,r17,d20 <__alt_data_end+0xfffb7940>
     d6c:	9021883a 	mov	r16,r18
     d70:	9825883a 	mov	r18,r19
     d74:	8827883a 	mov	r19,r17
     d78:	dc403b17 	ldw	r17,236(sp)
     d7c:	d9403517 	ldw	r5,212(sp)
     d80:	98c7883a 	add	r3,r19,r3
     d84:	10800044 	addi	r2,r2,1
     d88:	41400015 	stw	r5,0(r8)
     d8c:	44c00115 	stw	r19,4(r8)
     d90:	d8c02015 	stw	r3,128(sp)
     d94:	d8801f15 	stw	r2,124(sp)
     d98:	010001c4 	movi	r4,7
     d9c:	2082c516 	blt	r4,r2,18b4 <___vfprintf_internal_r+0x13a0>
     da0:	df002787 	ldb	fp,158(sp)
     da4:	42000204 	addi	r8,r8,8
     da8:	e0000c26 	beq	fp,zero,ddc <___vfprintf_internal_r+0x8c8>
     dac:	d8801f17 	ldw	r2,124(sp)
     db0:	d9002784 	addi	r4,sp,158
     db4:	18c00044 	addi	r3,r3,1
     db8:	10800044 	addi	r2,r2,1
     dbc:	41000015 	stw	r4,0(r8)
     dc0:	01000044 	movi	r4,1
     dc4:	41000115 	stw	r4,4(r8)
     dc8:	d8c02015 	stw	r3,128(sp)
     dcc:	d8801f15 	stw	r2,124(sp)
     dd0:	010001c4 	movi	r4,7
     dd4:	20825e16 	blt	r4,r2,1750 <___vfprintf_internal_r+0x123c>
     dd8:	42000204 	addi	r8,r8,8
     ddc:	d8802c17 	ldw	r2,176(sp)
     de0:	10000c26 	beq	r2,zero,e14 <___vfprintf_internal_r+0x900>
     de4:	d8801f17 	ldw	r2,124(sp)
     de8:	d9002704 	addi	r4,sp,156
     dec:	18c00084 	addi	r3,r3,2
     df0:	10800044 	addi	r2,r2,1
     df4:	41000015 	stw	r4,0(r8)
     df8:	01000084 	movi	r4,2
     dfc:	41000115 	stw	r4,4(r8)
     e00:	d8c02015 	stw	r3,128(sp)
     e04:	d8801f15 	stw	r2,124(sp)
     e08:	010001c4 	movi	r4,7
     e0c:	20825816 	blt	r4,r2,1770 <___vfprintf_internal_r+0x125c>
     e10:	42000204 	addi	r8,r8,8
     e14:	d9003017 	ldw	r4,192(sp)
     e18:	00802004 	movi	r2,128
     e1c:	2081bb26 	beq	r4,r2,150c <___vfprintf_internal_r+0xff8>
     e20:	d9402a17 	ldw	r5,168(sp)
     e24:	d8802b17 	ldw	r2,172(sp)
     e28:	28adc83a 	sub	r22,r5,r2
     e2c:	0580310e 	bge	zero,r22,ef4 <___vfprintf_internal_r+0x9e0>
     e30:	07000404 	movi	fp,16
     e34:	d8801f17 	ldw	r2,124(sp)
     e38:	e584360e 	bge	fp,r22,1f14 <___vfprintf_internal_r+0x1a00>
     e3c:	01400074 	movhi	r5,1
     e40:	297eb084 	addi	r5,r5,-1342
     e44:	dc402a15 	stw	r17,168(sp)
     e48:	d9402c15 	stw	r5,176(sp)
     e4c:	b023883a 	mov	r17,r22
     e50:	04c001c4 	movi	r19,7
     e54:	a82d883a 	mov	r22,r21
     e58:	902b883a 	mov	r21,r18
     e5c:	8025883a 	mov	r18,r16
     e60:	dc002d17 	ldw	r16,180(sp)
     e64:	00000306 	br	e74 <___vfprintf_internal_r+0x960>
     e68:	8c7ffc04 	addi	r17,r17,-16
     e6c:	42000204 	addi	r8,r8,8
     e70:	e440110e 	bge	fp,r17,eb8 <___vfprintf_internal_r+0x9a4>
     e74:	18c00404 	addi	r3,r3,16
     e78:	10800044 	addi	r2,r2,1
     e7c:	45000015 	stw	r20,0(r8)
     e80:	47000115 	stw	fp,4(r8)
     e84:	d8c02015 	stw	r3,128(sp)
     e88:	d8801f15 	stw	r2,124(sp)
     e8c:	98bff60e 	bge	r19,r2,e68 <__alt_data_end+0xfffb7a88>
     e90:	d9801e04 	addi	r6,sp,120
     e94:	b80b883a 	mov	r5,r23
     e98:	8009883a 	mov	r4,r16
     e9c:	0007cf40 	call	7cf4 <__sprint_r>
     ea0:	103ea01e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
     ea4:	8c7ffc04 	addi	r17,r17,-16
     ea8:	d8c02017 	ldw	r3,128(sp)
     eac:	d8801f17 	ldw	r2,124(sp)
     eb0:	da000404 	addi	r8,sp,16
     eb4:	e47fef16 	blt	fp,r17,e74 <__alt_data_end+0xfffb7a94>
     eb8:	9021883a 	mov	r16,r18
     ebc:	a825883a 	mov	r18,r21
     ec0:	b02b883a 	mov	r21,r22
     ec4:	882d883a 	mov	r22,r17
     ec8:	dc402a17 	ldw	r17,168(sp)
     ecc:	d9002c17 	ldw	r4,176(sp)
     ed0:	1d87883a 	add	r3,r3,r22
     ed4:	10800044 	addi	r2,r2,1
     ed8:	41000015 	stw	r4,0(r8)
     edc:	45800115 	stw	r22,4(r8)
     ee0:	d8c02015 	stw	r3,128(sp)
     ee4:	d8801f15 	stw	r2,124(sp)
     ee8:	010001c4 	movi	r4,7
     eec:	20821016 	blt	r4,r2,1730 <___vfprintf_internal_r+0x121c>
     ef0:	42000204 	addi	r8,r8,8
     ef4:	9080400c 	andi	r2,r18,256
     ef8:	10013a1e 	bne	r2,zero,13e4 <___vfprintf_internal_r+0xed0>
     efc:	d9402b17 	ldw	r5,172(sp)
     f00:	d8801f17 	ldw	r2,124(sp)
     f04:	44000015 	stw	r16,0(r8)
     f08:	1947883a 	add	r3,r3,r5
     f0c:	10800044 	addi	r2,r2,1
     f10:	41400115 	stw	r5,4(r8)
     f14:	d8c02015 	stw	r3,128(sp)
     f18:	d8801f15 	stw	r2,124(sp)
     f1c:	010001c4 	movi	r4,7
     f20:	2081f516 	blt	r4,r2,16f8 <___vfprintf_internal_r+0x11e4>
     f24:	42000204 	addi	r8,r8,8
     f28:	9480010c 	andi	r18,r18,4
     f2c:	90003226 	beq	r18,zero,ff8 <___vfprintf_internal_r+0xae4>
     f30:	d9403117 	ldw	r5,196(sp)
     f34:	d8802917 	ldw	r2,164(sp)
     f38:	28a1c83a 	sub	r16,r5,r2
     f3c:	04002e0e 	bge	zero,r16,ff8 <___vfprintf_internal_r+0xae4>
     f40:	04400404 	movi	r17,16
     f44:	d8801f17 	ldw	r2,124(sp)
     f48:	8c04c40e 	bge	r17,r16,225c <___vfprintf_internal_r+0x1d48>
     f4c:	01400074 	movhi	r5,1
     f50:	297eb484 	addi	r5,r5,-1326
     f54:	d9403515 	stw	r5,212(sp)
     f58:	048001c4 	movi	r18,7
     f5c:	dcc02d17 	ldw	r19,180(sp)
     f60:	00000306 	br	f70 <___vfprintf_internal_r+0xa5c>
     f64:	843ffc04 	addi	r16,r16,-16
     f68:	42000204 	addi	r8,r8,8
     f6c:	8c00130e 	bge	r17,r16,fbc <___vfprintf_internal_r+0xaa8>
     f70:	01000074 	movhi	r4,1
     f74:	18c00404 	addi	r3,r3,16
     f78:	10800044 	addi	r2,r2,1
     f7c:	213eb484 	addi	r4,r4,-1326
     f80:	41000015 	stw	r4,0(r8)
     f84:	44400115 	stw	r17,4(r8)
     f88:	d8c02015 	stw	r3,128(sp)
     f8c:	d8801f15 	stw	r2,124(sp)
     f90:	90bff40e 	bge	r18,r2,f64 <__alt_data_end+0xfffb7b84>
     f94:	d9801e04 	addi	r6,sp,120
     f98:	b80b883a 	mov	r5,r23
     f9c:	9809883a 	mov	r4,r19
     fa0:	0007cf40 	call	7cf4 <__sprint_r>
     fa4:	103e5f1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
     fa8:	843ffc04 	addi	r16,r16,-16
     fac:	d8c02017 	ldw	r3,128(sp)
     fb0:	d8801f17 	ldw	r2,124(sp)
     fb4:	da000404 	addi	r8,sp,16
     fb8:	8c3fed16 	blt	r17,r16,f70 <__alt_data_end+0xfffb7b90>
     fbc:	d9403517 	ldw	r5,212(sp)
     fc0:	1c07883a 	add	r3,r3,r16
     fc4:	10800044 	addi	r2,r2,1
     fc8:	41400015 	stw	r5,0(r8)
     fcc:	44000115 	stw	r16,4(r8)
     fd0:	d8c02015 	stw	r3,128(sp)
     fd4:	d8801f15 	stw	r2,124(sp)
     fd8:	010001c4 	movi	r4,7
     fdc:	2080060e 	bge	r4,r2,ff8 <___vfprintf_internal_r+0xae4>
     fe0:	d9002d17 	ldw	r4,180(sp)
     fe4:	d9801e04 	addi	r6,sp,120
     fe8:	b80b883a 	mov	r5,r23
     fec:	0007cf40 	call	7cf4 <__sprint_r>
     ff0:	103e4c1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
     ff4:	d8c02017 	ldw	r3,128(sp)
     ff8:	d8803117 	ldw	r2,196(sp)
     ffc:	d9002917 	ldw	r4,164(sp)
    1000:	1100010e 	bge	r2,r4,1008 <___vfprintf_internal_r+0xaf4>
    1004:	2005883a 	mov	r2,r4
    1008:	d9402f17 	ldw	r5,188(sp)
    100c:	288b883a 	add	r5,r5,r2
    1010:	d9402f15 	stw	r5,188(sp)
    1014:	1801c01e 	bne	r3,zero,1718 <___vfprintf_internal_r+0x1204>
    1018:	a8800007 	ldb	r2,0(r21)
    101c:	d8001f15 	stw	zero,124(sp)
    1020:	da000404 	addi	r8,sp,16
    1024:	103d751e 	bne	r2,zero,5fc <__alt_data_end+0xfffb721c>
    1028:	a823883a 	mov	r17,r21
    102c:	003d8b06 	br	65c <__alt_data_end+0xfffb727c>
    1030:	8025883a 	mov	r18,r16
    1034:	dc002903 	ldbu	r16,164(sp)
    1038:	e011883a 	mov	r8,fp
    103c:	84003fcc 	andi	r16,r16,255
    1040:	8005e51e 	bne	r16,zero,27d8 <___vfprintf_internal_r+0x22c4>
    1044:	94800414 	ori	r18,r18,16
    1048:	9080080c 	andi	r2,r18,32
    104c:	10022b26 	beq	r2,zero,18fc <___vfprintf_internal_r+0x13e8>
    1050:	d9002e17 	ldw	r4,184(sp)
    1054:	d9402a17 	ldw	r5,168(sp)
    1058:	d8002785 	stb	zero,158(sp)
    105c:	20c00204 	addi	r3,r4,8
    1060:	24c00017 	ldw	r19,0(r4)
    1064:	25800117 	ldw	r22,4(r4)
    1068:	28042e16 	blt	r5,zero,2124 <___vfprintf_internal_r+0x1c10>
    106c:	013fdfc4 	movi	r4,-129
    1070:	9d84b03a 	or	r2,r19,r22
    1074:	d8c02e15 	stw	r3,184(sp)
    1078:	9124703a 	and	r18,r18,r4
    107c:	0039883a 	mov	fp,zero
    1080:	103e801e 	bne	r2,zero,a84 <__alt_data_end+0xfffb76a4>
    1084:	d9002a17 	ldw	r4,168(sp)
    1088:	2002e01e 	bne	r4,zero,1c0c <___vfprintf_internal_r+0x16f8>
    108c:	d8002a15 	stw	zero,168(sp)
    1090:	d8002b15 	stw	zero,172(sp)
    1094:	dc001e04 	addi	r16,sp,120
    1098:	003ef506 	br	c70 <__alt_data_end+0xfffb7890>
    109c:	8025883a 	mov	r18,r16
    10a0:	dc002903 	ldbu	r16,164(sp)
    10a4:	e011883a 	mov	r8,fp
    10a8:	84003fcc 	andi	r16,r16,255
    10ac:	8005ba1e 	bne	r16,zero,2798 <___vfprintf_internal_r+0x2284>
    10b0:	01000074 	movhi	r4,1
    10b4:	213ea404 	addi	r4,r4,-1392
    10b8:	d9003915 	stw	r4,228(sp)
    10bc:	9080080c 	andi	r2,r18,32
    10c0:	10006126 	beq	r2,zero,1248 <___vfprintf_internal_r+0xd34>
    10c4:	d9402e17 	ldw	r5,184(sp)
    10c8:	2cc00017 	ldw	r19,0(r5)
    10cc:	2d800117 	ldw	r22,4(r5)
    10d0:	29400204 	addi	r5,r5,8
    10d4:	d9402e15 	stw	r5,184(sp)
    10d8:	9080004c 	andi	r2,r18,1
    10dc:	1001ac26 	beq	r2,zero,1790 <___vfprintf_internal_r+0x127c>
    10e0:	9d84b03a 	or	r2,r19,r22
    10e4:	10038526 	beq	r2,zero,1efc <___vfprintf_internal_r+0x19e8>
    10e8:	d8c02a17 	ldw	r3,168(sp)
    10ec:	00800c04 	movi	r2,48
    10f0:	d8802705 	stb	r2,156(sp)
    10f4:	dc402745 	stb	r17,157(sp)
    10f8:	d8002785 	stb	zero,158(sp)
    10fc:	90800094 	ori	r2,r18,2
    1100:	18047916 	blt	r3,zero,22e8 <___vfprintf_internal_r+0x1dd4>
    1104:	00bfdfc4 	movi	r2,-129
    1108:	90a4703a 	and	r18,r18,r2
    110c:	94800094 	ori	r18,r18,2
    1110:	0039883a 	mov	fp,zero
    1114:	d9003917 	ldw	r4,228(sp)
    1118:	dc001e04 	addi	r16,sp,120
    111c:	988003cc 	andi	r2,r19,15
    1120:	b006973a 	slli	r3,r22,28
    1124:	2085883a 	add	r2,r4,r2
    1128:	9826d13a 	srli	r19,r19,4
    112c:	10800003 	ldbu	r2,0(r2)
    1130:	b02cd13a 	srli	r22,r22,4
    1134:	843fffc4 	addi	r16,r16,-1
    1138:	1ce6b03a 	or	r19,r3,r19
    113c:	80800005 	stb	r2,0(r16)
    1140:	9d84b03a 	or	r2,r19,r22
    1144:	103ff51e 	bne	r2,zero,111c <__alt_data_end+0xfffb7d3c>
    1148:	d8c02817 	ldw	r3,160(sp)
    114c:	1c07c83a 	sub	r3,r3,r16
    1150:	d8c02b15 	stw	r3,172(sp)
    1154:	003ec606 	br	c70 <__alt_data_end+0xfffb7890>
    1158:	8025883a 	mov	r18,r16
    115c:	dc002903 	ldbu	r16,164(sp)
    1160:	e011883a 	mov	r8,fp
    1164:	84003fcc 	andi	r16,r16,255
    1168:	803e9626 	beq	r16,zero,bc4 <__alt_data_end+0xfffb77e4>
    116c:	d8c02b03 	ldbu	r3,172(sp)
    1170:	d8c02785 	stb	r3,158(sp)
    1174:	003e9306 	br	bc4 <__alt_data_end+0xfffb77e4>
    1178:	00c00044 	movi	r3,1
    117c:	d8c02905 	stb	r3,164(sp)
    1180:	00c00ac4 	movi	r3,43
    1184:	d8c02b05 	stb	r3,172(sp)
    1188:	ac400007 	ldb	r17,0(r21)
    118c:	003d4306 	br	69c <__alt_data_end+0xfffb72bc>
    1190:	84000814 	ori	r16,r16,32
    1194:	ac400007 	ldb	r17,0(r21)
    1198:	003d4006 	br	69c <__alt_data_end+0xfffb72bc>
    119c:	d8802e17 	ldw	r2,184(sp)
    11a0:	8025883a 	mov	r18,r16
    11a4:	d8002785 	stb	zero,158(sp)
    11a8:	14000017 	ldw	r16,0(r2)
    11ac:	e011883a 	mov	r8,fp
    11b0:	14c00104 	addi	r19,r2,4
    11b4:	80042d26 	beq	r16,zero,226c <___vfprintf_internal_r+0x1d58>
    11b8:	d8c02a17 	ldw	r3,168(sp)
    11bc:	1803e416 	blt	r3,zero,2150 <___vfprintf_internal_r+0x1c3c>
    11c0:	180d883a 	mov	r6,r3
    11c4:	000b883a 	mov	r5,zero
    11c8:	8009883a 	mov	r4,r16
    11cc:	df003d15 	stw	fp,244(sp)
    11d0:	0005e4c0 	call	5e4c <memchr>
    11d4:	da003d17 	ldw	r8,244(sp)
    11d8:	10046826 	beq	r2,zero,237c <___vfprintf_internal_r+0x1e68>
    11dc:	1405c83a 	sub	r2,r2,r16
    11e0:	d8802b15 	stw	r2,172(sp)
    11e4:	1003e016 	blt	r2,zero,2168 <___vfprintf_internal_r+0x1c54>
    11e8:	df002783 	ldbu	fp,158(sp)
    11ec:	d8802915 	stw	r2,164(sp)
    11f0:	dcc02e15 	stw	r19,184(sp)
    11f4:	d8002a15 	stw	zero,168(sp)
    11f8:	d8003215 	stw	zero,200(sp)
    11fc:	003ea206 	br	c88 <__alt_data_end+0xfffb78a8>
    1200:	8025883a 	mov	r18,r16
    1204:	dc002903 	ldbu	r16,164(sp)
    1208:	e011883a 	mov	r8,fp
    120c:	84003fcc 	andi	r16,r16,255
    1210:	803f8d26 	beq	r16,zero,1048 <__alt_data_end+0xfffb7c68>
    1214:	d8c02b03 	ldbu	r3,172(sp)
    1218:	d8c02785 	stb	r3,158(sp)
    121c:	003f8a06 	br	1048 <__alt_data_end+0xfffb7c68>
    1220:	8025883a 	mov	r18,r16
    1224:	dc002903 	ldbu	r16,164(sp)
    1228:	e011883a 	mov	r8,fp
    122c:	84003fcc 	andi	r16,r16,255
    1230:	8005661e 	bne	r16,zero,27cc <___vfprintf_internal_r+0x22b8>
    1234:	01000074 	movhi	r4,1
    1238:	213ea904 	addi	r4,r4,-1372
    123c:	d9003915 	stw	r4,228(sp)
    1240:	9080080c 	andi	r2,r18,32
    1244:	103f9f1e 	bne	r2,zero,10c4 <__alt_data_end+0xfffb7ce4>
    1248:	9080040c 	andi	r2,r18,16
    124c:	1002eb26 	beq	r2,zero,1dfc <___vfprintf_internal_r+0x18e8>
    1250:	d8802e17 	ldw	r2,184(sp)
    1254:	002d883a 	mov	r22,zero
    1258:	14c00017 	ldw	r19,0(r2)
    125c:	10800104 	addi	r2,r2,4
    1260:	d8802e15 	stw	r2,184(sp)
    1264:	003f9c06 	br	10d8 <__alt_data_end+0xfffb7cf8>
    1268:	d8802b07 	ldb	r2,172(sp)
    126c:	1002e11e 	bne	r2,zero,1df4 <___vfprintf_internal_r+0x18e0>
    1270:	00c00044 	movi	r3,1
    1274:	d8c02905 	stb	r3,164(sp)
    1278:	00c00804 	movi	r3,32
    127c:	d8c02b05 	stb	r3,172(sp)
    1280:	ac400007 	ldb	r17,0(r21)
    1284:	003d0506 	br	69c <__alt_data_end+0xfffb72bc>
    1288:	84000054 	ori	r16,r16,1
    128c:	ac400007 	ldb	r17,0(r21)
    1290:	003d0206 	br	69c <__alt_data_end+0xfffb72bc>
    1294:	8025883a 	mov	r18,r16
    1298:	dc002903 	ldbu	r16,164(sp)
    129c:	e011883a 	mov	r8,fp
    12a0:	84003fcc 	andi	r16,r16,255
    12a4:	803de726 	beq	r16,zero,a44 <__alt_data_end+0xfffb7664>
    12a8:	d8c02b03 	ldbu	r3,172(sp)
    12ac:	d8c02785 	stb	r3,158(sp)
    12b0:	003de406 	br	a44 <__alt_data_end+0xfffb7664>
    12b4:	84001014 	ori	r16,r16,64
    12b8:	ac400007 	ldb	r17,0(r21)
    12bc:	003cf706 	br	69c <__alt_data_end+0xfffb72bc>
    12c0:	ac400007 	ldb	r17,0(r21)
    12c4:	00801b04 	movi	r2,108
    12c8:	88838f26 	beq	r17,r2,2108 <___vfprintf_internal_r+0x1bf4>
    12cc:	84000414 	ori	r16,r16,16
    12d0:	003cf206 	br	69c <__alt_data_end+0xfffb72bc>
    12d4:	8025883a 	mov	r18,r16
    12d8:	dc002903 	ldbu	r16,164(sp)
    12dc:	e011883a 	mov	r8,fp
    12e0:	84003fcc 	andi	r16,r16,255
    12e4:	80053f1e 	bne	r16,zero,27e4 <___vfprintf_internal_r+0x22d0>
    12e8:	9080080c 	andi	r2,r18,32
    12ec:	1002d226 	beq	r2,zero,1e38 <___vfprintf_internal_r+0x1924>
    12f0:	d9002e17 	ldw	r4,184(sp)
    12f4:	d9402f17 	ldw	r5,188(sp)
    12f8:	20800017 	ldw	r2,0(r4)
    12fc:	2807d7fa 	srai	r3,r5,31
    1300:	21000104 	addi	r4,r4,4
    1304:	d9002e15 	stw	r4,184(sp)
    1308:	11400015 	stw	r5,0(r2)
    130c:	10c00115 	stw	r3,4(r2)
    1310:	003cb806 	br	5f4 <__alt_data_end+0xfffb7214>
    1314:	d8c02e17 	ldw	r3,184(sp)
    1318:	d9002e17 	ldw	r4,184(sp)
    131c:	8025883a 	mov	r18,r16
    1320:	18800017 	ldw	r2,0(r3)
    1324:	21000104 	addi	r4,r4,4
    1328:	00c00044 	movi	r3,1
    132c:	e011883a 	mov	r8,fp
    1330:	d8c02915 	stw	r3,164(sp)
    1334:	d8002785 	stb	zero,158(sp)
    1338:	d8801405 	stb	r2,80(sp)
    133c:	d9002e15 	stw	r4,184(sp)
    1340:	d8c02b15 	stw	r3,172(sp)
    1344:	d8002a15 	stw	zero,168(sp)
    1348:	d8003215 	stw	zero,200(sp)
    134c:	dc001404 	addi	r16,sp,80
    1350:	0039883a 	mov	fp,zero
    1354:	003e5306 	br	ca4 <__alt_data_end+0xfffb78c4>
    1358:	01000074 	movhi	r4,1
    135c:	213ea904 	addi	r4,r4,-1372
    1360:	0039883a 	mov	fp,zero
    1364:	d9003915 	stw	r4,228(sp)
    1368:	04401e04 	movi	r17,120
    136c:	003f6906 	br	1114 <__alt_data_end+0xfffb7d34>
    1370:	8025883a 	mov	r18,r16
    1374:	dc002903 	ldbu	r16,164(sp)
    1378:	e011883a 	mov	r8,fp
    137c:	84003fcc 	andi	r16,r16,255
    1380:	8005081e 	bne	r16,zero,27a4 <___vfprintf_internal_r+0x2290>
    1384:	883d6126 	beq	r17,zero,90c <__alt_data_end+0xfffb752c>
    1388:	00c00044 	movi	r3,1
    138c:	d8c02915 	stw	r3,164(sp)
    1390:	dc401405 	stb	r17,80(sp)
    1394:	d8002785 	stb	zero,158(sp)
    1398:	003fe906 	br	1340 <__alt_data_end+0xfffb7f60>
    139c:	01400074 	movhi	r5,1
    13a0:	297ea904 	addi	r5,r5,-1372
    13a4:	d9403915 	stw	r5,228(sp)
    13a8:	d8c02e15 	stw	r3,184(sp)
    13ac:	1025883a 	mov	r18,r2
    13b0:	04401e04 	movi	r17,120
    13b4:	9d84b03a 	or	r2,r19,r22
    13b8:	1000fc1e 	bne	r2,zero,17ac <___vfprintf_internal_r+0x1298>
    13bc:	0039883a 	mov	fp,zero
    13c0:	00800084 	movi	r2,2
    13c4:	10803fcc 	andi	r2,r2,255
    13c8:	00c00044 	movi	r3,1
    13cc:	10c20f26 	beq	r2,r3,1c0c <___vfprintf_internal_r+0x16f8>
    13d0:	00c00084 	movi	r3,2
    13d4:	10fd3326 	beq	r2,r3,8a4 <__alt_data_end+0xfffb74c4>
    13d8:	003e0b06 	br	c08 <__alt_data_end+0xfffb7828>
    13dc:	d8c02017 	ldw	r3,128(sp)
    13e0:	003e7106 	br	da8 <__alt_data_end+0xfffb79c8>
    13e4:	00801944 	movi	r2,101
    13e8:	14407e0e 	bge	r2,r17,15e4 <___vfprintf_internal_r+0x10d0>
    13ec:	d9003617 	ldw	r4,216(sp)
    13f0:	d9403817 	ldw	r5,224(sp)
    13f4:	000d883a 	mov	r6,zero
    13f8:	000f883a 	mov	r7,zero
    13fc:	d8c03c15 	stw	r3,240(sp)
    1400:	da003d15 	stw	r8,244(sp)
    1404:	000bc540 	call	bc54 <__eqdf2>
    1408:	d8c03c17 	ldw	r3,240(sp)
    140c:	da003d17 	ldw	r8,244(sp)
    1410:	1000f71e 	bne	r2,zero,17f0 <___vfprintf_internal_r+0x12dc>
    1414:	d8801f17 	ldw	r2,124(sp)
    1418:	01000074 	movhi	r4,1
    141c:	213eb004 	addi	r4,r4,-1344
    1420:	18c00044 	addi	r3,r3,1
    1424:	10800044 	addi	r2,r2,1
    1428:	41000015 	stw	r4,0(r8)
    142c:	01000044 	movi	r4,1
    1430:	41000115 	stw	r4,4(r8)
    1434:	d8c02015 	stw	r3,128(sp)
    1438:	d8801f15 	stw	r2,124(sp)
    143c:	010001c4 	movi	r4,7
    1440:	2082b816 	blt	r4,r2,1f24 <___vfprintf_internal_r+0x1a10>
    1444:	42000204 	addi	r8,r8,8
    1448:	d8802617 	ldw	r2,152(sp)
    144c:	d9403317 	ldw	r5,204(sp)
    1450:	11400216 	blt	r2,r5,145c <___vfprintf_internal_r+0xf48>
    1454:	9080004c 	andi	r2,r18,1
    1458:	103eb326 	beq	r2,zero,f28 <__alt_data_end+0xfffb7b48>
    145c:	d8803717 	ldw	r2,220(sp)
    1460:	d9003417 	ldw	r4,208(sp)
    1464:	d9403717 	ldw	r5,220(sp)
    1468:	1887883a 	add	r3,r3,r2
    146c:	d8801f17 	ldw	r2,124(sp)
    1470:	41000015 	stw	r4,0(r8)
    1474:	41400115 	stw	r5,4(r8)
    1478:	10800044 	addi	r2,r2,1
    147c:	d8c02015 	stw	r3,128(sp)
    1480:	d8801f15 	stw	r2,124(sp)
    1484:	010001c4 	movi	r4,7
    1488:	20832916 	blt	r4,r2,2130 <___vfprintf_internal_r+0x1c1c>
    148c:	42000204 	addi	r8,r8,8
    1490:	d8803317 	ldw	r2,204(sp)
    1494:	143fffc4 	addi	r16,r2,-1
    1498:	043ea30e 	bge	zero,r16,f28 <__alt_data_end+0xfffb7b48>
    149c:	04400404 	movi	r17,16
    14a0:	d8801f17 	ldw	r2,124(sp)
    14a4:	8c00880e 	bge	r17,r16,16c8 <___vfprintf_internal_r+0x11b4>
    14a8:	01400074 	movhi	r5,1
    14ac:	297eb084 	addi	r5,r5,-1342
    14b0:	d9402c15 	stw	r5,176(sp)
    14b4:	058001c4 	movi	r22,7
    14b8:	dcc02d17 	ldw	r19,180(sp)
    14bc:	00000306 	br	14cc <___vfprintf_internal_r+0xfb8>
    14c0:	42000204 	addi	r8,r8,8
    14c4:	843ffc04 	addi	r16,r16,-16
    14c8:	8c00820e 	bge	r17,r16,16d4 <___vfprintf_internal_r+0x11c0>
    14cc:	18c00404 	addi	r3,r3,16
    14d0:	10800044 	addi	r2,r2,1
    14d4:	45000015 	stw	r20,0(r8)
    14d8:	44400115 	stw	r17,4(r8)
    14dc:	d8c02015 	stw	r3,128(sp)
    14e0:	d8801f15 	stw	r2,124(sp)
    14e4:	b0bff60e 	bge	r22,r2,14c0 <__alt_data_end+0xfffb80e0>
    14e8:	d9801e04 	addi	r6,sp,120
    14ec:	b80b883a 	mov	r5,r23
    14f0:	9809883a 	mov	r4,r19
    14f4:	0007cf40 	call	7cf4 <__sprint_r>
    14f8:	103d0a1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    14fc:	d8c02017 	ldw	r3,128(sp)
    1500:	d8801f17 	ldw	r2,124(sp)
    1504:	da000404 	addi	r8,sp,16
    1508:	003fee06 	br	14c4 <__alt_data_end+0xfffb80e4>
    150c:	d9403117 	ldw	r5,196(sp)
    1510:	d8802917 	ldw	r2,164(sp)
    1514:	28adc83a 	sub	r22,r5,r2
    1518:	05be410e 	bge	zero,r22,e20 <__alt_data_end+0xfffb7a40>
    151c:	07000404 	movi	fp,16
    1520:	d8801f17 	ldw	r2,124(sp)
    1524:	e5838f0e 	bge	fp,r22,2364 <___vfprintf_internal_r+0x1e50>
    1528:	01400074 	movhi	r5,1
    152c:	297eb084 	addi	r5,r5,-1342
    1530:	dc403015 	stw	r17,192(sp)
    1534:	d9402c15 	stw	r5,176(sp)
    1538:	b023883a 	mov	r17,r22
    153c:	04c001c4 	movi	r19,7
    1540:	a82d883a 	mov	r22,r21
    1544:	902b883a 	mov	r21,r18
    1548:	8025883a 	mov	r18,r16
    154c:	dc002d17 	ldw	r16,180(sp)
    1550:	00000306 	br	1560 <___vfprintf_internal_r+0x104c>
    1554:	8c7ffc04 	addi	r17,r17,-16
    1558:	42000204 	addi	r8,r8,8
    155c:	e440110e 	bge	fp,r17,15a4 <___vfprintf_internal_r+0x1090>
    1560:	18c00404 	addi	r3,r3,16
    1564:	10800044 	addi	r2,r2,1
    1568:	45000015 	stw	r20,0(r8)
    156c:	47000115 	stw	fp,4(r8)
    1570:	d8c02015 	stw	r3,128(sp)
    1574:	d8801f15 	stw	r2,124(sp)
    1578:	98bff60e 	bge	r19,r2,1554 <__alt_data_end+0xfffb8174>
    157c:	d9801e04 	addi	r6,sp,120
    1580:	b80b883a 	mov	r5,r23
    1584:	8009883a 	mov	r4,r16
    1588:	0007cf40 	call	7cf4 <__sprint_r>
    158c:	103ce51e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1590:	8c7ffc04 	addi	r17,r17,-16
    1594:	d8c02017 	ldw	r3,128(sp)
    1598:	d8801f17 	ldw	r2,124(sp)
    159c:	da000404 	addi	r8,sp,16
    15a0:	e47fef16 	blt	fp,r17,1560 <__alt_data_end+0xfffb8180>
    15a4:	9021883a 	mov	r16,r18
    15a8:	a825883a 	mov	r18,r21
    15ac:	b02b883a 	mov	r21,r22
    15b0:	882d883a 	mov	r22,r17
    15b4:	dc403017 	ldw	r17,192(sp)
    15b8:	d9002c17 	ldw	r4,176(sp)
    15bc:	1d87883a 	add	r3,r3,r22
    15c0:	10800044 	addi	r2,r2,1
    15c4:	41000015 	stw	r4,0(r8)
    15c8:	45800115 	stw	r22,4(r8)
    15cc:	d8c02015 	stw	r3,128(sp)
    15d0:	d8801f15 	stw	r2,124(sp)
    15d4:	010001c4 	movi	r4,7
    15d8:	20818e16 	blt	r4,r2,1c14 <___vfprintf_internal_r+0x1700>
    15dc:	42000204 	addi	r8,r8,8
    15e0:	003e0f06 	br	e20 <__alt_data_end+0xfffb7a40>
    15e4:	d9403317 	ldw	r5,204(sp)
    15e8:	00800044 	movi	r2,1
    15ec:	18c00044 	addi	r3,r3,1
    15f0:	1141530e 	bge	r2,r5,1b40 <___vfprintf_internal_r+0x162c>
    15f4:	dc401f17 	ldw	r17,124(sp)
    15f8:	00800044 	movi	r2,1
    15fc:	40800115 	stw	r2,4(r8)
    1600:	8c400044 	addi	r17,r17,1
    1604:	44000015 	stw	r16,0(r8)
    1608:	d8c02015 	stw	r3,128(sp)
    160c:	dc401f15 	stw	r17,124(sp)
    1610:	008001c4 	movi	r2,7
    1614:	14416b16 	blt	r2,r17,1bc4 <___vfprintf_internal_r+0x16b0>
    1618:	42000204 	addi	r8,r8,8
    161c:	d8803717 	ldw	r2,220(sp)
    1620:	d9003417 	ldw	r4,208(sp)
    1624:	8c400044 	addi	r17,r17,1
    1628:	10c7883a 	add	r3,r2,r3
    162c:	40800115 	stw	r2,4(r8)
    1630:	41000015 	stw	r4,0(r8)
    1634:	d8c02015 	stw	r3,128(sp)
    1638:	dc401f15 	stw	r17,124(sp)
    163c:	008001c4 	movi	r2,7
    1640:	14416916 	blt	r2,r17,1be8 <___vfprintf_internal_r+0x16d4>
    1644:	45800204 	addi	r22,r8,8
    1648:	d9003617 	ldw	r4,216(sp)
    164c:	d9403817 	ldw	r5,224(sp)
    1650:	000d883a 	mov	r6,zero
    1654:	000f883a 	mov	r7,zero
    1658:	d8c03c15 	stw	r3,240(sp)
    165c:	000bc540 	call	bc54 <__eqdf2>
    1660:	d8c03c17 	ldw	r3,240(sp)
    1664:	1000bc26 	beq	r2,zero,1958 <___vfprintf_internal_r+0x1444>
    1668:	d9403317 	ldw	r5,204(sp)
    166c:	84000044 	addi	r16,r16,1
    1670:	8c400044 	addi	r17,r17,1
    1674:	28bfffc4 	addi	r2,r5,-1
    1678:	1887883a 	add	r3,r3,r2
    167c:	b0800115 	stw	r2,4(r22)
    1680:	b4000015 	stw	r16,0(r22)
    1684:	d8c02015 	stw	r3,128(sp)
    1688:	dc401f15 	stw	r17,124(sp)
    168c:	008001c4 	movi	r2,7
    1690:	14414316 	blt	r2,r17,1ba0 <___vfprintf_internal_r+0x168c>
    1694:	b5800204 	addi	r22,r22,8
    1698:	d9003a17 	ldw	r4,232(sp)
    169c:	df0022c4 	addi	fp,sp,139
    16a0:	8c400044 	addi	r17,r17,1
    16a4:	20c7883a 	add	r3,r4,r3
    16a8:	b7000015 	stw	fp,0(r22)
    16ac:	b1000115 	stw	r4,4(r22)
    16b0:	d8c02015 	stw	r3,128(sp)
    16b4:	dc401f15 	stw	r17,124(sp)
    16b8:	008001c4 	movi	r2,7
    16bc:	14400e16 	blt	r2,r17,16f8 <___vfprintf_internal_r+0x11e4>
    16c0:	b2000204 	addi	r8,r22,8
    16c4:	003e1806 	br	f28 <__alt_data_end+0xfffb7b48>
    16c8:	01000074 	movhi	r4,1
    16cc:	213eb084 	addi	r4,r4,-1342
    16d0:	d9002c15 	stw	r4,176(sp)
    16d4:	d9002c17 	ldw	r4,176(sp)
    16d8:	1c07883a 	add	r3,r3,r16
    16dc:	44000115 	stw	r16,4(r8)
    16e0:	41000015 	stw	r4,0(r8)
    16e4:	10800044 	addi	r2,r2,1
    16e8:	d8c02015 	stw	r3,128(sp)
    16ec:	d8801f15 	stw	r2,124(sp)
    16f0:	010001c4 	movi	r4,7
    16f4:	20be0b0e 	bge	r4,r2,f24 <__alt_data_end+0xfffb7b44>
    16f8:	d9002d17 	ldw	r4,180(sp)
    16fc:	d9801e04 	addi	r6,sp,120
    1700:	b80b883a 	mov	r5,r23
    1704:	0007cf40 	call	7cf4 <__sprint_r>
    1708:	103c861e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    170c:	d8c02017 	ldw	r3,128(sp)
    1710:	da000404 	addi	r8,sp,16
    1714:	003e0406 	br	f28 <__alt_data_end+0xfffb7b48>
    1718:	d9002d17 	ldw	r4,180(sp)
    171c:	d9801e04 	addi	r6,sp,120
    1720:	b80b883a 	mov	r5,r23
    1724:	0007cf40 	call	7cf4 <__sprint_r>
    1728:	103e3b26 	beq	r2,zero,1018 <__alt_data_end+0xfffb7c38>
    172c:	003c7d06 	br	924 <__alt_data_end+0xfffb7544>
    1730:	d9002d17 	ldw	r4,180(sp)
    1734:	d9801e04 	addi	r6,sp,120
    1738:	b80b883a 	mov	r5,r23
    173c:	0007cf40 	call	7cf4 <__sprint_r>
    1740:	103c781e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1744:	d8c02017 	ldw	r3,128(sp)
    1748:	da000404 	addi	r8,sp,16
    174c:	003de906 	br	ef4 <__alt_data_end+0xfffb7b14>
    1750:	d9002d17 	ldw	r4,180(sp)
    1754:	d9801e04 	addi	r6,sp,120
    1758:	b80b883a 	mov	r5,r23
    175c:	0007cf40 	call	7cf4 <__sprint_r>
    1760:	103c701e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1764:	d8c02017 	ldw	r3,128(sp)
    1768:	da000404 	addi	r8,sp,16
    176c:	003d9b06 	br	ddc <__alt_data_end+0xfffb79fc>
    1770:	d9002d17 	ldw	r4,180(sp)
    1774:	d9801e04 	addi	r6,sp,120
    1778:	b80b883a 	mov	r5,r23
    177c:	0007cf40 	call	7cf4 <__sprint_r>
    1780:	103c681e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1784:	d8c02017 	ldw	r3,128(sp)
    1788:	da000404 	addi	r8,sp,16
    178c:	003da106 	br	e14 <__alt_data_end+0xfffb7a34>
    1790:	d9402a17 	ldw	r5,168(sp)
    1794:	d8002785 	stb	zero,158(sp)
    1798:	283f0616 	blt	r5,zero,13b4 <__alt_data_end+0xfffb7fd4>
    179c:	00ffdfc4 	movi	r3,-129
    17a0:	9d84b03a 	or	r2,r19,r22
    17a4:	90e4703a 	and	r18,r18,r3
    17a8:	103c3b26 	beq	r2,zero,898 <__alt_data_end+0xfffb74b8>
    17ac:	0039883a 	mov	fp,zero
    17b0:	003e5806 	br	1114 <__alt_data_end+0xfffb7d34>
    17b4:	9080040c 	andi	r2,r18,16
    17b8:	1001b326 	beq	r2,zero,1e88 <___vfprintf_internal_r+0x1974>
    17bc:	d8c02e17 	ldw	r3,184(sp)
    17c0:	d9002a17 	ldw	r4,168(sp)
    17c4:	d8002785 	stb	zero,158(sp)
    17c8:	18800104 	addi	r2,r3,4
    17cc:	1cc00017 	ldw	r19,0(r3)
    17d0:	002d883a 	mov	r22,zero
    17d4:	2001b516 	blt	r4,zero,1eac <___vfprintf_internal_r+0x1998>
    17d8:	00ffdfc4 	movi	r3,-129
    17dc:	d8802e15 	stw	r2,184(sp)
    17e0:	90e4703a 	and	r18,r18,r3
    17e4:	983d0526 	beq	r19,zero,bfc <__alt_data_end+0xfffb781c>
    17e8:	0039883a 	mov	fp,zero
    17ec:	003d0806 	br	c10 <__alt_data_end+0xfffb7830>
    17f0:	dc402617 	ldw	r17,152(sp)
    17f4:	0441d30e 	bge	zero,r17,1f44 <___vfprintf_internal_r+0x1a30>
    17f8:	dc403217 	ldw	r17,200(sp)
    17fc:	d8803317 	ldw	r2,204(sp)
    1800:	1440010e 	bge	r2,r17,1808 <___vfprintf_internal_r+0x12f4>
    1804:	1023883a 	mov	r17,r2
    1808:	04400a0e 	bge	zero,r17,1834 <___vfprintf_internal_r+0x1320>
    180c:	d8801f17 	ldw	r2,124(sp)
    1810:	1c47883a 	add	r3,r3,r17
    1814:	44000015 	stw	r16,0(r8)
    1818:	10800044 	addi	r2,r2,1
    181c:	44400115 	stw	r17,4(r8)
    1820:	d8c02015 	stw	r3,128(sp)
    1824:	d8801f15 	stw	r2,124(sp)
    1828:	010001c4 	movi	r4,7
    182c:	20826516 	blt	r4,r2,21c4 <___vfprintf_internal_r+0x1cb0>
    1830:	42000204 	addi	r8,r8,8
    1834:	88026116 	blt	r17,zero,21bc <___vfprintf_internal_r+0x1ca8>
    1838:	d9003217 	ldw	r4,200(sp)
    183c:	2463c83a 	sub	r17,r4,r17
    1840:	04407b0e 	bge	zero,r17,1a30 <___vfprintf_internal_r+0x151c>
    1844:	05800404 	movi	r22,16
    1848:	d8801f17 	ldw	r2,124(sp)
    184c:	b4419d0e 	bge	r22,r17,1ec4 <___vfprintf_internal_r+0x19b0>
    1850:	01000074 	movhi	r4,1
    1854:	213eb084 	addi	r4,r4,-1342
    1858:	d9002c15 	stw	r4,176(sp)
    185c:	070001c4 	movi	fp,7
    1860:	dcc02d17 	ldw	r19,180(sp)
    1864:	00000306 	br	1874 <___vfprintf_internal_r+0x1360>
    1868:	42000204 	addi	r8,r8,8
    186c:	8c7ffc04 	addi	r17,r17,-16
    1870:	b441970e 	bge	r22,r17,1ed0 <___vfprintf_internal_r+0x19bc>
    1874:	18c00404 	addi	r3,r3,16
    1878:	10800044 	addi	r2,r2,1
    187c:	45000015 	stw	r20,0(r8)
    1880:	45800115 	stw	r22,4(r8)
    1884:	d8c02015 	stw	r3,128(sp)
    1888:	d8801f15 	stw	r2,124(sp)
    188c:	e0bff60e 	bge	fp,r2,1868 <__alt_data_end+0xfffb8488>
    1890:	d9801e04 	addi	r6,sp,120
    1894:	b80b883a 	mov	r5,r23
    1898:	9809883a 	mov	r4,r19
    189c:	0007cf40 	call	7cf4 <__sprint_r>
    18a0:	103c201e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    18a4:	d8c02017 	ldw	r3,128(sp)
    18a8:	d8801f17 	ldw	r2,124(sp)
    18ac:	da000404 	addi	r8,sp,16
    18b0:	003fee06 	br	186c <__alt_data_end+0xfffb848c>
    18b4:	d9002d17 	ldw	r4,180(sp)
    18b8:	d9801e04 	addi	r6,sp,120
    18bc:	b80b883a 	mov	r5,r23
    18c0:	0007cf40 	call	7cf4 <__sprint_r>
    18c4:	103c171e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    18c8:	d8c02017 	ldw	r3,128(sp)
    18cc:	df002787 	ldb	fp,158(sp)
    18d0:	da000404 	addi	r8,sp,16
    18d4:	003d3406 	br	da8 <__alt_data_end+0xfffb79c8>
    18d8:	9080040c 	andi	r2,r18,16
    18dc:	10016126 	beq	r2,zero,1e64 <___vfprintf_internal_r+0x1950>
    18e0:	d9402e17 	ldw	r5,184(sp)
    18e4:	2cc00017 	ldw	r19,0(r5)
    18e8:	29400104 	addi	r5,r5,4
    18ec:	d9402e15 	stw	r5,184(sp)
    18f0:	982dd7fa 	srai	r22,r19,31
    18f4:	b005883a 	mov	r2,r22
    18f8:	003c5a06 	br	a64 <__alt_data_end+0xfffb7684>
    18fc:	9080040c 	andi	r2,r18,16
    1900:	10003526 	beq	r2,zero,19d8 <___vfprintf_internal_r+0x14c4>
    1904:	d8c02e17 	ldw	r3,184(sp)
    1908:	d9002a17 	ldw	r4,168(sp)
    190c:	d8002785 	stb	zero,158(sp)
    1910:	18800104 	addi	r2,r3,4
    1914:	1cc00017 	ldw	r19,0(r3)
    1918:	002d883a 	mov	r22,zero
    191c:	20003716 	blt	r4,zero,19fc <___vfprintf_internal_r+0x14e8>
    1920:	00ffdfc4 	movi	r3,-129
    1924:	d8802e15 	stw	r2,184(sp)
    1928:	90e4703a 	and	r18,r18,r3
    192c:	0039883a 	mov	fp,zero
    1930:	983dd426 	beq	r19,zero,1084 <__alt_data_end+0xfffb7ca4>
    1934:	00800244 	movi	r2,9
    1938:	14fc5336 	bltu	r2,r19,a88 <__alt_data_end+0xfffb76a8>
    193c:	d8c02817 	ldw	r3,160(sp)
    1940:	dc001dc4 	addi	r16,sp,119
    1944:	9cc00c04 	addi	r19,r19,48
    1948:	1c07c83a 	sub	r3,r3,r16
    194c:	dcc01dc5 	stb	r19,119(sp)
    1950:	d8c02b15 	stw	r3,172(sp)
    1954:	003cc606 	br	c70 <__alt_data_end+0xfffb7890>
    1958:	d8803317 	ldw	r2,204(sp)
    195c:	143fffc4 	addi	r16,r2,-1
    1960:	043f4d0e 	bge	zero,r16,1698 <__alt_data_end+0xfffb82b8>
    1964:	07000404 	movi	fp,16
    1968:	e400810e 	bge	fp,r16,1b70 <___vfprintf_internal_r+0x165c>
    196c:	01400074 	movhi	r5,1
    1970:	297eb084 	addi	r5,r5,-1342
    1974:	d9402c15 	stw	r5,176(sp)
    1978:	01c001c4 	movi	r7,7
    197c:	dcc02d17 	ldw	r19,180(sp)
    1980:	00000306 	br	1990 <___vfprintf_internal_r+0x147c>
    1984:	b5800204 	addi	r22,r22,8
    1988:	843ffc04 	addi	r16,r16,-16
    198c:	e4007b0e 	bge	fp,r16,1b7c <___vfprintf_internal_r+0x1668>
    1990:	18c00404 	addi	r3,r3,16
    1994:	8c400044 	addi	r17,r17,1
    1998:	b5000015 	stw	r20,0(r22)
    199c:	b7000115 	stw	fp,4(r22)
    19a0:	d8c02015 	stw	r3,128(sp)
    19a4:	dc401f15 	stw	r17,124(sp)
    19a8:	3c7ff60e 	bge	r7,r17,1984 <__alt_data_end+0xfffb85a4>
    19ac:	d9801e04 	addi	r6,sp,120
    19b0:	b80b883a 	mov	r5,r23
    19b4:	9809883a 	mov	r4,r19
    19b8:	d9c03c15 	stw	r7,240(sp)
    19bc:	0007cf40 	call	7cf4 <__sprint_r>
    19c0:	d9c03c17 	ldw	r7,240(sp)
    19c4:	103bd71e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    19c8:	d8c02017 	ldw	r3,128(sp)
    19cc:	dc401f17 	ldw	r17,124(sp)
    19d0:	dd800404 	addi	r22,sp,16
    19d4:	003fec06 	br	1988 <__alt_data_end+0xfffb85a8>
    19d8:	9080100c 	andi	r2,r18,64
    19dc:	d8002785 	stb	zero,158(sp)
    19e0:	10010e26 	beq	r2,zero,1e1c <___vfprintf_internal_r+0x1908>
    19e4:	d9402e17 	ldw	r5,184(sp)
    19e8:	d8c02a17 	ldw	r3,168(sp)
    19ec:	002d883a 	mov	r22,zero
    19f0:	28800104 	addi	r2,r5,4
    19f4:	2cc0000b 	ldhu	r19,0(r5)
    19f8:	183fc90e 	bge	r3,zero,1920 <__alt_data_end+0xfffb8540>
    19fc:	d8802e15 	stw	r2,184(sp)
    1a00:	0039883a 	mov	fp,zero
    1a04:	9d84b03a 	or	r2,r19,r22
    1a08:	103c1e1e 	bne	r2,zero,a84 <__alt_data_end+0xfffb76a4>
    1a0c:	00800044 	movi	r2,1
    1a10:	003e6c06 	br	13c4 <__alt_data_end+0xfffb7fe4>
    1a14:	d9002d17 	ldw	r4,180(sp)
    1a18:	d9801e04 	addi	r6,sp,120
    1a1c:	b80b883a 	mov	r5,r23
    1a20:	0007cf40 	call	7cf4 <__sprint_r>
    1a24:	103bbf1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1a28:	d8c02017 	ldw	r3,128(sp)
    1a2c:	da000404 	addi	r8,sp,16
    1a30:	d9003217 	ldw	r4,200(sp)
    1a34:	d8802617 	ldw	r2,152(sp)
    1a38:	d9403317 	ldw	r5,204(sp)
    1a3c:	8123883a 	add	r17,r16,r4
    1a40:	11400216 	blt	r2,r5,1a4c <___vfprintf_internal_r+0x1538>
    1a44:	9100004c 	andi	r4,r18,1
    1a48:	20000d26 	beq	r4,zero,1a80 <___vfprintf_internal_r+0x156c>
    1a4c:	d9003717 	ldw	r4,220(sp)
    1a50:	d9403417 	ldw	r5,208(sp)
    1a54:	1907883a 	add	r3,r3,r4
    1a58:	d9001f17 	ldw	r4,124(sp)
    1a5c:	41400015 	stw	r5,0(r8)
    1a60:	d9403717 	ldw	r5,220(sp)
    1a64:	21000044 	addi	r4,r4,1
    1a68:	d8c02015 	stw	r3,128(sp)
    1a6c:	41400115 	stw	r5,4(r8)
    1a70:	d9001f15 	stw	r4,124(sp)
    1a74:	014001c4 	movi	r5,7
    1a78:	2901e816 	blt	r5,r4,221c <___vfprintf_internal_r+0x1d08>
    1a7c:	42000204 	addi	r8,r8,8
    1a80:	d9003317 	ldw	r4,204(sp)
    1a84:	8121883a 	add	r16,r16,r4
    1a88:	2085c83a 	sub	r2,r4,r2
    1a8c:	8461c83a 	sub	r16,r16,r17
    1a90:	1400010e 	bge	r2,r16,1a98 <___vfprintf_internal_r+0x1584>
    1a94:	1021883a 	mov	r16,r2
    1a98:	04000a0e 	bge	zero,r16,1ac4 <___vfprintf_internal_r+0x15b0>
    1a9c:	d9001f17 	ldw	r4,124(sp)
    1aa0:	1c07883a 	add	r3,r3,r16
    1aa4:	44400015 	stw	r17,0(r8)
    1aa8:	21000044 	addi	r4,r4,1
    1aac:	44000115 	stw	r16,4(r8)
    1ab0:	d8c02015 	stw	r3,128(sp)
    1ab4:	d9001f15 	stw	r4,124(sp)
    1ab8:	014001c4 	movi	r5,7
    1abc:	2901fb16 	blt	r5,r4,22ac <___vfprintf_internal_r+0x1d98>
    1ac0:	42000204 	addi	r8,r8,8
    1ac4:	8001f716 	blt	r16,zero,22a4 <___vfprintf_internal_r+0x1d90>
    1ac8:	1421c83a 	sub	r16,r2,r16
    1acc:	043d160e 	bge	zero,r16,f28 <__alt_data_end+0xfffb7b48>
    1ad0:	04400404 	movi	r17,16
    1ad4:	d8801f17 	ldw	r2,124(sp)
    1ad8:	8c3efb0e 	bge	r17,r16,16c8 <__alt_data_end+0xfffb82e8>
    1adc:	01400074 	movhi	r5,1
    1ae0:	297eb084 	addi	r5,r5,-1342
    1ae4:	d9402c15 	stw	r5,176(sp)
    1ae8:	058001c4 	movi	r22,7
    1aec:	dcc02d17 	ldw	r19,180(sp)
    1af0:	00000306 	br	1b00 <___vfprintf_internal_r+0x15ec>
    1af4:	42000204 	addi	r8,r8,8
    1af8:	843ffc04 	addi	r16,r16,-16
    1afc:	8c3ef50e 	bge	r17,r16,16d4 <__alt_data_end+0xfffb82f4>
    1b00:	18c00404 	addi	r3,r3,16
    1b04:	10800044 	addi	r2,r2,1
    1b08:	45000015 	stw	r20,0(r8)
    1b0c:	44400115 	stw	r17,4(r8)
    1b10:	d8c02015 	stw	r3,128(sp)
    1b14:	d8801f15 	stw	r2,124(sp)
    1b18:	b0bff60e 	bge	r22,r2,1af4 <__alt_data_end+0xfffb8714>
    1b1c:	d9801e04 	addi	r6,sp,120
    1b20:	b80b883a 	mov	r5,r23
    1b24:	9809883a 	mov	r4,r19
    1b28:	0007cf40 	call	7cf4 <__sprint_r>
    1b2c:	103b7d1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1b30:	d8c02017 	ldw	r3,128(sp)
    1b34:	d8801f17 	ldw	r2,124(sp)
    1b38:	da000404 	addi	r8,sp,16
    1b3c:	003fee06 	br	1af8 <__alt_data_end+0xfffb8718>
    1b40:	9088703a 	and	r4,r18,r2
    1b44:	203eab1e 	bne	r4,zero,15f4 <__alt_data_end+0xfffb8214>
    1b48:	dc401f17 	ldw	r17,124(sp)
    1b4c:	40800115 	stw	r2,4(r8)
    1b50:	44000015 	stw	r16,0(r8)
    1b54:	8c400044 	addi	r17,r17,1
    1b58:	d8c02015 	stw	r3,128(sp)
    1b5c:	dc401f15 	stw	r17,124(sp)
    1b60:	008001c4 	movi	r2,7
    1b64:	14400e16 	blt	r2,r17,1ba0 <___vfprintf_internal_r+0x168c>
    1b68:	45800204 	addi	r22,r8,8
    1b6c:	003eca06 	br	1698 <__alt_data_end+0xfffb82b8>
    1b70:	01000074 	movhi	r4,1
    1b74:	213eb084 	addi	r4,r4,-1342
    1b78:	d9002c15 	stw	r4,176(sp)
    1b7c:	d8802c17 	ldw	r2,176(sp)
    1b80:	1c07883a 	add	r3,r3,r16
    1b84:	8c400044 	addi	r17,r17,1
    1b88:	b0800015 	stw	r2,0(r22)
    1b8c:	b4000115 	stw	r16,4(r22)
    1b90:	d8c02015 	stw	r3,128(sp)
    1b94:	dc401f15 	stw	r17,124(sp)
    1b98:	008001c4 	movi	r2,7
    1b9c:	147ebd0e 	bge	r2,r17,1694 <__alt_data_end+0xfffb82b4>
    1ba0:	d9002d17 	ldw	r4,180(sp)
    1ba4:	d9801e04 	addi	r6,sp,120
    1ba8:	b80b883a 	mov	r5,r23
    1bac:	0007cf40 	call	7cf4 <__sprint_r>
    1bb0:	103b5c1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1bb4:	d8c02017 	ldw	r3,128(sp)
    1bb8:	dc401f17 	ldw	r17,124(sp)
    1bbc:	dd800404 	addi	r22,sp,16
    1bc0:	003eb506 	br	1698 <__alt_data_end+0xfffb82b8>
    1bc4:	d9002d17 	ldw	r4,180(sp)
    1bc8:	d9801e04 	addi	r6,sp,120
    1bcc:	b80b883a 	mov	r5,r23
    1bd0:	0007cf40 	call	7cf4 <__sprint_r>
    1bd4:	103b531e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1bd8:	d8c02017 	ldw	r3,128(sp)
    1bdc:	dc401f17 	ldw	r17,124(sp)
    1be0:	da000404 	addi	r8,sp,16
    1be4:	003e8d06 	br	161c <__alt_data_end+0xfffb823c>
    1be8:	d9002d17 	ldw	r4,180(sp)
    1bec:	d9801e04 	addi	r6,sp,120
    1bf0:	b80b883a 	mov	r5,r23
    1bf4:	0007cf40 	call	7cf4 <__sprint_r>
    1bf8:	103b4a1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1bfc:	d8c02017 	ldw	r3,128(sp)
    1c00:	dc401f17 	ldw	r17,124(sp)
    1c04:	dd800404 	addi	r22,sp,16
    1c08:	003e8f06 	br	1648 <__alt_data_end+0xfffb8268>
    1c0c:	0027883a 	mov	r19,zero
    1c10:	003f4a06 	br	193c <__alt_data_end+0xfffb855c>
    1c14:	d9002d17 	ldw	r4,180(sp)
    1c18:	d9801e04 	addi	r6,sp,120
    1c1c:	b80b883a 	mov	r5,r23
    1c20:	0007cf40 	call	7cf4 <__sprint_r>
    1c24:	103b3f1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1c28:	d8c02017 	ldw	r3,128(sp)
    1c2c:	da000404 	addi	r8,sp,16
    1c30:	003c7b06 	br	e20 <__alt_data_end+0xfffb7a40>
    1c34:	d9402a17 	ldw	r5,168(sp)
    1c38:	04e7c83a 	sub	r19,zero,r19
    1c3c:	07000b44 	movi	fp,45
    1c40:	9804c03a 	cmpne	r2,r19,zero
    1c44:	05adc83a 	sub	r22,zero,r22
    1c48:	df002785 	stb	fp,158(sp)
    1c4c:	b0adc83a 	sub	r22,r22,r2
    1c50:	28017b16 	blt	r5,zero,2240 <___vfprintf_internal_r+0x1d2c>
    1c54:	00bfdfc4 	movi	r2,-129
    1c58:	90a4703a 	and	r18,r18,r2
    1c5c:	003b8906 	br	a84 <__alt_data_end+0xfffb76a4>
    1c60:	d9003617 	ldw	r4,216(sp)
    1c64:	d9403817 	ldw	r5,224(sp)
    1c68:	da003d15 	stw	r8,244(sp)
    1c6c:	00079180 	call	7918 <__fpclassifyd>
    1c70:	da003d17 	ldw	r8,244(sp)
    1c74:	1000f026 	beq	r2,zero,2038 <___vfprintf_internal_r+0x1b24>
    1c78:	d9002a17 	ldw	r4,168(sp)
    1c7c:	05bff7c4 	movi	r22,-33
    1c80:	00bfffc4 	movi	r2,-1
    1c84:	8dac703a 	and	r22,r17,r22
    1c88:	20820026 	beq	r4,r2,248c <___vfprintf_internal_r+0x1f78>
    1c8c:	008011c4 	movi	r2,71
    1c90:	b081f726 	beq	r22,r2,2470 <___vfprintf_internal_r+0x1f5c>
    1c94:	d9003817 	ldw	r4,224(sp)
    1c98:	90c04014 	ori	r3,r18,256
    1c9c:	d8c02c15 	stw	r3,176(sp)
    1ca0:	20021516 	blt	r4,zero,24f8 <___vfprintf_internal_r+0x1fe4>
    1ca4:	dcc03817 	ldw	r19,224(sp)
    1ca8:	d8002905 	stb	zero,164(sp)
    1cac:	00801984 	movi	r2,102
    1cb0:	8881f926 	beq	r17,r2,2498 <___vfprintf_internal_r+0x1f84>
    1cb4:	00801184 	movi	r2,70
    1cb8:	88821c26 	beq	r17,r2,252c <___vfprintf_internal_r+0x2018>
    1cbc:	00801144 	movi	r2,69
    1cc0:	b081ef26 	beq	r22,r2,2480 <___vfprintf_internal_r+0x1f6c>
    1cc4:	d8c02a17 	ldw	r3,168(sp)
    1cc8:	d8802104 	addi	r2,sp,132
    1ccc:	d8800315 	stw	r2,12(sp)
    1cd0:	d9403617 	ldw	r5,216(sp)
    1cd4:	d8802504 	addi	r2,sp,148
    1cd8:	d9002d17 	ldw	r4,180(sp)
    1cdc:	d8800215 	stw	r2,8(sp)
    1ce0:	d8802604 	addi	r2,sp,152
    1ce4:	d8c00015 	stw	r3,0(sp)
    1ce8:	d8800115 	stw	r2,4(sp)
    1cec:	01c00084 	movi	r7,2
    1cf0:	980d883a 	mov	r6,r19
    1cf4:	d8c03c15 	stw	r3,240(sp)
    1cf8:	da003d15 	stw	r8,244(sp)
    1cfc:	0002c440 	call	2c44 <_dtoa_r>
    1d00:	1021883a 	mov	r16,r2
    1d04:	008019c4 	movi	r2,103
    1d08:	d8c03c17 	ldw	r3,240(sp)
    1d0c:	da003d17 	ldw	r8,244(sp)
    1d10:	88817126 	beq	r17,r2,22d8 <___vfprintf_internal_r+0x1dc4>
    1d14:	008011c4 	movi	r2,71
    1d18:	88829126 	beq	r17,r2,2760 <___vfprintf_internal_r+0x224c>
    1d1c:	80f9883a 	add	fp,r16,r3
    1d20:	d9003617 	ldw	r4,216(sp)
    1d24:	000d883a 	mov	r6,zero
    1d28:	000f883a 	mov	r7,zero
    1d2c:	980b883a 	mov	r5,r19
    1d30:	da003d15 	stw	r8,244(sp)
    1d34:	000bc540 	call	bc54 <__eqdf2>
    1d38:	da003d17 	ldw	r8,244(sp)
    1d3c:	10018d26 	beq	r2,zero,2374 <___vfprintf_internal_r+0x1e60>
    1d40:	d8802117 	ldw	r2,132(sp)
    1d44:	1700062e 	bgeu	r2,fp,1d60 <___vfprintf_internal_r+0x184c>
    1d48:	01000c04 	movi	r4,48
    1d4c:	10c00044 	addi	r3,r2,1
    1d50:	d8c02115 	stw	r3,132(sp)
    1d54:	11000005 	stb	r4,0(r2)
    1d58:	d8802117 	ldw	r2,132(sp)
    1d5c:	173ffb36 	bltu	r2,fp,1d4c <__alt_data_end+0xfffb896c>
    1d60:	1405c83a 	sub	r2,r2,r16
    1d64:	d8803315 	stw	r2,204(sp)
    1d68:	008011c4 	movi	r2,71
    1d6c:	b0817626 	beq	r22,r2,2348 <___vfprintf_internal_r+0x1e34>
    1d70:	00801944 	movi	r2,101
    1d74:	1442800e 	bge	r2,r17,2778 <___vfprintf_internal_r+0x2264>
    1d78:	d8c02617 	ldw	r3,152(sp)
    1d7c:	00801984 	movi	r2,102
    1d80:	d8c03215 	stw	r3,200(sp)
    1d84:	8881fe26 	beq	r17,r2,2580 <___vfprintf_internal_r+0x206c>
    1d88:	d8c03217 	ldw	r3,200(sp)
    1d8c:	d9003317 	ldw	r4,204(sp)
    1d90:	1901dd16 	blt	r3,r4,2508 <___vfprintf_internal_r+0x1ff4>
    1d94:	9480004c 	andi	r18,r18,1
    1d98:	90022b1e 	bne	r18,zero,2648 <___vfprintf_internal_r+0x2134>
    1d9c:	1805883a 	mov	r2,r3
    1da0:	18028316 	blt	r3,zero,27b0 <___vfprintf_internal_r+0x229c>
    1da4:	d8c03217 	ldw	r3,200(sp)
    1da8:	044019c4 	movi	r17,103
    1dac:	d8c02b15 	stw	r3,172(sp)
    1db0:	df002907 	ldb	fp,164(sp)
    1db4:	e001531e 	bne	fp,zero,2304 <___vfprintf_internal_r+0x1df0>
    1db8:	df002783 	ldbu	fp,158(sp)
    1dbc:	d8802915 	stw	r2,164(sp)
    1dc0:	dc802c17 	ldw	r18,176(sp)
    1dc4:	d8002a15 	stw	zero,168(sp)
    1dc8:	003baf06 	br	c88 <__alt_data_end+0xfffb78a8>
    1dcc:	d8c02e17 	ldw	r3,184(sp)
    1dd0:	d9002e17 	ldw	r4,184(sp)
    1dd4:	d9402e17 	ldw	r5,184(sp)
    1dd8:	18c00017 	ldw	r3,0(r3)
    1ddc:	21000117 	ldw	r4,4(r4)
    1de0:	29400204 	addi	r5,r5,8
    1de4:	d8c03615 	stw	r3,216(sp)
    1de8:	d9003815 	stw	r4,224(sp)
    1dec:	d9402e15 	stw	r5,184(sp)
    1df0:	003b5006 	br	b34 <__alt_data_end+0xfffb7754>
    1df4:	ac400007 	ldb	r17,0(r21)
    1df8:	003a2806 	br	69c <__alt_data_end+0xfffb72bc>
    1dfc:	9080100c 	andi	r2,r18,64
    1e00:	1000a826 	beq	r2,zero,20a4 <___vfprintf_internal_r+0x1b90>
    1e04:	d8c02e17 	ldw	r3,184(sp)
    1e08:	002d883a 	mov	r22,zero
    1e0c:	1cc0000b 	ldhu	r19,0(r3)
    1e10:	18c00104 	addi	r3,r3,4
    1e14:	d8c02e15 	stw	r3,184(sp)
    1e18:	003caf06 	br	10d8 <__alt_data_end+0xfffb7cf8>
    1e1c:	d9002e17 	ldw	r4,184(sp)
    1e20:	d9402a17 	ldw	r5,168(sp)
    1e24:	002d883a 	mov	r22,zero
    1e28:	20800104 	addi	r2,r4,4
    1e2c:	24c00017 	ldw	r19,0(r4)
    1e30:	283ebb0e 	bge	r5,zero,1920 <__alt_data_end+0xfffb8540>
    1e34:	003ef106 	br	19fc <__alt_data_end+0xfffb861c>
    1e38:	9080040c 	andi	r2,r18,16
    1e3c:	1000921e 	bne	r2,zero,2088 <___vfprintf_internal_r+0x1b74>
    1e40:	9480100c 	andi	r18,r18,64
    1e44:	90013926 	beq	r18,zero,232c <___vfprintf_internal_r+0x1e18>
    1e48:	d9402e17 	ldw	r5,184(sp)
    1e4c:	d8c02f17 	ldw	r3,188(sp)
    1e50:	28800017 	ldw	r2,0(r5)
    1e54:	29400104 	addi	r5,r5,4
    1e58:	d9402e15 	stw	r5,184(sp)
    1e5c:	10c0000d 	sth	r3,0(r2)
    1e60:	0039e406 	br	5f4 <__alt_data_end+0xfffb7214>
    1e64:	9080100c 	andi	r2,r18,64
    1e68:	10008026 	beq	r2,zero,206c <___vfprintf_internal_r+0x1b58>
    1e6c:	d8802e17 	ldw	r2,184(sp)
    1e70:	14c0000f 	ldh	r19,0(r2)
    1e74:	10800104 	addi	r2,r2,4
    1e78:	d8802e15 	stw	r2,184(sp)
    1e7c:	982dd7fa 	srai	r22,r19,31
    1e80:	b005883a 	mov	r2,r22
    1e84:	003af706 	br	a64 <__alt_data_end+0xfffb7684>
    1e88:	9080100c 	andi	r2,r18,64
    1e8c:	d8002785 	stb	zero,158(sp)
    1e90:	10008a1e 	bne	r2,zero,20bc <___vfprintf_internal_r+0x1ba8>
    1e94:	d9002e17 	ldw	r4,184(sp)
    1e98:	d9402a17 	ldw	r5,168(sp)
    1e9c:	002d883a 	mov	r22,zero
    1ea0:	20800104 	addi	r2,r4,4
    1ea4:	24c00017 	ldw	r19,0(r4)
    1ea8:	283e4b0e 	bge	r5,zero,17d8 <__alt_data_end+0xfffb83f8>
    1eac:	9d86b03a 	or	r3,r19,r22
    1eb0:	d8802e15 	stw	r2,184(sp)
    1eb4:	183e4c1e 	bne	r3,zero,17e8 <__alt_data_end+0xfffb8408>
    1eb8:	0039883a 	mov	fp,zero
    1ebc:	0005883a 	mov	r2,zero
    1ec0:	003d4006 	br	13c4 <__alt_data_end+0xfffb7fe4>
    1ec4:	01400074 	movhi	r5,1
    1ec8:	297eb084 	addi	r5,r5,-1342
    1ecc:	d9402c15 	stw	r5,176(sp)
    1ed0:	d9402c17 	ldw	r5,176(sp)
    1ed4:	1c47883a 	add	r3,r3,r17
    1ed8:	10800044 	addi	r2,r2,1
    1edc:	41400015 	stw	r5,0(r8)
    1ee0:	44400115 	stw	r17,4(r8)
    1ee4:	d8c02015 	stw	r3,128(sp)
    1ee8:	d8801f15 	stw	r2,124(sp)
    1eec:	010001c4 	movi	r4,7
    1ef0:	20bec816 	blt	r4,r2,1a14 <__alt_data_end+0xfffb8634>
    1ef4:	42000204 	addi	r8,r8,8
    1ef8:	003ecd06 	br	1a30 <__alt_data_end+0xfffb8650>
    1efc:	d9002a17 	ldw	r4,168(sp)
    1f00:	d8002785 	stb	zero,158(sp)
    1f04:	203d2d16 	blt	r4,zero,13bc <__alt_data_end+0xfffb7fdc>
    1f08:	00bfdfc4 	movi	r2,-129
    1f0c:	90a4703a 	and	r18,r18,r2
    1f10:	003a6106 	br	898 <__alt_data_end+0xfffb74b8>
    1f14:	01000074 	movhi	r4,1
    1f18:	213eb084 	addi	r4,r4,-1342
    1f1c:	d9002c15 	stw	r4,176(sp)
    1f20:	003bea06 	br	ecc <__alt_data_end+0xfffb7aec>
    1f24:	d9002d17 	ldw	r4,180(sp)
    1f28:	d9801e04 	addi	r6,sp,120
    1f2c:	b80b883a 	mov	r5,r23
    1f30:	0007cf40 	call	7cf4 <__sprint_r>
    1f34:	103a7b1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    1f38:	d8c02017 	ldw	r3,128(sp)
    1f3c:	da000404 	addi	r8,sp,16
    1f40:	003d4106 	br	1448 <__alt_data_end+0xfffb8068>
    1f44:	d8801f17 	ldw	r2,124(sp)
    1f48:	01400074 	movhi	r5,1
    1f4c:	01000044 	movi	r4,1
    1f50:	18c00044 	addi	r3,r3,1
    1f54:	10800044 	addi	r2,r2,1
    1f58:	297eb004 	addi	r5,r5,-1344
    1f5c:	41000115 	stw	r4,4(r8)
    1f60:	41400015 	stw	r5,0(r8)
    1f64:	d8c02015 	stw	r3,128(sp)
    1f68:	d8801f15 	stw	r2,124(sp)
    1f6c:	010001c4 	movi	r4,7
    1f70:	20805c16 	blt	r4,r2,20e4 <___vfprintf_internal_r+0x1bd0>
    1f74:	42000204 	addi	r8,r8,8
    1f78:	8800041e 	bne	r17,zero,1f8c <___vfprintf_internal_r+0x1a78>
    1f7c:	d8803317 	ldw	r2,204(sp)
    1f80:	1000021e 	bne	r2,zero,1f8c <___vfprintf_internal_r+0x1a78>
    1f84:	9080004c 	andi	r2,r18,1
    1f88:	103be726 	beq	r2,zero,f28 <__alt_data_end+0xfffb7b48>
    1f8c:	d9003717 	ldw	r4,220(sp)
    1f90:	d8801f17 	ldw	r2,124(sp)
    1f94:	d9403417 	ldw	r5,208(sp)
    1f98:	20c7883a 	add	r3,r4,r3
    1f9c:	10800044 	addi	r2,r2,1
    1fa0:	41000115 	stw	r4,4(r8)
    1fa4:	41400015 	stw	r5,0(r8)
    1fa8:	d8c02015 	stw	r3,128(sp)
    1fac:	d8801f15 	stw	r2,124(sp)
    1fb0:	010001c4 	movi	r4,7
    1fb4:	20812116 	blt	r4,r2,243c <___vfprintf_internal_r+0x1f28>
    1fb8:	42000204 	addi	r8,r8,8
    1fbc:	0463c83a 	sub	r17,zero,r17
    1fc0:	0440730e 	bge	zero,r17,2190 <___vfprintf_internal_r+0x1c7c>
    1fc4:	05800404 	movi	r22,16
    1fc8:	b440860e 	bge	r22,r17,21e4 <___vfprintf_internal_r+0x1cd0>
    1fcc:	01400074 	movhi	r5,1
    1fd0:	297eb084 	addi	r5,r5,-1342
    1fd4:	d9402c15 	stw	r5,176(sp)
    1fd8:	070001c4 	movi	fp,7
    1fdc:	dcc02d17 	ldw	r19,180(sp)
    1fe0:	00000306 	br	1ff0 <___vfprintf_internal_r+0x1adc>
    1fe4:	42000204 	addi	r8,r8,8
    1fe8:	8c7ffc04 	addi	r17,r17,-16
    1fec:	b440800e 	bge	r22,r17,21f0 <___vfprintf_internal_r+0x1cdc>
    1ff0:	18c00404 	addi	r3,r3,16
    1ff4:	10800044 	addi	r2,r2,1
    1ff8:	45000015 	stw	r20,0(r8)
    1ffc:	45800115 	stw	r22,4(r8)
    2000:	d8c02015 	stw	r3,128(sp)
    2004:	d8801f15 	stw	r2,124(sp)
    2008:	e0bff60e 	bge	fp,r2,1fe4 <__alt_data_end+0xfffb8c04>
    200c:	d9801e04 	addi	r6,sp,120
    2010:	b80b883a 	mov	r5,r23
    2014:	9809883a 	mov	r4,r19
    2018:	0007cf40 	call	7cf4 <__sprint_r>
    201c:	103a411e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    2020:	d8c02017 	ldw	r3,128(sp)
    2024:	d8801f17 	ldw	r2,124(sp)
    2028:	da000404 	addi	r8,sp,16
    202c:	003fee06 	br	1fe8 <__alt_data_end+0xfffb8c08>
    2030:	00bfffc4 	movi	r2,-1
    2034:	003a3f06 	br	934 <__alt_data_end+0xfffb7554>
    2038:	008011c4 	movi	r2,71
    203c:	1440b816 	blt	r2,r17,2320 <___vfprintf_internal_r+0x1e0c>
    2040:	04000074 	movhi	r16,1
    2044:	843ea204 	addi	r16,r16,-1400
    2048:	00c000c4 	movi	r3,3
    204c:	00bfdfc4 	movi	r2,-129
    2050:	d8c02915 	stw	r3,164(sp)
    2054:	90a4703a 	and	r18,r18,r2
    2058:	df002783 	ldbu	fp,158(sp)
    205c:	d8c02b15 	stw	r3,172(sp)
    2060:	d8002a15 	stw	zero,168(sp)
    2064:	d8003215 	stw	zero,200(sp)
    2068:	003b0706 	br	c88 <__alt_data_end+0xfffb78a8>
    206c:	d8c02e17 	ldw	r3,184(sp)
    2070:	1cc00017 	ldw	r19,0(r3)
    2074:	18c00104 	addi	r3,r3,4
    2078:	d8c02e15 	stw	r3,184(sp)
    207c:	982dd7fa 	srai	r22,r19,31
    2080:	b005883a 	mov	r2,r22
    2084:	003a7706 	br	a64 <__alt_data_end+0xfffb7684>
    2088:	d8c02e17 	ldw	r3,184(sp)
    208c:	d9002f17 	ldw	r4,188(sp)
    2090:	18800017 	ldw	r2,0(r3)
    2094:	18c00104 	addi	r3,r3,4
    2098:	d8c02e15 	stw	r3,184(sp)
    209c:	11000015 	stw	r4,0(r2)
    20a0:	00395406 	br	5f4 <__alt_data_end+0xfffb7214>
    20a4:	d9002e17 	ldw	r4,184(sp)
    20a8:	002d883a 	mov	r22,zero
    20ac:	24c00017 	ldw	r19,0(r4)
    20b0:	21000104 	addi	r4,r4,4
    20b4:	d9002e15 	stw	r4,184(sp)
    20b8:	003c0706 	br	10d8 <__alt_data_end+0xfffb7cf8>
    20bc:	d9402e17 	ldw	r5,184(sp)
    20c0:	d8c02a17 	ldw	r3,168(sp)
    20c4:	002d883a 	mov	r22,zero
    20c8:	28800104 	addi	r2,r5,4
    20cc:	2cc0000b 	ldhu	r19,0(r5)
    20d0:	183dc10e 	bge	r3,zero,17d8 <__alt_data_end+0xfffb83f8>
    20d4:	003f7506 	br	1eac <__alt_data_end+0xfffb8acc>
    20d8:	04000074 	movhi	r16,1
    20dc:	843ea004 	addi	r16,r16,-1408
    20e0:	003aa706 	br	b80 <__alt_data_end+0xfffb77a0>
    20e4:	d9002d17 	ldw	r4,180(sp)
    20e8:	d9801e04 	addi	r6,sp,120
    20ec:	b80b883a 	mov	r5,r23
    20f0:	0007cf40 	call	7cf4 <__sprint_r>
    20f4:	103a0b1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    20f8:	dc402617 	ldw	r17,152(sp)
    20fc:	d8c02017 	ldw	r3,128(sp)
    2100:	da000404 	addi	r8,sp,16
    2104:	003f9c06 	br	1f78 <__alt_data_end+0xfffb8b98>
    2108:	ac400043 	ldbu	r17,1(r21)
    210c:	84000814 	ori	r16,r16,32
    2110:	ad400044 	addi	r21,r21,1
    2114:	8c403fcc 	andi	r17,r17,255
    2118:	8c40201c 	xori	r17,r17,128
    211c:	8c7fe004 	addi	r17,r17,-128
    2120:	00395e06 	br	69c <__alt_data_end+0xfffb72bc>
    2124:	d8c02e15 	stw	r3,184(sp)
    2128:	0039883a 	mov	fp,zero
    212c:	003e3506 	br	1a04 <__alt_data_end+0xfffb8624>
    2130:	d9002d17 	ldw	r4,180(sp)
    2134:	d9801e04 	addi	r6,sp,120
    2138:	b80b883a 	mov	r5,r23
    213c:	0007cf40 	call	7cf4 <__sprint_r>
    2140:	1039f81e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    2144:	d8c02017 	ldw	r3,128(sp)
    2148:	da000404 	addi	r8,sp,16
    214c:	003cd006 	br	1490 <__alt_data_end+0xfffb80b0>
    2150:	8009883a 	mov	r4,r16
    2154:	df003d15 	stw	fp,244(sp)
    2158:	000047c0 	call	47c <strlen>
    215c:	d8802b15 	stw	r2,172(sp)
    2160:	da003d17 	ldw	r8,244(sp)
    2164:	103c200e 	bge	r2,zero,11e8 <__alt_data_end+0xfffb7e08>
    2168:	0005883a 	mov	r2,zero
    216c:	003c1e06 	br	11e8 <__alt_data_end+0xfffb7e08>
    2170:	d9002d17 	ldw	r4,180(sp)
    2174:	d9801e04 	addi	r6,sp,120
    2178:	b80b883a 	mov	r5,r23
    217c:	0007cf40 	call	7cf4 <__sprint_r>
    2180:	1039e81e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    2184:	d8c02017 	ldw	r3,128(sp)
    2188:	d8801f17 	ldw	r2,124(sp)
    218c:	da000404 	addi	r8,sp,16
    2190:	d9403317 	ldw	r5,204(sp)
    2194:	10800044 	addi	r2,r2,1
    2198:	44000015 	stw	r16,0(r8)
    219c:	28c7883a 	add	r3,r5,r3
    21a0:	003b5b06 	br	f10 <__alt_data_end+0xfffb7b30>
    21a4:	01000074 	movhi	r4,1
    21a8:	213eb484 	addi	r4,r4,-1326
    21ac:	d9003515 	stw	r4,212(sp)
    21b0:	003af206 	br	d7c <__alt_data_end+0xfffb799c>
    21b4:	013fffc4 	movi	r4,-1
    21b8:	003a0806 	br	9dc <__alt_data_end+0xfffb75fc>
    21bc:	0023883a 	mov	r17,zero
    21c0:	003d9d06 	br	1838 <__alt_data_end+0xfffb8458>
    21c4:	d9002d17 	ldw	r4,180(sp)
    21c8:	d9801e04 	addi	r6,sp,120
    21cc:	b80b883a 	mov	r5,r23
    21d0:	0007cf40 	call	7cf4 <__sprint_r>
    21d4:	1039d31e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    21d8:	d8c02017 	ldw	r3,128(sp)
    21dc:	da000404 	addi	r8,sp,16
    21e0:	003d9406 	br	1834 <__alt_data_end+0xfffb8454>
    21e4:	01000074 	movhi	r4,1
    21e8:	213eb084 	addi	r4,r4,-1342
    21ec:	d9002c15 	stw	r4,176(sp)
    21f0:	d9002c17 	ldw	r4,176(sp)
    21f4:	1c47883a 	add	r3,r3,r17
    21f8:	10800044 	addi	r2,r2,1
    21fc:	41000015 	stw	r4,0(r8)
    2200:	44400115 	stw	r17,4(r8)
    2204:	d8c02015 	stw	r3,128(sp)
    2208:	d8801f15 	stw	r2,124(sp)
    220c:	010001c4 	movi	r4,7
    2210:	20bfd716 	blt	r4,r2,2170 <__alt_data_end+0xfffb8d90>
    2214:	42000204 	addi	r8,r8,8
    2218:	003fdd06 	br	2190 <__alt_data_end+0xfffb8db0>
    221c:	d9002d17 	ldw	r4,180(sp)
    2220:	d9801e04 	addi	r6,sp,120
    2224:	b80b883a 	mov	r5,r23
    2228:	0007cf40 	call	7cf4 <__sprint_r>
    222c:	1039bd1e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    2230:	d8802617 	ldw	r2,152(sp)
    2234:	d8c02017 	ldw	r3,128(sp)
    2238:	da000404 	addi	r8,sp,16
    223c:	003e1006 	br	1a80 <__alt_data_end+0xfffb86a0>
    2240:	00800044 	movi	r2,1
    2244:	10803fcc 	andi	r2,r2,255
    2248:	00c00044 	movi	r3,1
    224c:	10fa0d26 	beq	r2,r3,a84 <__alt_data_end+0xfffb76a4>
    2250:	00c00084 	movi	r3,2
    2254:	10fbaf26 	beq	r2,r3,1114 <__alt_data_end+0xfffb7d34>
    2258:	003a6d06 	br	c10 <__alt_data_end+0xfffb7830>
    225c:	01000074 	movhi	r4,1
    2260:	213eb484 	addi	r4,r4,-1326
    2264:	d9003515 	stw	r4,212(sp)
    2268:	003b5406 	br	fbc <__alt_data_end+0xfffb7bdc>
    226c:	d8802a17 	ldw	r2,168(sp)
    2270:	00c00184 	movi	r3,6
    2274:	1880012e 	bgeu	r3,r2,227c <___vfprintf_internal_r+0x1d68>
    2278:	1805883a 	mov	r2,r3
    227c:	d8802b15 	stw	r2,172(sp)
    2280:	1000ef16 	blt	r2,zero,2640 <___vfprintf_internal_r+0x212c>
    2284:	04000074 	movhi	r16,1
    2288:	d8802915 	stw	r2,164(sp)
    228c:	dcc02e15 	stw	r19,184(sp)
    2290:	d8002a15 	stw	zero,168(sp)
    2294:	d8003215 	stw	zero,200(sp)
    2298:	843eae04 	addi	r16,r16,-1352
    229c:	0039883a 	mov	fp,zero
    22a0:	003a8006 	br	ca4 <__alt_data_end+0xfffb78c4>
    22a4:	0021883a 	mov	r16,zero
    22a8:	003e0706 	br	1ac8 <__alt_data_end+0xfffb86e8>
    22ac:	d9002d17 	ldw	r4,180(sp)
    22b0:	d9801e04 	addi	r6,sp,120
    22b4:	b80b883a 	mov	r5,r23
    22b8:	0007cf40 	call	7cf4 <__sprint_r>
    22bc:	1039991e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    22c0:	d8802617 	ldw	r2,152(sp)
    22c4:	d9403317 	ldw	r5,204(sp)
    22c8:	d8c02017 	ldw	r3,128(sp)
    22cc:	da000404 	addi	r8,sp,16
    22d0:	2885c83a 	sub	r2,r5,r2
    22d4:	003dfb06 	br	1ac4 <__alt_data_end+0xfffb86e4>
    22d8:	9080004c 	andi	r2,r18,1
    22dc:	103e8f1e 	bne	r2,zero,1d1c <__alt_data_end+0xfffb893c>
    22e0:	d8802117 	ldw	r2,132(sp)
    22e4:	003e9e06 	br	1d60 <__alt_data_end+0xfffb8980>
    22e8:	1025883a 	mov	r18,r2
    22ec:	0039883a 	mov	fp,zero
    22f0:	00800084 	movi	r2,2
    22f4:	003fd306 	br	2244 <__alt_data_end+0xfffb8e64>
    22f8:	07000b44 	movi	fp,45
    22fc:	df002785 	stb	fp,158(sp)
    2300:	003a1b06 	br	b70 <__alt_data_end+0xfffb7790>
    2304:	00c00b44 	movi	r3,45
    2308:	d8c02785 	stb	r3,158(sp)
    230c:	d8802915 	stw	r2,164(sp)
    2310:	dc802c17 	ldw	r18,176(sp)
    2314:	d8002a15 	stw	zero,168(sp)
    2318:	07000b44 	movi	fp,45
    231c:	003a5e06 	br	c98 <__alt_data_end+0xfffb78b8>
    2320:	04000074 	movhi	r16,1
    2324:	843ea304 	addi	r16,r16,-1396
    2328:	003f4706 	br	2048 <__alt_data_end+0xfffb8c68>
    232c:	d9002e17 	ldw	r4,184(sp)
    2330:	d9402f17 	ldw	r5,188(sp)
    2334:	20800017 	ldw	r2,0(r4)
    2338:	21000104 	addi	r4,r4,4
    233c:	d9002e15 	stw	r4,184(sp)
    2340:	11400015 	stw	r5,0(r2)
    2344:	0038ab06 	br	5f4 <__alt_data_end+0xfffb7214>
    2348:	dd802617 	ldw	r22,152(sp)
    234c:	00bfff44 	movi	r2,-3
    2350:	b0801c16 	blt	r22,r2,23c4 <___vfprintf_internal_r+0x1eb0>
    2354:	d9402a17 	ldw	r5,168(sp)
    2358:	2d801a16 	blt	r5,r22,23c4 <___vfprintf_internal_r+0x1eb0>
    235c:	dd803215 	stw	r22,200(sp)
    2360:	003e8906 	br	1d88 <__alt_data_end+0xfffb89a8>
    2364:	01000074 	movhi	r4,1
    2368:	213eb084 	addi	r4,r4,-1342
    236c:	d9002c15 	stw	r4,176(sp)
    2370:	003c9106 	br	15b8 <__alt_data_end+0xfffb81d8>
    2374:	e005883a 	mov	r2,fp
    2378:	003e7906 	br	1d60 <__alt_data_end+0xfffb8980>
    237c:	d9002a17 	ldw	r4,168(sp)
    2380:	df002783 	ldbu	fp,158(sp)
    2384:	dcc02e15 	stw	r19,184(sp)
    2388:	d9002915 	stw	r4,164(sp)
    238c:	d9002b15 	stw	r4,172(sp)
    2390:	d8002a15 	stw	zero,168(sp)
    2394:	d8003215 	stw	zero,200(sp)
    2398:	003a3b06 	br	c88 <__alt_data_end+0xfffb78a8>
    239c:	9080004c 	andi	r2,r18,1
    23a0:	0039883a 	mov	fp,zero
    23a4:	10000426 	beq	r2,zero,23b8 <___vfprintf_internal_r+0x1ea4>
    23a8:	00800c04 	movi	r2,48
    23ac:	dc001dc4 	addi	r16,sp,119
    23b0:	d8801dc5 	stb	r2,119(sp)
    23b4:	003b6406 	br	1148 <__alt_data_end+0xfffb7d68>
    23b8:	d8002b15 	stw	zero,172(sp)
    23bc:	dc001e04 	addi	r16,sp,120
    23c0:	003a2b06 	br	c70 <__alt_data_end+0xfffb7890>
    23c4:	8c7fff84 	addi	r17,r17,-2
    23c8:	b5bfffc4 	addi	r22,r22,-1
    23cc:	dd802615 	stw	r22,152(sp)
    23d0:	dc4022c5 	stb	r17,139(sp)
    23d4:	b000bf16 	blt	r22,zero,26d4 <___vfprintf_internal_r+0x21c0>
    23d8:	00800ac4 	movi	r2,43
    23dc:	d8802305 	stb	r2,140(sp)
    23e0:	00800244 	movi	r2,9
    23e4:	15807016 	blt	r2,r22,25a8 <___vfprintf_internal_r+0x2094>
    23e8:	00800c04 	movi	r2,48
    23ec:	b5800c04 	addi	r22,r22,48
    23f0:	d8802345 	stb	r2,141(sp)
    23f4:	dd802385 	stb	r22,142(sp)
    23f8:	d88023c4 	addi	r2,sp,143
    23fc:	df0022c4 	addi	fp,sp,139
    2400:	d8c03317 	ldw	r3,204(sp)
    2404:	1739c83a 	sub	fp,r2,fp
    2408:	d9003317 	ldw	r4,204(sp)
    240c:	e0c7883a 	add	r3,fp,r3
    2410:	df003a15 	stw	fp,232(sp)
    2414:	d8c02b15 	stw	r3,172(sp)
    2418:	00800044 	movi	r2,1
    241c:	1100b30e 	bge	r2,r4,26ec <___vfprintf_internal_r+0x21d8>
    2420:	d8c02b17 	ldw	r3,172(sp)
    2424:	18c00044 	addi	r3,r3,1
    2428:	d8c02b15 	stw	r3,172(sp)
    242c:	1805883a 	mov	r2,r3
    2430:	1800ac16 	blt	r3,zero,26e4 <___vfprintf_internal_r+0x21d0>
    2434:	d8003215 	stw	zero,200(sp)
    2438:	003e5d06 	br	1db0 <__alt_data_end+0xfffb89d0>
    243c:	d9002d17 	ldw	r4,180(sp)
    2440:	d9801e04 	addi	r6,sp,120
    2444:	b80b883a 	mov	r5,r23
    2448:	0007cf40 	call	7cf4 <__sprint_r>
    244c:	1039351e 	bne	r2,zero,924 <__alt_data_end+0xfffb7544>
    2450:	dc402617 	ldw	r17,152(sp)
    2454:	d8c02017 	ldw	r3,128(sp)
    2458:	d8801f17 	ldw	r2,124(sp)
    245c:	da000404 	addi	r8,sp,16
    2460:	003ed606 	br	1fbc <__alt_data_end+0xfffb8bdc>
    2464:	182b883a 	mov	r21,r3
    2468:	d8002a15 	stw	zero,168(sp)
    246c:	00388c06 	br	6a0 <__alt_data_end+0xfffb72c0>
    2470:	d8802a17 	ldw	r2,168(sp)
    2474:	103e071e 	bne	r2,zero,1c94 <__alt_data_end+0xfffb88b4>
    2478:	dc002a15 	stw	r16,168(sp)
    247c:	003e0506 	br	1c94 <__alt_data_end+0xfffb88b4>
    2480:	d9002a17 	ldw	r4,168(sp)
    2484:	20c00044 	addi	r3,r4,1
    2488:	003e0f06 	br	1cc8 <__alt_data_end+0xfffb88e8>
    248c:	01400184 	movi	r5,6
    2490:	d9402a15 	stw	r5,168(sp)
    2494:	003dff06 	br	1c94 <__alt_data_end+0xfffb88b4>
    2498:	d8802104 	addi	r2,sp,132
    249c:	d8800315 	stw	r2,12(sp)
    24a0:	d8802504 	addi	r2,sp,148
    24a4:	d8800215 	stw	r2,8(sp)
    24a8:	d8802604 	addi	r2,sp,152
    24ac:	d8800115 	stw	r2,4(sp)
    24b0:	d8802a17 	ldw	r2,168(sp)
    24b4:	d9403617 	ldw	r5,216(sp)
    24b8:	d9002d17 	ldw	r4,180(sp)
    24bc:	d8800015 	stw	r2,0(sp)
    24c0:	01c000c4 	movi	r7,3
    24c4:	980d883a 	mov	r6,r19
    24c8:	da003d15 	stw	r8,244(sp)
    24cc:	0002c440 	call	2c44 <_dtoa_r>
    24d0:	d8c02a17 	ldw	r3,168(sp)
    24d4:	da003d17 	ldw	r8,244(sp)
    24d8:	1021883a 	mov	r16,r2
    24dc:	10f9883a 	add	fp,r2,r3
    24e0:	81000007 	ldb	r4,0(r16)
    24e4:	00800c04 	movi	r2,48
    24e8:	20805e26 	beq	r4,r2,2664 <___vfprintf_internal_r+0x2150>
    24ec:	d8c02617 	ldw	r3,152(sp)
    24f0:	e0f9883a 	add	fp,fp,r3
    24f4:	003e0a06 	br	1d20 <__alt_data_end+0xfffb8940>
    24f8:	00c00b44 	movi	r3,45
    24fc:	24e0003c 	xorhi	r19,r4,32768
    2500:	d8c02905 	stb	r3,164(sp)
    2504:	003de906 	br	1cac <__alt_data_end+0xfffb88cc>
    2508:	d8c03217 	ldw	r3,200(sp)
    250c:	00c07a0e 	bge	zero,r3,26f8 <___vfprintf_internal_r+0x21e4>
    2510:	00800044 	movi	r2,1
    2514:	d9003317 	ldw	r4,204(sp)
    2518:	1105883a 	add	r2,r2,r4
    251c:	d8802b15 	stw	r2,172(sp)
    2520:	10004e16 	blt	r2,zero,265c <___vfprintf_internal_r+0x2148>
    2524:	044019c4 	movi	r17,103
    2528:	003e2106 	br	1db0 <__alt_data_end+0xfffb89d0>
    252c:	d9002a17 	ldw	r4,168(sp)
    2530:	d8802104 	addi	r2,sp,132
    2534:	d8800315 	stw	r2,12(sp)
    2538:	d9000015 	stw	r4,0(sp)
    253c:	d8802504 	addi	r2,sp,148
    2540:	d9403617 	ldw	r5,216(sp)
    2544:	d9002d17 	ldw	r4,180(sp)
    2548:	d8800215 	stw	r2,8(sp)
    254c:	d8802604 	addi	r2,sp,152
    2550:	d8800115 	stw	r2,4(sp)
    2554:	01c000c4 	movi	r7,3
    2558:	980d883a 	mov	r6,r19
    255c:	da003d15 	stw	r8,244(sp)
    2560:	0002c440 	call	2c44 <_dtoa_r>
    2564:	d8c02a17 	ldw	r3,168(sp)
    2568:	da003d17 	ldw	r8,244(sp)
    256c:	1021883a 	mov	r16,r2
    2570:	00801184 	movi	r2,70
    2574:	80f9883a 	add	fp,r16,r3
    2578:	88bfd926 	beq	r17,r2,24e0 <__alt_data_end+0xfffb9100>
    257c:	003de806 	br	1d20 <__alt_data_end+0xfffb8940>
    2580:	d9002a17 	ldw	r4,168(sp)
    2584:	00c04d0e 	bge	zero,r3,26bc <___vfprintf_internal_r+0x21a8>
    2588:	2000441e 	bne	r4,zero,269c <___vfprintf_internal_r+0x2188>
    258c:	9480004c 	andi	r18,r18,1
    2590:	9000421e 	bne	r18,zero,269c <___vfprintf_internal_r+0x2188>
    2594:	1805883a 	mov	r2,r3
    2598:	18006f16 	blt	r3,zero,2758 <___vfprintf_internal_r+0x2244>
    259c:	d8c03217 	ldw	r3,200(sp)
    25a0:	d8c02b15 	stw	r3,172(sp)
    25a4:	003e0206 	br	1db0 <__alt_data_end+0xfffb89d0>
    25a8:	df0022c4 	addi	fp,sp,139
    25ac:	dc002a15 	stw	r16,168(sp)
    25b0:	4027883a 	mov	r19,r8
    25b4:	e021883a 	mov	r16,fp
    25b8:	b009883a 	mov	r4,r22
    25bc:	01400284 	movi	r5,10
    25c0:	000a8800 	call	a880 <__modsi3>
    25c4:	10800c04 	addi	r2,r2,48
    25c8:	843fffc4 	addi	r16,r16,-1
    25cc:	b009883a 	mov	r4,r22
    25d0:	01400284 	movi	r5,10
    25d4:	80800005 	stb	r2,0(r16)
    25d8:	000a7fc0 	call	a7fc <__divsi3>
    25dc:	102d883a 	mov	r22,r2
    25e0:	00800244 	movi	r2,9
    25e4:	15bff416 	blt	r2,r22,25b8 <__alt_data_end+0xfffb91d8>
    25e8:	9811883a 	mov	r8,r19
    25ec:	b0800c04 	addi	r2,r22,48
    25f0:	8027883a 	mov	r19,r16
    25f4:	997fffc4 	addi	r5,r19,-1
    25f8:	98bfffc5 	stb	r2,-1(r19)
    25fc:	dc002a17 	ldw	r16,168(sp)
    2600:	2f006d2e 	bgeu	r5,fp,27b8 <___vfprintf_internal_r+0x22a4>
    2604:	d9c02384 	addi	r7,sp,142
    2608:	3ccfc83a 	sub	r7,r7,r19
    260c:	d9002344 	addi	r4,sp,141
    2610:	e1cf883a 	add	r7,fp,r7
    2614:	00000106 	br	261c <___vfprintf_internal_r+0x2108>
    2618:	28800003 	ldbu	r2,0(r5)
    261c:	20800005 	stb	r2,0(r4)
    2620:	21000044 	addi	r4,r4,1
    2624:	29400044 	addi	r5,r5,1
    2628:	393ffb1e 	bne	r7,r4,2618 <__alt_data_end+0xfffb9238>
    262c:	d8802304 	addi	r2,sp,140
    2630:	14c5c83a 	sub	r2,r2,r19
    2634:	d8c02344 	addi	r3,sp,141
    2638:	1885883a 	add	r2,r3,r2
    263c:	003f7006 	br	2400 <__alt_data_end+0xfffb9020>
    2640:	0005883a 	mov	r2,zero
    2644:	003f0f06 	br	2284 <__alt_data_end+0xfffb8ea4>
    2648:	d8c03217 	ldw	r3,200(sp)
    264c:	18c00044 	addi	r3,r3,1
    2650:	d8c02b15 	stw	r3,172(sp)
    2654:	1805883a 	mov	r2,r3
    2658:	183fb20e 	bge	r3,zero,2524 <__alt_data_end+0xfffb9144>
    265c:	0005883a 	mov	r2,zero
    2660:	003fb006 	br	2524 <__alt_data_end+0xfffb9144>
    2664:	d9003617 	ldw	r4,216(sp)
    2668:	000d883a 	mov	r6,zero
    266c:	000f883a 	mov	r7,zero
    2670:	980b883a 	mov	r5,r19
    2674:	d8c03c15 	stw	r3,240(sp)
    2678:	da003d15 	stw	r8,244(sp)
    267c:	000bc540 	call	bc54 <__eqdf2>
    2680:	d8c03c17 	ldw	r3,240(sp)
    2684:	da003d17 	ldw	r8,244(sp)
    2688:	103f9826 	beq	r2,zero,24ec <__alt_data_end+0xfffb910c>
    268c:	00800044 	movi	r2,1
    2690:	10c7c83a 	sub	r3,r2,r3
    2694:	d8c02615 	stw	r3,152(sp)
    2698:	003f9506 	br	24f0 <__alt_data_end+0xfffb9110>
    269c:	d9002a17 	ldw	r4,168(sp)
    26a0:	d8c03217 	ldw	r3,200(sp)
    26a4:	20800044 	addi	r2,r4,1
    26a8:	1885883a 	add	r2,r3,r2
    26ac:	d8802b15 	stw	r2,172(sp)
    26b0:	103dbf0e 	bge	r2,zero,1db0 <__alt_data_end+0xfffb89d0>
    26b4:	0005883a 	mov	r2,zero
    26b8:	003dbd06 	br	1db0 <__alt_data_end+0xfffb89d0>
    26bc:	2000201e 	bne	r4,zero,2740 <___vfprintf_internal_r+0x222c>
    26c0:	9480004c 	andi	r18,r18,1
    26c4:	90001e1e 	bne	r18,zero,2740 <___vfprintf_internal_r+0x222c>
    26c8:	00800044 	movi	r2,1
    26cc:	d8802b15 	stw	r2,172(sp)
    26d0:	003db706 	br	1db0 <__alt_data_end+0xfffb89d0>
    26d4:	00800b44 	movi	r2,45
    26d8:	05adc83a 	sub	r22,zero,r22
    26dc:	d8802305 	stb	r2,140(sp)
    26e0:	003f3f06 	br	23e0 <__alt_data_end+0xfffb9000>
    26e4:	0005883a 	mov	r2,zero
    26e8:	003f5206 	br	2434 <__alt_data_end+0xfffb9054>
    26ec:	90a4703a 	and	r18,r18,r2
    26f0:	903f4e26 	beq	r18,zero,242c <__alt_data_end+0xfffb904c>
    26f4:	003f4a06 	br	2420 <__alt_data_end+0xfffb9040>
    26f8:	00800084 	movi	r2,2
    26fc:	10c5c83a 	sub	r2,r2,r3
    2700:	003f8406 	br	2514 <__alt_data_end+0xfffb9134>
    2704:	d9402e17 	ldw	r5,184(sp)
    2708:	d9002e17 	ldw	r4,184(sp)
    270c:	ac400043 	ldbu	r17,1(r21)
    2710:	29400017 	ldw	r5,0(r5)
    2714:	20800104 	addi	r2,r4,4
    2718:	d8802e15 	stw	r2,184(sp)
    271c:	d9402a15 	stw	r5,168(sp)
    2720:	182b883a 	mov	r21,r3
    2724:	283e7b0e 	bge	r5,zero,2114 <__alt_data_end+0xfffb8d34>
    2728:	8c403fcc 	andi	r17,r17,255
    272c:	017fffc4 	movi	r5,-1
    2730:	8c40201c 	xori	r17,r17,128
    2734:	d9402a15 	stw	r5,168(sp)
    2738:	8c7fe004 	addi	r17,r17,-128
    273c:	0037d706 	br	69c <__alt_data_end+0xfffb72bc>
    2740:	d8c02a17 	ldw	r3,168(sp)
    2744:	18c00084 	addi	r3,r3,2
    2748:	d8c02b15 	stw	r3,172(sp)
    274c:	1805883a 	mov	r2,r3
    2750:	183d970e 	bge	r3,zero,1db0 <__alt_data_end+0xfffb89d0>
    2754:	003fd706 	br	26b4 <__alt_data_end+0xfffb92d4>
    2758:	0005883a 	mov	r2,zero
    275c:	003f8f06 	br	259c <__alt_data_end+0xfffb91bc>
    2760:	9080004c 	andi	r2,r18,1
    2764:	103f821e 	bne	r2,zero,2570 <__alt_data_end+0xfffb9190>
    2768:	d8802117 	ldw	r2,132(sp)
    276c:	1405c83a 	sub	r2,r2,r16
    2770:	d8803315 	stw	r2,204(sp)
    2774:	b47ef426 	beq	r22,r17,2348 <__alt_data_end+0xfffb8f68>
    2778:	dd802617 	ldw	r22,152(sp)
    277c:	003f1206 	br	23c8 <__alt_data_end+0xfffb8fe8>
    2780:	d8c02b03 	ldbu	r3,172(sp)
    2784:	d8c02785 	stb	r3,158(sp)
    2788:	0038df06 	br	b08 <__alt_data_end+0xfffb7728>
    278c:	d8c02b03 	ldbu	r3,172(sp)
    2790:	d8c02785 	stb	r3,158(sp)
    2794:	0038aa06 	br	a40 <__alt_data_end+0xfffb7660>
    2798:	d8c02b03 	ldbu	r3,172(sp)
    279c:	d8c02785 	stb	r3,158(sp)
    27a0:	003a4306 	br	10b0 <__alt_data_end+0xfffb7cd0>
    27a4:	d8c02b03 	ldbu	r3,172(sp)
    27a8:	d8c02785 	stb	r3,158(sp)
    27ac:	003af506 	br	1384 <__alt_data_end+0xfffb7fa4>
    27b0:	0005883a 	mov	r2,zero
    27b4:	003d7b06 	br	1da4 <__alt_data_end+0xfffb89c4>
    27b8:	d8802344 	addi	r2,sp,141
    27bc:	003f1006 	br	2400 <__alt_data_end+0xfffb9020>
    27c0:	d8c02b03 	ldbu	r3,172(sp)
    27c4:	d8c02785 	stb	r3,158(sp)
    27c8:	0038fd06 	br	bc0 <__alt_data_end+0xfffb77e0>
    27cc:	d8c02b03 	ldbu	r3,172(sp)
    27d0:	d8c02785 	stb	r3,158(sp)
    27d4:	003a9706 	br	1234 <__alt_data_end+0xfffb7e54>
    27d8:	d8c02b03 	ldbu	r3,172(sp)
    27dc:	d8c02785 	stb	r3,158(sp)
    27e0:	003a1806 	br	1044 <__alt_data_end+0xfffb7c64>
    27e4:	d8c02b03 	ldbu	r3,172(sp)
    27e8:	d8c02785 	stb	r3,158(sp)
    27ec:	003abe06 	br	12e8 <__alt_data_end+0xfffb7f08>

000027f0 <__vfprintf_internal>:
    27f0:	00800074 	movhi	r2,1
    27f4:	10860b04 	addi	r2,r2,6188
    27f8:	300f883a 	mov	r7,r6
    27fc:	280d883a 	mov	r6,r5
    2800:	200b883a 	mov	r5,r4
    2804:	11000017 	ldw	r4,0(r2)
    2808:	00005141 	jmpi	514 <___vfprintf_internal_r>

0000280c <__sbprintf>:
    280c:	2880030b 	ldhu	r2,12(r5)
    2810:	2ac01917 	ldw	r11,100(r5)
    2814:	2a80038b 	ldhu	r10,14(r5)
    2818:	2a400717 	ldw	r9,28(r5)
    281c:	2a000917 	ldw	r8,36(r5)
    2820:	defee204 	addi	sp,sp,-1144
    2824:	00c10004 	movi	r3,1024
    2828:	dc011a15 	stw	r16,1128(sp)
    282c:	10bfff4c 	andi	r2,r2,65533
    2830:	2821883a 	mov	r16,r5
    2834:	d8cb883a 	add	r5,sp,r3
    2838:	dc811c15 	stw	r18,1136(sp)
    283c:	dc411b15 	stw	r17,1132(sp)
    2840:	dfc11d15 	stw	ra,1140(sp)
    2844:	2025883a 	mov	r18,r4
    2848:	d881030d 	sth	r2,1036(sp)
    284c:	dac11915 	stw	r11,1124(sp)
    2850:	da81038d 	sth	r10,1038(sp)
    2854:	da410715 	stw	r9,1052(sp)
    2858:	da010915 	stw	r8,1060(sp)
    285c:	dec10015 	stw	sp,1024(sp)
    2860:	dec10415 	stw	sp,1040(sp)
    2864:	d8c10215 	stw	r3,1032(sp)
    2868:	d8c10515 	stw	r3,1044(sp)
    286c:	d8010615 	stw	zero,1048(sp)
    2870:	00005140 	call	514 <___vfprintf_internal_r>
    2874:	1023883a 	mov	r17,r2
    2878:	10000416 	blt	r2,zero,288c <__sbprintf+0x80>
    287c:	d9410004 	addi	r5,sp,1024
    2880:	9009883a 	mov	r4,r18
    2884:	00044e80 	call	44e8 <_fflush_r>
    2888:	10000d1e 	bne	r2,zero,28c0 <__sbprintf+0xb4>
    288c:	d881030b 	ldhu	r2,1036(sp)
    2890:	1080100c 	andi	r2,r2,64
    2894:	10000326 	beq	r2,zero,28a4 <__sbprintf+0x98>
    2898:	8080030b 	ldhu	r2,12(r16)
    289c:	10801014 	ori	r2,r2,64
    28a0:	8080030d 	sth	r2,12(r16)
    28a4:	8805883a 	mov	r2,r17
    28a8:	dfc11d17 	ldw	ra,1140(sp)
    28ac:	dc811c17 	ldw	r18,1136(sp)
    28b0:	dc411b17 	ldw	r17,1132(sp)
    28b4:	dc011a17 	ldw	r16,1128(sp)
    28b8:	dec11e04 	addi	sp,sp,1144
    28bc:	f800283a 	ret
    28c0:	047fffc4 	movi	r17,-1
    28c4:	003ff106 	br	288c <__alt_data_end+0xfffb94ac>

000028c8 <__swsetup_r>:
    28c8:	00800074 	movhi	r2,1
    28cc:	defffd04 	addi	sp,sp,-12
    28d0:	10860b04 	addi	r2,r2,6188
    28d4:	dc400115 	stw	r17,4(sp)
    28d8:	2023883a 	mov	r17,r4
    28dc:	11000017 	ldw	r4,0(r2)
    28e0:	dc000015 	stw	r16,0(sp)
    28e4:	dfc00215 	stw	ra,8(sp)
    28e8:	2821883a 	mov	r16,r5
    28ec:	20000226 	beq	r4,zero,28f8 <__swsetup_r+0x30>
    28f0:	20800e17 	ldw	r2,56(r4)
    28f4:	10003126 	beq	r2,zero,29bc <__swsetup_r+0xf4>
    28f8:	8080030b 	ldhu	r2,12(r16)
    28fc:	10c0020c 	andi	r3,r2,8
    2900:	1009883a 	mov	r4,r2
    2904:	18000f26 	beq	r3,zero,2944 <__swsetup_r+0x7c>
    2908:	80c00417 	ldw	r3,16(r16)
    290c:	18001526 	beq	r3,zero,2964 <__swsetup_r+0x9c>
    2910:	1100004c 	andi	r4,r2,1
    2914:	20001c1e 	bne	r4,zero,2988 <__swsetup_r+0xc0>
    2918:	1080008c 	andi	r2,r2,2
    291c:	1000291e 	bne	r2,zero,29c4 <__swsetup_r+0xfc>
    2920:	80800517 	ldw	r2,20(r16)
    2924:	80800215 	stw	r2,8(r16)
    2928:	18001c26 	beq	r3,zero,299c <__swsetup_r+0xd4>
    292c:	0005883a 	mov	r2,zero
    2930:	dfc00217 	ldw	ra,8(sp)
    2934:	dc400117 	ldw	r17,4(sp)
    2938:	dc000017 	ldw	r16,0(sp)
    293c:	dec00304 	addi	sp,sp,12
    2940:	f800283a 	ret
    2944:	2080040c 	andi	r2,r4,16
    2948:	10002e26 	beq	r2,zero,2a04 <__swsetup_r+0x13c>
    294c:	2080010c 	andi	r2,r4,4
    2950:	10001e1e 	bne	r2,zero,29cc <__swsetup_r+0x104>
    2954:	80c00417 	ldw	r3,16(r16)
    2958:	20800214 	ori	r2,r4,8
    295c:	8080030d 	sth	r2,12(r16)
    2960:	183feb1e 	bne	r3,zero,2910 <__alt_data_end+0xfffb9530>
    2964:	1100a00c 	andi	r4,r2,640
    2968:	01408004 	movi	r5,512
    296c:	217fe826 	beq	r4,r5,2910 <__alt_data_end+0xfffb9530>
    2970:	800b883a 	mov	r5,r16
    2974:	8809883a 	mov	r4,r17
    2978:	00054840 	call	5484 <__smakebuf_r>
    297c:	8080030b 	ldhu	r2,12(r16)
    2980:	80c00417 	ldw	r3,16(r16)
    2984:	003fe206 	br	2910 <__alt_data_end+0xfffb9530>
    2988:	80800517 	ldw	r2,20(r16)
    298c:	80000215 	stw	zero,8(r16)
    2990:	0085c83a 	sub	r2,zero,r2
    2994:	80800615 	stw	r2,24(r16)
    2998:	183fe41e 	bne	r3,zero,292c <__alt_data_end+0xfffb954c>
    299c:	80c0030b 	ldhu	r3,12(r16)
    29a0:	0005883a 	mov	r2,zero
    29a4:	1900200c 	andi	r4,r3,128
    29a8:	203fe126 	beq	r4,zero,2930 <__alt_data_end+0xfffb9550>
    29ac:	18c01014 	ori	r3,r3,64
    29b0:	80c0030d 	sth	r3,12(r16)
    29b4:	00bfffc4 	movi	r2,-1
    29b8:	003fdd06 	br	2930 <__alt_data_end+0xfffb9550>
    29bc:	00048d40 	call	48d4 <__sinit>
    29c0:	003fcd06 	br	28f8 <__alt_data_end+0xfffb9518>
    29c4:	0005883a 	mov	r2,zero
    29c8:	003fd606 	br	2924 <__alt_data_end+0xfffb9544>
    29cc:	81400c17 	ldw	r5,48(r16)
    29d0:	28000626 	beq	r5,zero,29ec <__swsetup_r+0x124>
    29d4:	80801004 	addi	r2,r16,64
    29d8:	28800326 	beq	r5,r2,29e8 <__swsetup_r+0x120>
    29dc:	8809883a 	mov	r4,r17
    29e0:	0004a480 	call	4a48 <_free_r>
    29e4:	8100030b 	ldhu	r4,12(r16)
    29e8:	80000c15 	stw	zero,48(r16)
    29ec:	80c00417 	ldw	r3,16(r16)
    29f0:	00bff6c4 	movi	r2,-37
    29f4:	1108703a 	and	r4,r2,r4
    29f8:	80000115 	stw	zero,4(r16)
    29fc:	80c00015 	stw	r3,0(r16)
    2a00:	003fd506 	br	2958 <__alt_data_end+0xfffb9578>
    2a04:	00800244 	movi	r2,9
    2a08:	88800015 	stw	r2,0(r17)
    2a0c:	20801014 	ori	r2,r4,64
    2a10:	8080030d 	sth	r2,12(r16)
    2a14:	00bfffc4 	movi	r2,-1
    2a18:	003fc506 	br	2930 <__alt_data_end+0xfffb9550>

00002a1c <quorem>:
    2a1c:	defff204 	addi	sp,sp,-56
    2a20:	ddc00b15 	stw	r23,44(sp)
    2a24:	20800417 	ldw	r2,16(r4)
    2a28:	2dc00417 	ldw	r23,16(r5)
    2a2c:	dfc00d15 	stw	ra,52(sp)
    2a30:	df000c15 	stw	fp,48(sp)
    2a34:	dd800a15 	stw	r22,40(sp)
    2a38:	dd400915 	stw	r21,36(sp)
    2a3c:	dd000815 	stw	r20,32(sp)
    2a40:	dcc00715 	stw	r19,28(sp)
    2a44:	dc800615 	stw	r18,24(sp)
    2a48:	dc400515 	stw	r17,20(sp)
    2a4c:	dc000415 	stw	r16,16(sp)
    2a50:	15c07a16 	blt	r2,r23,2c3c <quorem+0x220>
    2a54:	bdffffc4 	addi	r23,r23,-1
    2a58:	bde9883a 	add	r20,r23,r23
    2a5c:	28c00504 	addi	r3,r5,20
    2a60:	a529883a 	add	r20,r20,r20
    2a64:	1d39883a 	add	fp,r3,r20
    2a68:	24c00504 	addi	r19,r4,20
    2a6c:	d9400215 	stw	r5,8(sp)
    2a70:	9d29883a 	add	r20,r19,r20
    2a74:	e1400017 	ldw	r5,0(fp)
    2a78:	d9000015 	stw	r4,0(sp)
    2a7c:	a1000017 	ldw	r4,0(r20)
    2a80:	29400044 	addi	r5,r5,1
    2a84:	d8c00115 	stw	r3,4(sp)
    2a88:	dd000315 	stw	r20,12(sp)
    2a8c:	000a8f40 	call	a8f4 <__udivsi3>
    2a90:	1025883a 	mov	r18,r2
    2a94:	10003026 	beq	r2,zero,2b58 <quorem+0x13c>
    2a98:	dc400117 	ldw	r17,4(sp)
    2a9c:	9829883a 	mov	r20,r19
    2aa0:	002d883a 	mov	r22,zero
    2aa4:	0021883a 	mov	r16,zero
    2aa8:	8d400017 	ldw	r21,0(r17)
    2aac:	900b883a 	mov	r5,r18
    2ab0:	8c400104 	addi	r17,r17,4
    2ab4:	a93fffcc 	andi	r4,r21,65535
    2ab8:	000a9b00 	call	a9b0 <__mulsi3>
    2abc:	a808d43a 	srli	r4,r21,16
    2ac0:	900b883a 	mov	r5,r18
    2ac4:	15ad883a 	add	r22,r2,r22
    2ac8:	000a9b00 	call	a9b0 <__mulsi3>
    2acc:	a1000017 	ldw	r4,0(r20)
    2ad0:	b00cd43a 	srli	r6,r22,16
    2ad4:	b0ffffcc 	andi	r3,r22,65535
    2ad8:	217fffcc 	andi	r5,r4,65535
    2adc:	2c21883a 	add	r16,r5,r16
    2ae0:	80c7c83a 	sub	r3,r16,r3
    2ae4:	2008d43a 	srli	r4,r4,16
    2ae8:	1185883a 	add	r2,r2,r6
    2aec:	1821d43a 	srai	r16,r3,16
    2af0:	117fffcc 	andi	r5,r2,65535
    2af4:	2149c83a 	sub	r4,r4,r5
    2af8:	2421883a 	add	r16,r4,r16
    2afc:	8008943a 	slli	r4,r16,16
    2b00:	18ffffcc 	andi	r3,r3,65535
    2b04:	102cd43a 	srli	r22,r2,16
    2b08:	20c8b03a 	or	r4,r4,r3
    2b0c:	a1000015 	stw	r4,0(r20)
    2b10:	8021d43a 	srai	r16,r16,16
    2b14:	a5000104 	addi	r20,r20,4
    2b18:	e47fe32e 	bgeu	fp,r17,2aa8 <__alt_data_end+0xfffb96c8>
    2b1c:	d8c00317 	ldw	r3,12(sp)
    2b20:	18800017 	ldw	r2,0(r3)
    2b24:	10000c1e 	bne	r2,zero,2b58 <quorem+0x13c>
    2b28:	18bfff04 	addi	r2,r3,-4
    2b2c:	9880082e 	bgeu	r19,r2,2b50 <quorem+0x134>
    2b30:	18ffff17 	ldw	r3,-4(r3)
    2b34:	18000326 	beq	r3,zero,2b44 <quorem+0x128>
    2b38:	00000506 	br	2b50 <quorem+0x134>
    2b3c:	10c00017 	ldw	r3,0(r2)
    2b40:	1800031e 	bne	r3,zero,2b50 <quorem+0x134>
    2b44:	10bfff04 	addi	r2,r2,-4
    2b48:	bdffffc4 	addi	r23,r23,-1
    2b4c:	98bffb36 	bltu	r19,r2,2b3c <__alt_data_end+0xfffb975c>
    2b50:	d8c00017 	ldw	r3,0(sp)
    2b54:	1dc00415 	stw	r23,16(r3)
    2b58:	d9400217 	ldw	r5,8(sp)
    2b5c:	d9000017 	ldw	r4,0(sp)
    2b60:	0006c800 	call	6c80 <__mcmp>
    2b64:	10002816 	blt	r2,zero,2c08 <quorem+0x1ec>
    2b68:	dc400117 	ldw	r17,4(sp)
    2b6c:	94800044 	addi	r18,r18,1
    2b70:	980d883a 	mov	r6,r19
    2b74:	0007883a 	mov	r3,zero
    2b78:	31000017 	ldw	r4,0(r6)
    2b7c:	89400017 	ldw	r5,0(r17)
    2b80:	31800104 	addi	r6,r6,4
    2b84:	20bfffcc 	andi	r2,r4,65535
    2b88:	10c7883a 	add	r3,r2,r3
    2b8c:	28bfffcc 	andi	r2,r5,65535
    2b90:	1885c83a 	sub	r2,r3,r2
    2b94:	280ad43a 	srli	r5,r5,16
    2b98:	2008d43a 	srli	r4,r4,16
    2b9c:	1007d43a 	srai	r3,r2,16
    2ba0:	10bfffcc 	andi	r2,r2,65535
    2ba4:	2149c83a 	sub	r4,r4,r5
    2ba8:	20c9883a 	add	r4,r4,r3
    2bac:	200a943a 	slli	r5,r4,16
    2bb0:	8c400104 	addi	r17,r17,4
    2bb4:	2007d43a 	srai	r3,r4,16
    2bb8:	2884b03a 	or	r2,r5,r2
    2bbc:	30bfff15 	stw	r2,-4(r6)
    2bc0:	e47fed2e 	bgeu	fp,r17,2b78 <__alt_data_end+0xfffb9798>
    2bc4:	bdc5883a 	add	r2,r23,r23
    2bc8:	1085883a 	add	r2,r2,r2
    2bcc:	9887883a 	add	r3,r19,r2
    2bd0:	18800017 	ldw	r2,0(r3)
    2bd4:	10000c1e 	bne	r2,zero,2c08 <quorem+0x1ec>
    2bd8:	18bfff04 	addi	r2,r3,-4
    2bdc:	9880082e 	bgeu	r19,r2,2c00 <quorem+0x1e4>
    2be0:	18ffff17 	ldw	r3,-4(r3)
    2be4:	18000326 	beq	r3,zero,2bf4 <quorem+0x1d8>
    2be8:	00000506 	br	2c00 <quorem+0x1e4>
    2bec:	10c00017 	ldw	r3,0(r2)
    2bf0:	1800031e 	bne	r3,zero,2c00 <quorem+0x1e4>
    2bf4:	10bfff04 	addi	r2,r2,-4
    2bf8:	bdffffc4 	addi	r23,r23,-1
    2bfc:	98bffb36 	bltu	r19,r2,2bec <__alt_data_end+0xfffb980c>
    2c00:	d8c00017 	ldw	r3,0(sp)
    2c04:	1dc00415 	stw	r23,16(r3)
    2c08:	9005883a 	mov	r2,r18
    2c0c:	dfc00d17 	ldw	ra,52(sp)
    2c10:	df000c17 	ldw	fp,48(sp)
    2c14:	ddc00b17 	ldw	r23,44(sp)
    2c18:	dd800a17 	ldw	r22,40(sp)
    2c1c:	dd400917 	ldw	r21,36(sp)
    2c20:	dd000817 	ldw	r20,32(sp)
    2c24:	dcc00717 	ldw	r19,28(sp)
    2c28:	dc800617 	ldw	r18,24(sp)
    2c2c:	dc400517 	ldw	r17,20(sp)
    2c30:	dc000417 	ldw	r16,16(sp)
    2c34:	dec00e04 	addi	sp,sp,56
    2c38:	f800283a 	ret
    2c3c:	0005883a 	mov	r2,zero
    2c40:	003ff206 	br	2c0c <__alt_data_end+0xfffb982c>

00002c44 <_dtoa_r>:
    2c44:	20801017 	ldw	r2,64(r4)
    2c48:	deffde04 	addi	sp,sp,-136
    2c4c:	df002015 	stw	fp,128(sp)
    2c50:	dcc01b15 	stw	r19,108(sp)
    2c54:	dc801a15 	stw	r18,104(sp)
    2c58:	dc401915 	stw	r17,100(sp)
    2c5c:	dc001815 	stw	r16,96(sp)
    2c60:	dfc02115 	stw	ra,132(sp)
    2c64:	ddc01f15 	stw	r23,124(sp)
    2c68:	dd801e15 	stw	r22,120(sp)
    2c6c:	dd401d15 	stw	r21,116(sp)
    2c70:	dd001c15 	stw	r20,112(sp)
    2c74:	d9c00315 	stw	r7,12(sp)
    2c78:	2039883a 	mov	fp,r4
    2c7c:	3023883a 	mov	r17,r6
    2c80:	2825883a 	mov	r18,r5
    2c84:	dc002417 	ldw	r16,144(sp)
    2c88:	3027883a 	mov	r19,r6
    2c8c:	10000826 	beq	r2,zero,2cb0 <_dtoa_r+0x6c>
    2c90:	21801117 	ldw	r6,68(r4)
    2c94:	00c00044 	movi	r3,1
    2c98:	100b883a 	mov	r5,r2
    2c9c:	1986983a 	sll	r3,r3,r6
    2ca0:	11800115 	stw	r6,4(r2)
    2ca4:	10c00215 	stw	r3,8(r2)
    2ca8:	00063a40 	call	63a4 <_Bfree>
    2cac:	e0001015 	stw	zero,64(fp)
    2cb0:	88002e16 	blt	r17,zero,2d6c <_dtoa_r+0x128>
    2cb4:	80000015 	stw	zero,0(r16)
    2cb8:	889ffc2c 	andhi	r2,r17,32752
    2cbc:	00dffc34 	movhi	r3,32752
    2cc0:	10c01c26 	beq	r2,r3,2d34 <_dtoa_r+0xf0>
    2cc4:	000d883a 	mov	r6,zero
    2cc8:	000f883a 	mov	r7,zero
    2ccc:	9009883a 	mov	r4,r18
    2cd0:	980b883a 	mov	r5,r19
    2cd4:	000bc540 	call	bc54 <__eqdf2>
    2cd8:	10002b1e 	bne	r2,zero,2d88 <_dtoa_r+0x144>
    2cdc:	d9c02317 	ldw	r7,140(sp)
    2ce0:	00800044 	movi	r2,1
    2ce4:	38800015 	stw	r2,0(r7)
    2ce8:	d8802517 	ldw	r2,148(sp)
    2cec:	10019e26 	beq	r2,zero,3368 <_dtoa_r+0x724>
    2cf0:	d8c02517 	ldw	r3,148(sp)
    2cf4:	00800074 	movhi	r2,1
    2cf8:	10beb044 	addi	r2,r2,-1343
    2cfc:	18800015 	stw	r2,0(r3)
    2d00:	10bfffc4 	addi	r2,r2,-1
    2d04:	dfc02117 	ldw	ra,132(sp)
    2d08:	df002017 	ldw	fp,128(sp)
    2d0c:	ddc01f17 	ldw	r23,124(sp)
    2d10:	dd801e17 	ldw	r22,120(sp)
    2d14:	dd401d17 	ldw	r21,116(sp)
    2d18:	dd001c17 	ldw	r20,112(sp)
    2d1c:	dcc01b17 	ldw	r19,108(sp)
    2d20:	dc801a17 	ldw	r18,104(sp)
    2d24:	dc401917 	ldw	r17,100(sp)
    2d28:	dc001817 	ldw	r16,96(sp)
    2d2c:	dec02204 	addi	sp,sp,136
    2d30:	f800283a 	ret
    2d34:	d8c02317 	ldw	r3,140(sp)
    2d38:	0089c3c4 	movi	r2,9999
    2d3c:	18800015 	stw	r2,0(r3)
    2d40:	90017726 	beq	r18,zero,3320 <_dtoa_r+0x6dc>
    2d44:	00800074 	movhi	r2,1
    2d48:	10bebc04 	addi	r2,r2,-1296
    2d4c:	d9002517 	ldw	r4,148(sp)
    2d50:	203fec26 	beq	r4,zero,2d04 <__alt_data_end+0xfffb9924>
    2d54:	10c000c7 	ldb	r3,3(r2)
    2d58:	1801781e 	bne	r3,zero,333c <_dtoa_r+0x6f8>
    2d5c:	10c000c4 	addi	r3,r2,3
    2d60:	d9802517 	ldw	r6,148(sp)
    2d64:	30c00015 	stw	r3,0(r6)
    2d68:	003fe606 	br	2d04 <__alt_data_end+0xfffb9924>
    2d6c:	04e00034 	movhi	r19,32768
    2d70:	9cffffc4 	addi	r19,r19,-1
    2d74:	00800044 	movi	r2,1
    2d78:	8ce6703a 	and	r19,r17,r19
    2d7c:	80800015 	stw	r2,0(r16)
    2d80:	9823883a 	mov	r17,r19
    2d84:	003fcc06 	br	2cb8 <__alt_data_end+0xfffb98d8>
    2d88:	d8800204 	addi	r2,sp,8
    2d8c:	d8800015 	stw	r2,0(sp)
    2d90:	d9c00104 	addi	r7,sp,4
    2d94:	900b883a 	mov	r5,r18
    2d98:	980d883a 	mov	r6,r19
    2d9c:	e009883a 	mov	r4,fp
    2da0:	8820d53a 	srli	r16,r17,20
    2da4:	000704c0 	call	704c <__d2b>
    2da8:	d8800915 	stw	r2,36(sp)
    2dac:	8001651e 	bne	r16,zero,3344 <_dtoa_r+0x700>
    2db0:	dd800217 	ldw	r22,8(sp)
    2db4:	dc000117 	ldw	r16,4(sp)
    2db8:	00800804 	movi	r2,32
    2dbc:	b421883a 	add	r16,r22,r16
    2dc0:	80c10c84 	addi	r3,r16,1074
    2dc4:	10c2d10e 	bge	r2,r3,390c <_dtoa_r+0xcc8>
    2dc8:	00801004 	movi	r2,64
    2dcc:	81010484 	addi	r4,r16,1042
    2dd0:	10c7c83a 	sub	r3,r2,r3
    2dd4:	9108d83a 	srl	r4,r18,r4
    2dd8:	88e2983a 	sll	r17,r17,r3
    2ddc:	2448b03a 	or	r4,r4,r17
    2de0:	000d16c0 	call	d16c <__floatunsidf>
    2de4:	017f8434 	movhi	r5,65040
    2de8:	01800044 	movi	r6,1
    2dec:	1009883a 	mov	r4,r2
    2df0:	194b883a 	add	r5,r3,r5
    2df4:	843fffc4 	addi	r16,r16,-1
    2df8:	d9801115 	stw	r6,68(sp)
    2dfc:	000d883a 	mov	r6,zero
    2e00:	01cffe34 	movhi	r7,16376
    2e04:	000c7140 	call	c714 <__subdf3>
    2e08:	0198dbf4 	movhi	r6,25455
    2e0c:	01cff4f4 	movhi	r7,16339
    2e10:	3190d844 	addi	r6,r6,17249
    2e14:	39e1e9c4 	addi	r7,r7,-30809
    2e18:	1009883a 	mov	r4,r2
    2e1c:	180b883a 	mov	r5,r3
    2e20:	000beac0 	call	beac <__muldf3>
    2e24:	01a2d874 	movhi	r6,35681
    2e28:	01cff1f4 	movhi	r7,16327
    2e2c:	31b22cc4 	addi	r6,r6,-14157
    2e30:	39e28a04 	addi	r7,r7,-30168
    2e34:	180b883a 	mov	r5,r3
    2e38:	1009883a 	mov	r4,r2
    2e3c:	000a9d80 	call	a9d8 <__adddf3>
    2e40:	8009883a 	mov	r4,r16
    2e44:	1029883a 	mov	r20,r2
    2e48:	1823883a 	mov	r17,r3
    2e4c:	000d0900 	call	d090 <__floatsidf>
    2e50:	019427f4 	movhi	r6,20639
    2e54:	01cff4f4 	movhi	r7,16339
    2e58:	319e7ec4 	addi	r6,r6,31227
    2e5c:	39d104c4 	addi	r7,r7,17427
    2e60:	1009883a 	mov	r4,r2
    2e64:	180b883a 	mov	r5,r3
    2e68:	000beac0 	call	beac <__muldf3>
    2e6c:	100d883a 	mov	r6,r2
    2e70:	180f883a 	mov	r7,r3
    2e74:	a009883a 	mov	r4,r20
    2e78:	880b883a 	mov	r5,r17
    2e7c:	000a9d80 	call	a9d8 <__adddf3>
    2e80:	1009883a 	mov	r4,r2
    2e84:	180b883a 	mov	r5,r3
    2e88:	1029883a 	mov	r20,r2
    2e8c:	1823883a 	mov	r17,r3
    2e90:	000d0100 	call	d010 <__fixdfsi>
    2e94:	000d883a 	mov	r6,zero
    2e98:	000f883a 	mov	r7,zero
    2e9c:	a009883a 	mov	r4,r20
    2ea0:	880b883a 	mov	r5,r17
    2ea4:	d8800515 	stw	r2,20(sp)
    2ea8:	000bdb80 	call	bdb8 <__ledf2>
    2eac:	10028716 	blt	r2,zero,38cc <_dtoa_r+0xc88>
    2eb0:	d8c00517 	ldw	r3,20(sp)
    2eb4:	00800584 	movi	r2,22
    2eb8:	10c27536 	bltu	r2,r3,3890 <_dtoa_r+0xc4c>
    2ebc:	180490fa 	slli	r2,r3,3
    2ec0:	00c00074 	movhi	r3,1
    2ec4:	18fed804 	addi	r3,r3,-1184
    2ec8:	1885883a 	add	r2,r3,r2
    2ecc:	11000017 	ldw	r4,0(r2)
    2ed0:	11400117 	ldw	r5,4(r2)
    2ed4:	900d883a 	mov	r6,r18
    2ed8:	980f883a 	mov	r7,r19
    2edc:	000bcdc0 	call	bcdc <__gedf2>
    2ee0:	00828d0e 	bge	zero,r2,3918 <_dtoa_r+0xcd4>
    2ee4:	d9000517 	ldw	r4,20(sp)
    2ee8:	d8000e15 	stw	zero,56(sp)
    2eec:	213fffc4 	addi	r4,r4,-1
    2ef0:	d9000515 	stw	r4,20(sp)
    2ef4:	b42dc83a 	sub	r22,r22,r16
    2ef8:	b5bfffc4 	addi	r22,r22,-1
    2efc:	b0026f16 	blt	r22,zero,38bc <_dtoa_r+0xc78>
    2f00:	d8000815 	stw	zero,32(sp)
    2f04:	d9c00517 	ldw	r7,20(sp)
    2f08:	38026416 	blt	r7,zero,389c <_dtoa_r+0xc58>
    2f0c:	b1ed883a 	add	r22,r22,r7
    2f10:	d9c00d15 	stw	r7,52(sp)
    2f14:	d8000a15 	stw	zero,40(sp)
    2f18:	d9800317 	ldw	r6,12(sp)
    2f1c:	00800244 	movi	r2,9
    2f20:	11811436 	bltu	r2,r6,3374 <_dtoa_r+0x730>
    2f24:	00800144 	movi	r2,5
    2f28:	1184e10e 	bge	r2,r6,42b0 <_dtoa_r+0x166c>
    2f2c:	31bfff04 	addi	r6,r6,-4
    2f30:	d9800315 	stw	r6,12(sp)
    2f34:	0023883a 	mov	r17,zero
    2f38:	d9800317 	ldw	r6,12(sp)
    2f3c:	008000c4 	movi	r2,3
    2f40:	30836726 	beq	r6,r2,3ce0 <_dtoa_r+0x109c>
    2f44:	1183410e 	bge	r2,r6,3c4c <_dtoa_r+0x1008>
    2f48:	d9c00317 	ldw	r7,12(sp)
    2f4c:	00800104 	movi	r2,4
    2f50:	38827c26 	beq	r7,r2,3944 <_dtoa_r+0xd00>
    2f54:	00800144 	movi	r2,5
    2f58:	3884c41e 	bne	r7,r2,426c <_dtoa_r+0x1628>
    2f5c:	00800044 	movi	r2,1
    2f60:	d8800b15 	stw	r2,44(sp)
    2f64:	d8c00517 	ldw	r3,20(sp)
    2f68:	d9002217 	ldw	r4,136(sp)
    2f6c:	1907883a 	add	r3,r3,r4
    2f70:	19800044 	addi	r6,r3,1
    2f74:	d8c00c15 	stw	r3,48(sp)
    2f78:	d9800615 	stw	r6,24(sp)
    2f7c:	0183a40e 	bge	zero,r6,3e10 <_dtoa_r+0x11cc>
    2f80:	d9800617 	ldw	r6,24(sp)
    2f84:	3021883a 	mov	r16,r6
    2f88:	e0001115 	stw	zero,68(fp)
    2f8c:	008005c4 	movi	r2,23
    2f90:	1184c92e 	bgeu	r2,r6,42b8 <_dtoa_r+0x1674>
    2f94:	00c00044 	movi	r3,1
    2f98:	00800104 	movi	r2,4
    2f9c:	1085883a 	add	r2,r2,r2
    2fa0:	11000504 	addi	r4,r2,20
    2fa4:	180b883a 	mov	r5,r3
    2fa8:	18c00044 	addi	r3,r3,1
    2fac:	313ffb2e 	bgeu	r6,r4,2f9c <__alt_data_end+0xfffb9bbc>
    2fb0:	e1401115 	stw	r5,68(fp)
    2fb4:	e009883a 	mov	r4,fp
    2fb8:	00062fc0 	call	62fc <_Balloc>
    2fbc:	d8800715 	stw	r2,28(sp)
    2fc0:	e0801015 	stw	r2,64(fp)
    2fc4:	00800384 	movi	r2,14
    2fc8:	1400f736 	bltu	r2,r16,33a8 <_dtoa_r+0x764>
    2fcc:	8800f626 	beq	r17,zero,33a8 <_dtoa_r+0x764>
    2fd0:	d9c00517 	ldw	r7,20(sp)
    2fd4:	01c39a0e 	bge	zero,r7,3e40 <_dtoa_r+0x11fc>
    2fd8:	388003cc 	andi	r2,r7,15
    2fdc:	100490fa 	slli	r2,r2,3
    2fe0:	382bd13a 	srai	r21,r7,4
    2fe4:	00c00074 	movhi	r3,1
    2fe8:	18fed804 	addi	r3,r3,-1184
    2fec:	1885883a 	add	r2,r3,r2
    2ff0:	a8c0040c 	andi	r3,r21,16
    2ff4:	12400017 	ldw	r9,0(r2)
    2ff8:	12000117 	ldw	r8,4(r2)
    2ffc:	18037926 	beq	r3,zero,3de4 <_dtoa_r+0x11a0>
    3000:	00800074 	movhi	r2,1
    3004:	10bece04 	addi	r2,r2,-1224
    3008:	11800817 	ldw	r6,32(r2)
    300c:	11c00917 	ldw	r7,36(r2)
    3010:	9009883a 	mov	r4,r18
    3014:	980b883a 	mov	r5,r19
    3018:	da001715 	stw	r8,92(sp)
    301c:	da401615 	stw	r9,88(sp)
    3020:	000b2840 	call	b284 <__divdf3>
    3024:	da001717 	ldw	r8,92(sp)
    3028:	da401617 	ldw	r9,88(sp)
    302c:	ad4003cc 	andi	r21,r21,15
    3030:	040000c4 	movi	r16,3
    3034:	1023883a 	mov	r17,r2
    3038:	1829883a 	mov	r20,r3
    303c:	a8001126 	beq	r21,zero,3084 <_dtoa_r+0x440>
    3040:	05c00074 	movhi	r23,1
    3044:	bdfece04 	addi	r23,r23,-1224
    3048:	4805883a 	mov	r2,r9
    304c:	4007883a 	mov	r3,r8
    3050:	a980004c 	andi	r6,r21,1
    3054:	1009883a 	mov	r4,r2
    3058:	a82bd07a 	srai	r21,r21,1
    305c:	180b883a 	mov	r5,r3
    3060:	30000426 	beq	r6,zero,3074 <_dtoa_r+0x430>
    3064:	b9800017 	ldw	r6,0(r23)
    3068:	b9c00117 	ldw	r7,4(r23)
    306c:	84000044 	addi	r16,r16,1
    3070:	000beac0 	call	beac <__muldf3>
    3074:	bdc00204 	addi	r23,r23,8
    3078:	a83ff51e 	bne	r21,zero,3050 <__alt_data_end+0xfffb9c70>
    307c:	1013883a 	mov	r9,r2
    3080:	1811883a 	mov	r8,r3
    3084:	480d883a 	mov	r6,r9
    3088:	400f883a 	mov	r7,r8
    308c:	8809883a 	mov	r4,r17
    3090:	a00b883a 	mov	r5,r20
    3094:	000b2840 	call	b284 <__divdf3>
    3098:	d8800f15 	stw	r2,60(sp)
    309c:	d8c01015 	stw	r3,64(sp)
    30a0:	d8c00e17 	ldw	r3,56(sp)
    30a4:	18000626 	beq	r3,zero,30c0 <_dtoa_r+0x47c>
    30a8:	d9000f17 	ldw	r4,60(sp)
    30ac:	d9401017 	ldw	r5,64(sp)
    30b0:	000d883a 	mov	r6,zero
    30b4:	01cffc34 	movhi	r7,16368
    30b8:	000bdb80 	call	bdb8 <__ledf2>
    30bc:	10040b16 	blt	r2,zero,40ec <_dtoa_r+0x14a8>
    30c0:	8009883a 	mov	r4,r16
    30c4:	000d0900 	call	d090 <__floatsidf>
    30c8:	d9800f17 	ldw	r6,60(sp)
    30cc:	d9c01017 	ldw	r7,64(sp)
    30d0:	1009883a 	mov	r4,r2
    30d4:	180b883a 	mov	r5,r3
    30d8:	000beac0 	call	beac <__muldf3>
    30dc:	000d883a 	mov	r6,zero
    30e0:	01d00734 	movhi	r7,16412
    30e4:	1009883a 	mov	r4,r2
    30e8:	180b883a 	mov	r5,r3
    30ec:	000a9d80 	call	a9d8 <__adddf3>
    30f0:	1021883a 	mov	r16,r2
    30f4:	d8800617 	ldw	r2,24(sp)
    30f8:	047f3034 	movhi	r17,64704
    30fc:	1c63883a 	add	r17,r3,r17
    3100:	10031826 	beq	r2,zero,3d64 <_dtoa_r+0x1120>
    3104:	d8c00517 	ldw	r3,20(sp)
    3108:	db000617 	ldw	r12,24(sp)
    310c:	d8c01315 	stw	r3,76(sp)
    3110:	d9000b17 	ldw	r4,44(sp)
    3114:	20038f26 	beq	r4,zero,3f54 <_dtoa_r+0x1310>
    3118:	60bfffc4 	addi	r2,r12,-1
    311c:	100490fa 	slli	r2,r2,3
    3120:	00c00074 	movhi	r3,1
    3124:	18fed804 	addi	r3,r3,-1184
    3128:	1885883a 	add	r2,r3,r2
    312c:	11800017 	ldw	r6,0(r2)
    3130:	11c00117 	ldw	r7,4(r2)
    3134:	d8800717 	ldw	r2,28(sp)
    3138:	0009883a 	mov	r4,zero
    313c:	014ff834 	movhi	r5,16352
    3140:	db001615 	stw	r12,88(sp)
    3144:	15c00044 	addi	r23,r2,1
    3148:	000b2840 	call	b284 <__divdf3>
    314c:	800d883a 	mov	r6,r16
    3150:	880f883a 	mov	r7,r17
    3154:	1009883a 	mov	r4,r2
    3158:	180b883a 	mov	r5,r3
    315c:	000c7140 	call	c714 <__subdf3>
    3160:	d9401017 	ldw	r5,64(sp)
    3164:	d9000f17 	ldw	r4,60(sp)
    3168:	102b883a 	mov	r21,r2
    316c:	d8c01215 	stw	r3,72(sp)
    3170:	000d0100 	call	d010 <__fixdfsi>
    3174:	1009883a 	mov	r4,r2
    3178:	1029883a 	mov	r20,r2
    317c:	000d0900 	call	d090 <__floatsidf>
    3180:	d9000f17 	ldw	r4,60(sp)
    3184:	d9401017 	ldw	r5,64(sp)
    3188:	100d883a 	mov	r6,r2
    318c:	180f883a 	mov	r7,r3
    3190:	000c7140 	call	c714 <__subdf3>
    3194:	1823883a 	mov	r17,r3
    3198:	d8c00717 	ldw	r3,28(sp)
    319c:	d9401217 	ldw	r5,72(sp)
    31a0:	a2000c04 	addi	r8,r20,48
    31a4:	1021883a 	mov	r16,r2
    31a8:	1a000005 	stb	r8,0(r3)
    31ac:	800d883a 	mov	r6,r16
    31b0:	880f883a 	mov	r7,r17
    31b4:	a809883a 	mov	r4,r21
    31b8:	4029883a 	mov	r20,r8
    31bc:	000bcdc0 	call	bcdc <__gedf2>
    31c0:	00841d16 	blt	zero,r2,4238 <_dtoa_r+0x15f4>
    31c4:	800d883a 	mov	r6,r16
    31c8:	880f883a 	mov	r7,r17
    31cc:	0009883a 	mov	r4,zero
    31d0:	014ffc34 	movhi	r5,16368
    31d4:	000c7140 	call	c714 <__subdf3>
    31d8:	d9401217 	ldw	r5,72(sp)
    31dc:	100d883a 	mov	r6,r2
    31e0:	180f883a 	mov	r7,r3
    31e4:	a809883a 	mov	r4,r21
    31e8:	000bcdc0 	call	bcdc <__gedf2>
    31ec:	db001617 	ldw	r12,88(sp)
    31f0:	00840e16 	blt	zero,r2,422c <_dtoa_r+0x15e8>
    31f4:	00800044 	movi	r2,1
    31f8:	13006b0e 	bge	r2,r12,33a8 <_dtoa_r+0x764>
    31fc:	d9000717 	ldw	r4,28(sp)
    3200:	dd800f15 	stw	r22,60(sp)
    3204:	dcc01015 	stw	r19,64(sp)
    3208:	2319883a 	add	r12,r4,r12
    320c:	dcc01217 	ldw	r19,72(sp)
    3210:	602d883a 	mov	r22,r12
    3214:	dc801215 	stw	r18,72(sp)
    3218:	b825883a 	mov	r18,r23
    321c:	00000906 	br	3244 <_dtoa_r+0x600>
    3220:	000c7140 	call	c714 <__subdf3>
    3224:	a80d883a 	mov	r6,r21
    3228:	980f883a 	mov	r7,r19
    322c:	1009883a 	mov	r4,r2
    3230:	180b883a 	mov	r5,r3
    3234:	000bdb80 	call	bdb8 <__ledf2>
    3238:	1003e816 	blt	r2,zero,41dc <_dtoa_r+0x1598>
    323c:	b825883a 	mov	r18,r23
    3240:	bd83e926 	beq	r23,r22,41e8 <_dtoa_r+0x15a4>
    3244:	a809883a 	mov	r4,r21
    3248:	980b883a 	mov	r5,r19
    324c:	000d883a 	mov	r6,zero
    3250:	01d00934 	movhi	r7,16420
    3254:	000beac0 	call	beac <__muldf3>
    3258:	000d883a 	mov	r6,zero
    325c:	01d00934 	movhi	r7,16420
    3260:	8009883a 	mov	r4,r16
    3264:	880b883a 	mov	r5,r17
    3268:	102b883a 	mov	r21,r2
    326c:	1827883a 	mov	r19,r3
    3270:	000beac0 	call	beac <__muldf3>
    3274:	180b883a 	mov	r5,r3
    3278:	1009883a 	mov	r4,r2
    327c:	1821883a 	mov	r16,r3
    3280:	1023883a 	mov	r17,r2
    3284:	000d0100 	call	d010 <__fixdfsi>
    3288:	1009883a 	mov	r4,r2
    328c:	1029883a 	mov	r20,r2
    3290:	000d0900 	call	d090 <__floatsidf>
    3294:	8809883a 	mov	r4,r17
    3298:	800b883a 	mov	r5,r16
    329c:	100d883a 	mov	r6,r2
    32a0:	180f883a 	mov	r7,r3
    32a4:	000c7140 	call	c714 <__subdf3>
    32a8:	a5000c04 	addi	r20,r20,48
    32ac:	a80d883a 	mov	r6,r21
    32b0:	980f883a 	mov	r7,r19
    32b4:	1009883a 	mov	r4,r2
    32b8:	180b883a 	mov	r5,r3
    32bc:	95000005 	stb	r20,0(r18)
    32c0:	1021883a 	mov	r16,r2
    32c4:	1823883a 	mov	r17,r3
    32c8:	000bdb80 	call	bdb8 <__ledf2>
    32cc:	bdc00044 	addi	r23,r23,1
    32d0:	800d883a 	mov	r6,r16
    32d4:	880f883a 	mov	r7,r17
    32d8:	0009883a 	mov	r4,zero
    32dc:	014ffc34 	movhi	r5,16368
    32e0:	103fcf0e 	bge	r2,zero,3220 <__alt_data_end+0xfffb9e40>
    32e4:	d8c01317 	ldw	r3,76(sp)
    32e8:	d8c00515 	stw	r3,20(sp)
    32ec:	d9400917 	ldw	r5,36(sp)
    32f0:	e009883a 	mov	r4,fp
    32f4:	00063a40 	call	63a4 <_Bfree>
    32f8:	d9000517 	ldw	r4,20(sp)
    32fc:	d9802317 	ldw	r6,140(sp)
    3300:	d9c02517 	ldw	r7,148(sp)
    3304:	b8000005 	stb	zero,0(r23)
    3308:	20800044 	addi	r2,r4,1
    330c:	30800015 	stw	r2,0(r6)
    3310:	3802aa26 	beq	r7,zero,3dbc <_dtoa_r+0x1178>
    3314:	3dc00015 	stw	r23,0(r7)
    3318:	d8800717 	ldw	r2,28(sp)
    331c:	003e7906 	br	2d04 <__alt_data_end+0xfffb9924>
    3320:	00800434 	movhi	r2,16
    3324:	10bfffc4 	addi	r2,r2,-1
    3328:	88a2703a 	and	r17,r17,r2
    332c:	883e851e 	bne	r17,zero,2d44 <__alt_data_end+0xfffb9964>
    3330:	00800074 	movhi	r2,1
    3334:	10beb904 	addi	r2,r2,-1308
    3338:	003e8406 	br	2d4c <__alt_data_end+0xfffb996c>
    333c:	10c00204 	addi	r3,r2,8
    3340:	003e8706 	br	2d60 <__alt_data_end+0xfffb9980>
    3344:	01400434 	movhi	r5,16
    3348:	297fffc4 	addi	r5,r5,-1
    334c:	994a703a 	and	r5,r19,r5
    3350:	9009883a 	mov	r4,r18
    3354:	843f0044 	addi	r16,r16,-1023
    3358:	294ffc34 	orhi	r5,r5,16368
    335c:	dd800217 	ldw	r22,8(sp)
    3360:	d8001115 	stw	zero,68(sp)
    3364:	003ea506 	br	2dfc <__alt_data_end+0xfffb9a1c>
    3368:	00800074 	movhi	r2,1
    336c:	10beb004 	addi	r2,r2,-1344
    3370:	003e6406 	br	2d04 <__alt_data_end+0xfffb9924>
    3374:	e0001115 	stw	zero,68(fp)
    3378:	000b883a 	mov	r5,zero
    337c:	e009883a 	mov	r4,fp
    3380:	00062fc0 	call	62fc <_Balloc>
    3384:	01bfffc4 	movi	r6,-1
    3388:	01c00044 	movi	r7,1
    338c:	d8800715 	stw	r2,28(sp)
    3390:	d9800c15 	stw	r6,48(sp)
    3394:	e0801015 	stw	r2,64(fp)
    3398:	d8000315 	stw	zero,12(sp)
    339c:	d9c00b15 	stw	r7,44(sp)
    33a0:	d9800615 	stw	r6,24(sp)
    33a4:	d8002215 	stw	zero,136(sp)
    33a8:	d8800117 	ldw	r2,4(sp)
    33ac:	10008916 	blt	r2,zero,35d4 <_dtoa_r+0x990>
    33b0:	d9000517 	ldw	r4,20(sp)
    33b4:	00c00384 	movi	r3,14
    33b8:	19008616 	blt	r3,r4,35d4 <_dtoa_r+0x990>
    33bc:	200490fa 	slli	r2,r4,3
    33c0:	00c00074 	movhi	r3,1
    33c4:	d9802217 	ldw	r6,136(sp)
    33c8:	18fed804 	addi	r3,r3,-1184
    33cc:	1885883a 	add	r2,r3,r2
    33d0:	14000017 	ldw	r16,0(r2)
    33d4:	14400117 	ldw	r17,4(r2)
    33d8:	30016316 	blt	r6,zero,3968 <_dtoa_r+0xd24>
    33dc:	800d883a 	mov	r6,r16
    33e0:	880f883a 	mov	r7,r17
    33e4:	9009883a 	mov	r4,r18
    33e8:	980b883a 	mov	r5,r19
    33ec:	000b2840 	call	b284 <__divdf3>
    33f0:	180b883a 	mov	r5,r3
    33f4:	1009883a 	mov	r4,r2
    33f8:	000d0100 	call	d010 <__fixdfsi>
    33fc:	1009883a 	mov	r4,r2
    3400:	102b883a 	mov	r21,r2
    3404:	000d0900 	call	d090 <__floatsidf>
    3408:	800d883a 	mov	r6,r16
    340c:	880f883a 	mov	r7,r17
    3410:	1009883a 	mov	r4,r2
    3414:	180b883a 	mov	r5,r3
    3418:	000beac0 	call	beac <__muldf3>
    341c:	100d883a 	mov	r6,r2
    3420:	180f883a 	mov	r7,r3
    3424:	9009883a 	mov	r4,r18
    3428:	980b883a 	mov	r5,r19
    342c:	000c7140 	call	c714 <__subdf3>
    3430:	d9c00717 	ldw	r7,28(sp)
    3434:	1009883a 	mov	r4,r2
    3438:	a8800c04 	addi	r2,r21,48
    343c:	38800005 	stb	r2,0(r7)
    3440:	3dc00044 	addi	r23,r7,1
    3444:	d9c00617 	ldw	r7,24(sp)
    3448:	01800044 	movi	r6,1
    344c:	180b883a 	mov	r5,r3
    3450:	2005883a 	mov	r2,r4
    3454:	39803826 	beq	r7,r6,3538 <_dtoa_r+0x8f4>
    3458:	000d883a 	mov	r6,zero
    345c:	01d00934 	movhi	r7,16420
    3460:	000beac0 	call	beac <__muldf3>
    3464:	000d883a 	mov	r6,zero
    3468:	000f883a 	mov	r7,zero
    346c:	1009883a 	mov	r4,r2
    3470:	180b883a 	mov	r5,r3
    3474:	1025883a 	mov	r18,r2
    3478:	1827883a 	mov	r19,r3
    347c:	000bc540 	call	bc54 <__eqdf2>
    3480:	103f9a26 	beq	r2,zero,32ec <__alt_data_end+0xfffb9f0c>
    3484:	d9c00617 	ldw	r7,24(sp)
    3488:	d8c00717 	ldw	r3,28(sp)
    348c:	b829883a 	mov	r20,r23
    3490:	38bfffc4 	addi	r2,r7,-1
    3494:	18ad883a 	add	r22,r3,r2
    3498:	00000a06 	br	34c4 <_dtoa_r+0x880>
    349c:	000beac0 	call	beac <__muldf3>
    34a0:	000d883a 	mov	r6,zero
    34a4:	000f883a 	mov	r7,zero
    34a8:	1009883a 	mov	r4,r2
    34ac:	180b883a 	mov	r5,r3
    34b0:	1025883a 	mov	r18,r2
    34b4:	1827883a 	mov	r19,r3
    34b8:	b829883a 	mov	r20,r23
    34bc:	000bc540 	call	bc54 <__eqdf2>
    34c0:	103f8a26 	beq	r2,zero,32ec <__alt_data_end+0xfffb9f0c>
    34c4:	800d883a 	mov	r6,r16
    34c8:	880f883a 	mov	r7,r17
    34cc:	9009883a 	mov	r4,r18
    34d0:	980b883a 	mov	r5,r19
    34d4:	000b2840 	call	b284 <__divdf3>
    34d8:	180b883a 	mov	r5,r3
    34dc:	1009883a 	mov	r4,r2
    34e0:	000d0100 	call	d010 <__fixdfsi>
    34e4:	1009883a 	mov	r4,r2
    34e8:	102b883a 	mov	r21,r2
    34ec:	000d0900 	call	d090 <__floatsidf>
    34f0:	800d883a 	mov	r6,r16
    34f4:	880f883a 	mov	r7,r17
    34f8:	1009883a 	mov	r4,r2
    34fc:	180b883a 	mov	r5,r3
    3500:	000beac0 	call	beac <__muldf3>
    3504:	100d883a 	mov	r6,r2
    3508:	180f883a 	mov	r7,r3
    350c:	9009883a 	mov	r4,r18
    3510:	980b883a 	mov	r5,r19
    3514:	000c7140 	call	c714 <__subdf3>
    3518:	aa000c04 	addi	r8,r21,48
    351c:	a2000005 	stb	r8,0(r20)
    3520:	000d883a 	mov	r6,zero
    3524:	01d00934 	movhi	r7,16420
    3528:	1009883a 	mov	r4,r2
    352c:	180b883a 	mov	r5,r3
    3530:	a5c00044 	addi	r23,r20,1
    3534:	b53fd91e 	bne	r22,r20,349c <__alt_data_end+0xfffba0bc>
    3538:	100d883a 	mov	r6,r2
    353c:	180f883a 	mov	r7,r3
    3540:	1009883a 	mov	r4,r2
    3544:	180b883a 	mov	r5,r3
    3548:	000a9d80 	call	a9d8 <__adddf3>
    354c:	100d883a 	mov	r6,r2
    3550:	180f883a 	mov	r7,r3
    3554:	8009883a 	mov	r4,r16
    3558:	880b883a 	mov	r5,r17
    355c:	1027883a 	mov	r19,r2
    3560:	1825883a 	mov	r18,r3
    3564:	000bdb80 	call	bdb8 <__ledf2>
    3568:	10000816 	blt	r2,zero,358c <_dtoa_r+0x948>
    356c:	980d883a 	mov	r6,r19
    3570:	900f883a 	mov	r7,r18
    3574:	8009883a 	mov	r4,r16
    3578:	880b883a 	mov	r5,r17
    357c:	000bc540 	call	bc54 <__eqdf2>
    3580:	103f5a1e 	bne	r2,zero,32ec <__alt_data_end+0xfffb9f0c>
    3584:	ad40004c 	andi	r21,r21,1
    3588:	a83f5826 	beq	r21,zero,32ec <__alt_data_end+0xfffb9f0c>
    358c:	bd3fffc3 	ldbu	r20,-1(r23)
    3590:	b8bfffc4 	addi	r2,r23,-1
    3594:	1007883a 	mov	r3,r2
    3598:	01400e44 	movi	r5,57
    359c:	d9800717 	ldw	r6,28(sp)
    35a0:	00000506 	br	35b8 <_dtoa_r+0x974>
    35a4:	18ffffc4 	addi	r3,r3,-1
    35a8:	11824726 	beq	r2,r6,3ec8 <_dtoa_r+0x1284>
    35ac:	1d000003 	ldbu	r20,0(r3)
    35b0:	102f883a 	mov	r23,r2
    35b4:	10bfffc4 	addi	r2,r2,-1
    35b8:	a1003fcc 	andi	r4,r20,255
    35bc:	2100201c 	xori	r4,r4,128
    35c0:	213fe004 	addi	r4,r4,-128
    35c4:	217ff726 	beq	r4,r5,35a4 <__alt_data_end+0xfffba1c4>
    35c8:	a2000044 	addi	r8,r20,1
    35cc:	12000005 	stb	r8,0(r2)
    35d0:	003f4606 	br	32ec <__alt_data_end+0xfffb9f0c>
    35d4:	d9000b17 	ldw	r4,44(sp)
    35d8:	2000c826 	beq	r4,zero,38fc <_dtoa_r+0xcb8>
    35dc:	d9800317 	ldw	r6,12(sp)
    35e0:	00c00044 	movi	r3,1
    35e4:	1980f90e 	bge	r3,r6,39cc <_dtoa_r+0xd88>
    35e8:	d8800617 	ldw	r2,24(sp)
    35ec:	d8c00a17 	ldw	r3,40(sp)
    35f0:	157fffc4 	addi	r21,r2,-1
    35f4:	1d41f316 	blt	r3,r21,3dc4 <_dtoa_r+0x1180>
    35f8:	1d6bc83a 	sub	r21,r3,r21
    35fc:	d9c00617 	ldw	r7,24(sp)
    3600:	3802aa16 	blt	r7,zero,40ac <_dtoa_r+0x1468>
    3604:	dd000817 	ldw	r20,32(sp)
    3608:	d8800617 	ldw	r2,24(sp)
    360c:	d8c00817 	ldw	r3,32(sp)
    3610:	01400044 	movi	r5,1
    3614:	e009883a 	mov	r4,fp
    3618:	1887883a 	add	r3,r3,r2
    361c:	d8c00815 	stw	r3,32(sp)
    3620:	b0ad883a 	add	r22,r22,r2
    3624:	00067300 	call	6730 <__i2b>
    3628:	1023883a 	mov	r17,r2
    362c:	a0000826 	beq	r20,zero,3650 <_dtoa_r+0xa0c>
    3630:	0580070e 	bge	zero,r22,3650 <_dtoa_r+0xa0c>
    3634:	a005883a 	mov	r2,r20
    3638:	b500b916 	blt	r22,r20,3920 <_dtoa_r+0xcdc>
    363c:	d9000817 	ldw	r4,32(sp)
    3640:	a0a9c83a 	sub	r20,r20,r2
    3644:	b0adc83a 	sub	r22,r22,r2
    3648:	2089c83a 	sub	r4,r4,r2
    364c:	d9000815 	stw	r4,32(sp)
    3650:	d9800a17 	ldw	r6,40(sp)
    3654:	0181810e 	bge	zero,r6,3c5c <_dtoa_r+0x1018>
    3658:	d9c00b17 	ldw	r7,44(sp)
    365c:	3800b326 	beq	r7,zero,392c <_dtoa_r+0xce8>
    3660:	a800b226 	beq	r21,zero,392c <_dtoa_r+0xce8>
    3664:	880b883a 	mov	r5,r17
    3668:	a80d883a 	mov	r6,r21
    366c:	e009883a 	mov	r4,fp
    3670:	00069f80 	call	69f8 <__pow5mult>
    3674:	d9800917 	ldw	r6,36(sp)
    3678:	100b883a 	mov	r5,r2
    367c:	e009883a 	mov	r4,fp
    3680:	1023883a 	mov	r17,r2
    3684:	000676c0 	call	676c <__multiply>
    3688:	1021883a 	mov	r16,r2
    368c:	d8800a17 	ldw	r2,40(sp)
    3690:	d9400917 	ldw	r5,36(sp)
    3694:	e009883a 	mov	r4,fp
    3698:	1545c83a 	sub	r2,r2,r21
    369c:	d8800a15 	stw	r2,40(sp)
    36a0:	00063a40 	call	63a4 <_Bfree>
    36a4:	d8c00a17 	ldw	r3,40(sp)
    36a8:	18009f1e 	bne	r3,zero,3928 <_dtoa_r+0xce4>
    36ac:	05c00044 	movi	r23,1
    36b0:	e009883a 	mov	r4,fp
    36b4:	b80b883a 	mov	r5,r23
    36b8:	00067300 	call	6730 <__i2b>
    36bc:	d9000d17 	ldw	r4,52(sp)
    36c0:	102b883a 	mov	r21,r2
    36c4:	2000ce26 	beq	r4,zero,3a00 <_dtoa_r+0xdbc>
    36c8:	200d883a 	mov	r6,r4
    36cc:	100b883a 	mov	r5,r2
    36d0:	e009883a 	mov	r4,fp
    36d4:	00069f80 	call	69f8 <__pow5mult>
    36d8:	d9800317 	ldw	r6,12(sp)
    36dc:	102b883a 	mov	r21,r2
    36e0:	b981810e 	bge	r23,r6,3ce8 <_dtoa_r+0x10a4>
    36e4:	0027883a 	mov	r19,zero
    36e8:	a8800417 	ldw	r2,16(r21)
    36ec:	05c00804 	movi	r23,32
    36f0:	10800104 	addi	r2,r2,4
    36f4:	1085883a 	add	r2,r2,r2
    36f8:	1085883a 	add	r2,r2,r2
    36fc:	a885883a 	add	r2,r21,r2
    3700:	11000017 	ldw	r4,0(r2)
    3704:	00066180 	call	6618 <__hi0bits>
    3708:	b885c83a 	sub	r2,r23,r2
    370c:	1585883a 	add	r2,r2,r22
    3710:	108007cc 	andi	r2,r2,31
    3714:	1000b326 	beq	r2,zero,39e4 <_dtoa_r+0xda0>
    3718:	00c00804 	movi	r3,32
    371c:	1887c83a 	sub	r3,r3,r2
    3720:	01000104 	movi	r4,4
    3724:	20c2cd0e 	bge	r4,r3,425c <_dtoa_r+0x1618>
    3728:	00c00704 	movi	r3,28
    372c:	1885c83a 	sub	r2,r3,r2
    3730:	d8c00817 	ldw	r3,32(sp)
    3734:	a0a9883a 	add	r20,r20,r2
    3738:	b0ad883a 	add	r22,r22,r2
    373c:	1887883a 	add	r3,r3,r2
    3740:	d8c00815 	stw	r3,32(sp)
    3744:	d9800817 	ldw	r6,32(sp)
    3748:	0180040e 	bge	zero,r6,375c <_dtoa_r+0xb18>
    374c:	800b883a 	mov	r5,r16
    3750:	e009883a 	mov	r4,fp
    3754:	0006b380 	call	6b38 <__lshift>
    3758:	1021883a 	mov	r16,r2
    375c:	0580050e 	bge	zero,r22,3774 <_dtoa_r+0xb30>
    3760:	a80b883a 	mov	r5,r21
    3764:	b00d883a 	mov	r6,r22
    3768:	e009883a 	mov	r4,fp
    376c:	0006b380 	call	6b38 <__lshift>
    3770:	102b883a 	mov	r21,r2
    3774:	d9c00e17 	ldw	r7,56(sp)
    3778:	3801211e 	bne	r7,zero,3c00 <_dtoa_r+0xfbc>
    377c:	d9800617 	ldw	r6,24(sp)
    3780:	0181380e 	bge	zero,r6,3c64 <_dtoa_r+0x1020>
    3784:	d8c00b17 	ldw	r3,44(sp)
    3788:	1800ab1e 	bne	r3,zero,3a38 <_dtoa_r+0xdf4>
    378c:	dc800717 	ldw	r18,28(sp)
    3790:	dcc00617 	ldw	r19,24(sp)
    3794:	9029883a 	mov	r20,r18
    3798:	00000206 	br	37a4 <_dtoa_r+0xb60>
    379c:	00063cc0 	call	63cc <__multadd>
    37a0:	1021883a 	mov	r16,r2
    37a4:	a80b883a 	mov	r5,r21
    37a8:	8009883a 	mov	r4,r16
    37ac:	0002a1c0 	call	2a1c <quorem>
    37b0:	10800c04 	addi	r2,r2,48
    37b4:	90800005 	stb	r2,0(r18)
    37b8:	94800044 	addi	r18,r18,1
    37bc:	9507c83a 	sub	r3,r18,r20
    37c0:	000f883a 	mov	r7,zero
    37c4:	01800284 	movi	r6,10
    37c8:	800b883a 	mov	r5,r16
    37cc:	e009883a 	mov	r4,fp
    37d0:	1cfff216 	blt	r3,r19,379c <__alt_data_end+0xfffba3bc>
    37d4:	1011883a 	mov	r8,r2
    37d8:	d8800617 	ldw	r2,24(sp)
    37dc:	0082370e 	bge	zero,r2,40bc <_dtoa_r+0x1478>
    37e0:	d9000717 	ldw	r4,28(sp)
    37e4:	0025883a 	mov	r18,zero
    37e8:	20af883a 	add	r23,r4,r2
    37ec:	01800044 	movi	r6,1
    37f0:	800b883a 	mov	r5,r16
    37f4:	e009883a 	mov	r4,fp
    37f8:	da001715 	stw	r8,92(sp)
    37fc:	0006b380 	call	6b38 <__lshift>
    3800:	a80b883a 	mov	r5,r21
    3804:	1009883a 	mov	r4,r2
    3808:	d8800915 	stw	r2,36(sp)
    380c:	0006c800 	call	6c80 <__mcmp>
    3810:	da001717 	ldw	r8,92(sp)
    3814:	0081800e 	bge	zero,r2,3e18 <_dtoa_r+0x11d4>
    3818:	b93fffc3 	ldbu	r4,-1(r23)
    381c:	b8bfffc4 	addi	r2,r23,-1
    3820:	1007883a 	mov	r3,r2
    3824:	01800e44 	movi	r6,57
    3828:	d9c00717 	ldw	r7,28(sp)
    382c:	00000506 	br	3844 <_dtoa_r+0xc00>
    3830:	18ffffc4 	addi	r3,r3,-1
    3834:	11c12326 	beq	r2,r7,3cc4 <_dtoa_r+0x1080>
    3838:	19000003 	ldbu	r4,0(r3)
    383c:	102f883a 	mov	r23,r2
    3840:	10bfffc4 	addi	r2,r2,-1
    3844:	21403fcc 	andi	r5,r4,255
    3848:	2940201c 	xori	r5,r5,128
    384c:	297fe004 	addi	r5,r5,-128
    3850:	29bff726 	beq	r5,r6,3830 <__alt_data_end+0xfffba450>
    3854:	21000044 	addi	r4,r4,1
    3858:	11000005 	stb	r4,0(r2)
    385c:	a80b883a 	mov	r5,r21
    3860:	e009883a 	mov	r4,fp
    3864:	00063a40 	call	63a4 <_Bfree>
    3868:	883ea026 	beq	r17,zero,32ec <__alt_data_end+0xfffb9f0c>
    386c:	90000426 	beq	r18,zero,3880 <_dtoa_r+0xc3c>
    3870:	94400326 	beq	r18,r17,3880 <_dtoa_r+0xc3c>
    3874:	900b883a 	mov	r5,r18
    3878:	e009883a 	mov	r4,fp
    387c:	00063a40 	call	63a4 <_Bfree>
    3880:	880b883a 	mov	r5,r17
    3884:	e009883a 	mov	r4,fp
    3888:	00063a40 	call	63a4 <_Bfree>
    388c:	003e9706 	br	32ec <__alt_data_end+0xfffb9f0c>
    3890:	01800044 	movi	r6,1
    3894:	d9800e15 	stw	r6,56(sp)
    3898:	003d9606 	br	2ef4 <__alt_data_end+0xfffb9b14>
    389c:	d8800817 	ldw	r2,32(sp)
    38a0:	d8c00517 	ldw	r3,20(sp)
    38a4:	d8000d15 	stw	zero,52(sp)
    38a8:	10c5c83a 	sub	r2,r2,r3
    38ac:	00c9c83a 	sub	r4,zero,r3
    38b0:	d8800815 	stw	r2,32(sp)
    38b4:	d9000a15 	stw	r4,40(sp)
    38b8:	003d9706 	br	2f18 <__alt_data_end+0xfffb9b38>
    38bc:	05adc83a 	sub	r22,zero,r22
    38c0:	dd800815 	stw	r22,32(sp)
    38c4:	002d883a 	mov	r22,zero
    38c8:	003d8e06 	br	2f04 <__alt_data_end+0xfffb9b24>
    38cc:	d9000517 	ldw	r4,20(sp)
    38d0:	000d0900 	call	d090 <__floatsidf>
    38d4:	100d883a 	mov	r6,r2
    38d8:	180f883a 	mov	r7,r3
    38dc:	a009883a 	mov	r4,r20
    38e0:	880b883a 	mov	r5,r17
    38e4:	000bc540 	call	bc54 <__eqdf2>
    38e8:	103d7126 	beq	r2,zero,2eb0 <__alt_data_end+0xfffb9ad0>
    38ec:	d9c00517 	ldw	r7,20(sp)
    38f0:	39ffffc4 	addi	r7,r7,-1
    38f4:	d9c00515 	stw	r7,20(sp)
    38f8:	003d6d06 	br	2eb0 <__alt_data_end+0xfffb9ad0>
    38fc:	dd400a17 	ldw	r21,40(sp)
    3900:	dd000817 	ldw	r20,32(sp)
    3904:	0023883a 	mov	r17,zero
    3908:	003f4806 	br	362c <__alt_data_end+0xfffba24c>
    390c:	10e3c83a 	sub	r17,r2,r3
    3910:	9448983a 	sll	r4,r18,r17
    3914:	003d3206 	br	2de0 <__alt_data_end+0xfffb9a00>
    3918:	d8000e15 	stw	zero,56(sp)
    391c:	003d7506 	br	2ef4 <__alt_data_end+0xfffb9b14>
    3920:	b005883a 	mov	r2,r22
    3924:	003f4506 	br	363c <__alt_data_end+0xfffba25c>
    3928:	dc000915 	stw	r16,36(sp)
    392c:	d9800a17 	ldw	r6,40(sp)
    3930:	d9400917 	ldw	r5,36(sp)
    3934:	e009883a 	mov	r4,fp
    3938:	00069f80 	call	69f8 <__pow5mult>
    393c:	1021883a 	mov	r16,r2
    3940:	003f5a06 	br	36ac <__alt_data_end+0xfffba2cc>
    3944:	01c00044 	movi	r7,1
    3948:	d9c00b15 	stw	r7,44(sp)
    394c:	d8802217 	ldw	r2,136(sp)
    3950:	0081280e 	bge	zero,r2,3df4 <_dtoa_r+0x11b0>
    3954:	100d883a 	mov	r6,r2
    3958:	1021883a 	mov	r16,r2
    395c:	d8800c15 	stw	r2,48(sp)
    3960:	d8800615 	stw	r2,24(sp)
    3964:	003d8806 	br	2f88 <__alt_data_end+0xfffb9ba8>
    3968:	d8800617 	ldw	r2,24(sp)
    396c:	00be9b16 	blt	zero,r2,33dc <__alt_data_end+0xfffb9ffc>
    3970:	10010f1e 	bne	r2,zero,3db0 <_dtoa_r+0x116c>
    3974:	880b883a 	mov	r5,r17
    3978:	000d883a 	mov	r6,zero
    397c:	01d00534 	movhi	r7,16404
    3980:	8009883a 	mov	r4,r16
    3984:	000beac0 	call	beac <__muldf3>
    3988:	900d883a 	mov	r6,r18
    398c:	980f883a 	mov	r7,r19
    3990:	1009883a 	mov	r4,r2
    3994:	180b883a 	mov	r5,r3
    3998:	000bcdc0 	call	bcdc <__gedf2>
    399c:	002b883a 	mov	r21,zero
    39a0:	0023883a 	mov	r17,zero
    39a4:	1000bf16 	blt	r2,zero,3ca4 <_dtoa_r+0x1060>
    39a8:	d9802217 	ldw	r6,136(sp)
    39ac:	ddc00717 	ldw	r23,28(sp)
    39b0:	018c303a 	nor	r6,zero,r6
    39b4:	d9800515 	stw	r6,20(sp)
    39b8:	a80b883a 	mov	r5,r21
    39bc:	e009883a 	mov	r4,fp
    39c0:	00063a40 	call	63a4 <_Bfree>
    39c4:	883e4926 	beq	r17,zero,32ec <__alt_data_end+0xfffb9f0c>
    39c8:	003fad06 	br	3880 <__alt_data_end+0xfffba4a0>
    39cc:	d9c01117 	ldw	r7,68(sp)
    39d0:	3801bc26 	beq	r7,zero,40c4 <_dtoa_r+0x1480>
    39d4:	10810cc4 	addi	r2,r2,1075
    39d8:	dd400a17 	ldw	r21,40(sp)
    39dc:	dd000817 	ldw	r20,32(sp)
    39e0:	003f0a06 	br	360c <__alt_data_end+0xfffba22c>
    39e4:	00800704 	movi	r2,28
    39e8:	d9000817 	ldw	r4,32(sp)
    39ec:	a0a9883a 	add	r20,r20,r2
    39f0:	b0ad883a 	add	r22,r22,r2
    39f4:	2089883a 	add	r4,r4,r2
    39f8:	d9000815 	stw	r4,32(sp)
    39fc:	003f5106 	br	3744 <__alt_data_end+0xfffba364>
    3a00:	d8c00317 	ldw	r3,12(sp)
    3a04:	b8c1fc0e 	bge	r23,r3,41f8 <_dtoa_r+0x15b4>
    3a08:	0027883a 	mov	r19,zero
    3a0c:	b805883a 	mov	r2,r23
    3a10:	003f3e06 	br	370c <__alt_data_end+0xfffba32c>
    3a14:	880b883a 	mov	r5,r17
    3a18:	e009883a 	mov	r4,fp
    3a1c:	000f883a 	mov	r7,zero
    3a20:	01800284 	movi	r6,10
    3a24:	00063cc0 	call	63cc <__multadd>
    3a28:	d9000c17 	ldw	r4,48(sp)
    3a2c:	1023883a 	mov	r17,r2
    3a30:	0102040e 	bge	zero,r4,4244 <_dtoa_r+0x1600>
    3a34:	d9000615 	stw	r4,24(sp)
    3a38:	0500050e 	bge	zero,r20,3a50 <_dtoa_r+0xe0c>
    3a3c:	880b883a 	mov	r5,r17
    3a40:	a00d883a 	mov	r6,r20
    3a44:	e009883a 	mov	r4,fp
    3a48:	0006b380 	call	6b38 <__lshift>
    3a4c:	1023883a 	mov	r17,r2
    3a50:	9801241e 	bne	r19,zero,3ee4 <_dtoa_r+0x12a0>
    3a54:	8829883a 	mov	r20,r17
    3a58:	d9000617 	ldw	r4,24(sp)
    3a5c:	dcc00717 	ldw	r19,28(sp)
    3a60:	9480004c 	andi	r18,r18,1
    3a64:	20bfffc4 	addi	r2,r4,-1
    3a68:	9885883a 	add	r2,r19,r2
    3a6c:	d8800415 	stw	r2,16(sp)
    3a70:	dc800615 	stw	r18,24(sp)
    3a74:	a80b883a 	mov	r5,r21
    3a78:	8009883a 	mov	r4,r16
    3a7c:	0002a1c0 	call	2a1c <quorem>
    3a80:	880b883a 	mov	r5,r17
    3a84:	8009883a 	mov	r4,r16
    3a88:	102f883a 	mov	r23,r2
    3a8c:	0006c800 	call	6c80 <__mcmp>
    3a90:	a80b883a 	mov	r5,r21
    3a94:	a00d883a 	mov	r6,r20
    3a98:	e009883a 	mov	r4,fp
    3a9c:	102d883a 	mov	r22,r2
    3aa0:	0006ce00 	call	6ce0 <__mdiff>
    3aa4:	1007883a 	mov	r3,r2
    3aa8:	10800317 	ldw	r2,12(r2)
    3aac:	bc800c04 	addi	r18,r23,48
    3ab0:	180b883a 	mov	r5,r3
    3ab4:	10004e1e 	bne	r2,zero,3bf0 <_dtoa_r+0xfac>
    3ab8:	8009883a 	mov	r4,r16
    3abc:	d8c01615 	stw	r3,88(sp)
    3ac0:	0006c800 	call	6c80 <__mcmp>
    3ac4:	d8c01617 	ldw	r3,88(sp)
    3ac8:	e009883a 	mov	r4,fp
    3acc:	d8801615 	stw	r2,88(sp)
    3ad0:	180b883a 	mov	r5,r3
    3ad4:	00063a40 	call	63a4 <_Bfree>
    3ad8:	d8801617 	ldw	r2,88(sp)
    3adc:	1000041e 	bne	r2,zero,3af0 <_dtoa_r+0xeac>
    3ae0:	d9800317 	ldw	r6,12(sp)
    3ae4:	3000021e 	bne	r6,zero,3af0 <_dtoa_r+0xeac>
    3ae8:	d8c00617 	ldw	r3,24(sp)
    3aec:	18003726 	beq	r3,zero,3bcc <_dtoa_r+0xf88>
    3af0:	b0002016 	blt	r22,zero,3b74 <_dtoa_r+0xf30>
    3af4:	b000041e 	bne	r22,zero,3b08 <_dtoa_r+0xec4>
    3af8:	d9000317 	ldw	r4,12(sp)
    3afc:	2000021e 	bne	r4,zero,3b08 <_dtoa_r+0xec4>
    3b00:	d8c00617 	ldw	r3,24(sp)
    3b04:	18001b26 	beq	r3,zero,3b74 <_dtoa_r+0xf30>
    3b08:	00810716 	blt	zero,r2,3f28 <_dtoa_r+0x12e4>
    3b0c:	d8c00417 	ldw	r3,16(sp)
    3b10:	9d800044 	addi	r22,r19,1
    3b14:	9c800005 	stb	r18,0(r19)
    3b18:	b02f883a 	mov	r23,r22
    3b1c:	98c10626 	beq	r19,r3,3f38 <_dtoa_r+0x12f4>
    3b20:	800b883a 	mov	r5,r16
    3b24:	000f883a 	mov	r7,zero
    3b28:	01800284 	movi	r6,10
    3b2c:	e009883a 	mov	r4,fp
    3b30:	00063cc0 	call	63cc <__multadd>
    3b34:	1021883a 	mov	r16,r2
    3b38:	000f883a 	mov	r7,zero
    3b3c:	01800284 	movi	r6,10
    3b40:	880b883a 	mov	r5,r17
    3b44:	e009883a 	mov	r4,fp
    3b48:	8d002526 	beq	r17,r20,3be0 <_dtoa_r+0xf9c>
    3b4c:	00063cc0 	call	63cc <__multadd>
    3b50:	a00b883a 	mov	r5,r20
    3b54:	000f883a 	mov	r7,zero
    3b58:	01800284 	movi	r6,10
    3b5c:	e009883a 	mov	r4,fp
    3b60:	1023883a 	mov	r17,r2
    3b64:	00063cc0 	call	63cc <__multadd>
    3b68:	1029883a 	mov	r20,r2
    3b6c:	b027883a 	mov	r19,r22
    3b70:	003fc006 	br	3a74 <__alt_data_end+0xfffba694>
    3b74:	9011883a 	mov	r8,r18
    3b78:	00800e0e 	bge	zero,r2,3bb4 <_dtoa_r+0xf70>
    3b7c:	800b883a 	mov	r5,r16
    3b80:	01800044 	movi	r6,1
    3b84:	e009883a 	mov	r4,fp
    3b88:	da001715 	stw	r8,92(sp)
    3b8c:	0006b380 	call	6b38 <__lshift>
    3b90:	a80b883a 	mov	r5,r21
    3b94:	1009883a 	mov	r4,r2
    3b98:	1021883a 	mov	r16,r2
    3b9c:	0006c800 	call	6c80 <__mcmp>
    3ba0:	da001717 	ldw	r8,92(sp)
    3ba4:	0081960e 	bge	zero,r2,4200 <_dtoa_r+0x15bc>
    3ba8:	00800e44 	movi	r2,57
    3bac:	40817026 	beq	r8,r2,4170 <_dtoa_r+0x152c>
    3bb0:	ba000c44 	addi	r8,r23,49
    3bb4:	8825883a 	mov	r18,r17
    3bb8:	9dc00044 	addi	r23,r19,1
    3bbc:	9a000005 	stb	r8,0(r19)
    3bc0:	a023883a 	mov	r17,r20
    3bc4:	dc000915 	stw	r16,36(sp)
    3bc8:	003f2406 	br	385c <__alt_data_end+0xfffba47c>
    3bcc:	00800e44 	movi	r2,57
    3bd0:	9011883a 	mov	r8,r18
    3bd4:	90816626 	beq	r18,r2,4170 <_dtoa_r+0x152c>
    3bd8:	05bff516 	blt	zero,r22,3bb0 <__alt_data_end+0xfffba7d0>
    3bdc:	003ff506 	br	3bb4 <__alt_data_end+0xfffba7d4>
    3be0:	00063cc0 	call	63cc <__multadd>
    3be4:	1023883a 	mov	r17,r2
    3be8:	1029883a 	mov	r20,r2
    3bec:	003fdf06 	br	3b6c <__alt_data_end+0xfffba78c>
    3bf0:	e009883a 	mov	r4,fp
    3bf4:	00063a40 	call	63a4 <_Bfree>
    3bf8:	00800044 	movi	r2,1
    3bfc:	003fbc06 	br	3af0 <__alt_data_end+0xfffba710>
    3c00:	a80b883a 	mov	r5,r21
    3c04:	8009883a 	mov	r4,r16
    3c08:	0006c800 	call	6c80 <__mcmp>
    3c0c:	103edb0e 	bge	r2,zero,377c <__alt_data_end+0xfffba39c>
    3c10:	800b883a 	mov	r5,r16
    3c14:	000f883a 	mov	r7,zero
    3c18:	01800284 	movi	r6,10
    3c1c:	e009883a 	mov	r4,fp
    3c20:	00063cc0 	call	63cc <__multadd>
    3c24:	1021883a 	mov	r16,r2
    3c28:	d8800517 	ldw	r2,20(sp)
    3c2c:	d8c00b17 	ldw	r3,44(sp)
    3c30:	10bfffc4 	addi	r2,r2,-1
    3c34:	d8800515 	stw	r2,20(sp)
    3c38:	183f761e 	bne	r3,zero,3a14 <__alt_data_end+0xfffba634>
    3c3c:	d9000c17 	ldw	r4,48(sp)
    3c40:	0101730e 	bge	zero,r4,4210 <_dtoa_r+0x15cc>
    3c44:	d9000615 	stw	r4,24(sp)
    3c48:	003ed006 	br	378c <__alt_data_end+0xfffba3ac>
    3c4c:	00800084 	movi	r2,2
    3c50:	3081861e 	bne	r6,r2,426c <_dtoa_r+0x1628>
    3c54:	d8000b15 	stw	zero,44(sp)
    3c58:	003f3c06 	br	394c <__alt_data_end+0xfffba56c>
    3c5c:	dc000917 	ldw	r16,36(sp)
    3c60:	003e9206 	br	36ac <__alt_data_end+0xfffba2cc>
    3c64:	d9c00317 	ldw	r7,12(sp)
    3c68:	00800084 	movi	r2,2
    3c6c:	11fec50e 	bge	r2,r7,3784 <__alt_data_end+0xfffba3a4>
    3c70:	d9000617 	ldw	r4,24(sp)
    3c74:	20013c1e 	bne	r4,zero,4168 <_dtoa_r+0x1524>
    3c78:	a80b883a 	mov	r5,r21
    3c7c:	000f883a 	mov	r7,zero
    3c80:	01800144 	movi	r6,5
    3c84:	e009883a 	mov	r4,fp
    3c88:	00063cc0 	call	63cc <__multadd>
    3c8c:	100b883a 	mov	r5,r2
    3c90:	8009883a 	mov	r4,r16
    3c94:	102b883a 	mov	r21,r2
    3c98:	0006c800 	call	6c80 <__mcmp>
    3c9c:	dc000915 	stw	r16,36(sp)
    3ca0:	00bf410e 	bge	zero,r2,39a8 <__alt_data_end+0xfffba5c8>
    3ca4:	d9c00717 	ldw	r7,28(sp)
    3ca8:	00800c44 	movi	r2,49
    3cac:	38800005 	stb	r2,0(r7)
    3cb0:	d8800517 	ldw	r2,20(sp)
    3cb4:	3dc00044 	addi	r23,r7,1
    3cb8:	10800044 	addi	r2,r2,1
    3cbc:	d8800515 	stw	r2,20(sp)
    3cc0:	003f3d06 	br	39b8 <__alt_data_end+0xfffba5d8>
    3cc4:	d9800517 	ldw	r6,20(sp)
    3cc8:	d9c00717 	ldw	r7,28(sp)
    3ccc:	00800c44 	movi	r2,49
    3cd0:	31800044 	addi	r6,r6,1
    3cd4:	d9800515 	stw	r6,20(sp)
    3cd8:	38800005 	stb	r2,0(r7)
    3cdc:	003edf06 	br	385c <__alt_data_end+0xfffba47c>
    3ce0:	d8000b15 	stw	zero,44(sp)
    3ce4:	003c9f06 	br	2f64 <__alt_data_end+0xfffb9b84>
    3ce8:	903e7e1e 	bne	r18,zero,36e4 <__alt_data_end+0xfffba304>
    3cec:	00800434 	movhi	r2,16
    3cf0:	10bfffc4 	addi	r2,r2,-1
    3cf4:	9884703a 	and	r2,r19,r2
    3cf8:	1000ea1e 	bne	r2,zero,40a4 <_dtoa_r+0x1460>
    3cfc:	9cdffc2c 	andhi	r19,r19,32752
    3d00:	9800e826 	beq	r19,zero,40a4 <_dtoa_r+0x1460>
    3d04:	d9c00817 	ldw	r7,32(sp)
    3d08:	b5800044 	addi	r22,r22,1
    3d0c:	04c00044 	movi	r19,1
    3d10:	39c00044 	addi	r7,r7,1
    3d14:	d9c00815 	stw	r7,32(sp)
    3d18:	d8800d17 	ldw	r2,52(sp)
    3d1c:	103e721e 	bne	r2,zero,36e8 <__alt_data_end+0xfffba308>
    3d20:	00800044 	movi	r2,1
    3d24:	003e7906 	br	370c <__alt_data_end+0xfffba32c>
    3d28:	8009883a 	mov	r4,r16
    3d2c:	000d0900 	call	d090 <__floatsidf>
    3d30:	d9800f17 	ldw	r6,60(sp)
    3d34:	d9c01017 	ldw	r7,64(sp)
    3d38:	1009883a 	mov	r4,r2
    3d3c:	180b883a 	mov	r5,r3
    3d40:	000beac0 	call	beac <__muldf3>
    3d44:	000d883a 	mov	r6,zero
    3d48:	01d00734 	movhi	r7,16412
    3d4c:	1009883a 	mov	r4,r2
    3d50:	180b883a 	mov	r5,r3
    3d54:	000a9d80 	call	a9d8 <__adddf3>
    3d58:	047f3034 	movhi	r17,64704
    3d5c:	1021883a 	mov	r16,r2
    3d60:	1c63883a 	add	r17,r3,r17
    3d64:	d9000f17 	ldw	r4,60(sp)
    3d68:	d9401017 	ldw	r5,64(sp)
    3d6c:	000d883a 	mov	r6,zero
    3d70:	01d00534 	movhi	r7,16404
    3d74:	000c7140 	call	c714 <__subdf3>
    3d78:	800d883a 	mov	r6,r16
    3d7c:	880f883a 	mov	r7,r17
    3d80:	1009883a 	mov	r4,r2
    3d84:	180b883a 	mov	r5,r3
    3d88:	102b883a 	mov	r21,r2
    3d8c:	1829883a 	mov	r20,r3
    3d90:	000bcdc0 	call	bcdc <__gedf2>
    3d94:	00806c16 	blt	zero,r2,3f48 <_dtoa_r+0x1304>
    3d98:	89e0003c 	xorhi	r7,r17,32768
    3d9c:	800d883a 	mov	r6,r16
    3da0:	a809883a 	mov	r4,r21
    3da4:	a00b883a 	mov	r5,r20
    3da8:	000bdb80 	call	bdb8 <__ledf2>
    3dac:	103d7e0e 	bge	r2,zero,33a8 <__alt_data_end+0xfffb9fc8>
    3db0:	002b883a 	mov	r21,zero
    3db4:	0023883a 	mov	r17,zero
    3db8:	003efb06 	br	39a8 <__alt_data_end+0xfffba5c8>
    3dbc:	d8800717 	ldw	r2,28(sp)
    3dc0:	003bd006 	br	2d04 <__alt_data_end+0xfffb9924>
    3dc4:	d9000a17 	ldw	r4,40(sp)
    3dc8:	d9800d17 	ldw	r6,52(sp)
    3dcc:	dd400a15 	stw	r21,40(sp)
    3dd0:	a905c83a 	sub	r2,r21,r4
    3dd4:	308d883a 	add	r6,r6,r2
    3dd8:	d9800d15 	stw	r6,52(sp)
    3ddc:	002b883a 	mov	r21,zero
    3de0:	003e0606 	br	35fc <__alt_data_end+0xfffba21c>
    3de4:	9023883a 	mov	r17,r18
    3de8:	9829883a 	mov	r20,r19
    3dec:	04000084 	movi	r16,2
    3df0:	003c9206 	br	303c <__alt_data_end+0xfffb9c5c>
    3df4:	04000044 	movi	r16,1
    3df8:	dc000c15 	stw	r16,48(sp)
    3dfc:	dc000615 	stw	r16,24(sp)
    3e00:	dc002215 	stw	r16,136(sp)
    3e04:	e0001115 	stw	zero,68(fp)
    3e08:	000b883a 	mov	r5,zero
    3e0c:	003c6906 	br	2fb4 <__alt_data_end+0xfffb9bd4>
    3e10:	3021883a 	mov	r16,r6
    3e14:	003ffb06 	br	3e04 <__alt_data_end+0xfffbaa24>
    3e18:	1000021e 	bne	r2,zero,3e24 <_dtoa_r+0x11e0>
    3e1c:	4200004c 	andi	r8,r8,1
    3e20:	403e7d1e 	bne	r8,zero,3818 <__alt_data_end+0xfffba438>
    3e24:	01000c04 	movi	r4,48
    3e28:	00000106 	br	3e30 <_dtoa_r+0x11ec>
    3e2c:	102f883a 	mov	r23,r2
    3e30:	b8bfffc4 	addi	r2,r23,-1
    3e34:	10c00007 	ldb	r3,0(r2)
    3e38:	193ffc26 	beq	r3,r4,3e2c <__alt_data_end+0xfffbaa4c>
    3e3c:	003e8706 	br	385c <__alt_data_end+0xfffba47c>
    3e40:	d8800517 	ldw	r2,20(sp)
    3e44:	00a3c83a 	sub	r17,zero,r2
    3e48:	8800a426 	beq	r17,zero,40dc <_dtoa_r+0x1498>
    3e4c:	888003cc 	andi	r2,r17,15
    3e50:	100490fa 	slli	r2,r2,3
    3e54:	00c00074 	movhi	r3,1
    3e58:	18fed804 	addi	r3,r3,-1184
    3e5c:	1885883a 	add	r2,r3,r2
    3e60:	11800017 	ldw	r6,0(r2)
    3e64:	11c00117 	ldw	r7,4(r2)
    3e68:	9009883a 	mov	r4,r18
    3e6c:	980b883a 	mov	r5,r19
    3e70:	8823d13a 	srai	r17,r17,4
    3e74:	000beac0 	call	beac <__muldf3>
    3e78:	d8800f15 	stw	r2,60(sp)
    3e7c:	d8c01015 	stw	r3,64(sp)
    3e80:	8800e826 	beq	r17,zero,4224 <_dtoa_r+0x15e0>
    3e84:	05000074 	movhi	r20,1
    3e88:	a53ece04 	addi	r20,r20,-1224
    3e8c:	04000084 	movi	r16,2
    3e90:	8980004c 	andi	r6,r17,1
    3e94:	1009883a 	mov	r4,r2
    3e98:	8823d07a 	srai	r17,r17,1
    3e9c:	180b883a 	mov	r5,r3
    3ea0:	30000426 	beq	r6,zero,3eb4 <_dtoa_r+0x1270>
    3ea4:	a1800017 	ldw	r6,0(r20)
    3ea8:	a1c00117 	ldw	r7,4(r20)
    3eac:	84000044 	addi	r16,r16,1
    3eb0:	000beac0 	call	beac <__muldf3>
    3eb4:	a5000204 	addi	r20,r20,8
    3eb8:	883ff51e 	bne	r17,zero,3e90 <__alt_data_end+0xfffbaab0>
    3ebc:	d8800f15 	stw	r2,60(sp)
    3ec0:	d8c01015 	stw	r3,64(sp)
    3ec4:	003c7606 	br	30a0 <__alt_data_end+0xfffb9cc0>
    3ec8:	00c00c04 	movi	r3,48
    3ecc:	10c00005 	stb	r3,0(r2)
    3ed0:	d8c00517 	ldw	r3,20(sp)
    3ed4:	bd3fffc3 	ldbu	r20,-1(r23)
    3ed8:	18c00044 	addi	r3,r3,1
    3edc:	d8c00515 	stw	r3,20(sp)
    3ee0:	003db906 	br	35c8 <__alt_data_end+0xfffba1e8>
    3ee4:	89400117 	ldw	r5,4(r17)
    3ee8:	e009883a 	mov	r4,fp
    3eec:	00062fc0 	call	62fc <_Balloc>
    3ef0:	89800417 	ldw	r6,16(r17)
    3ef4:	89400304 	addi	r5,r17,12
    3ef8:	11000304 	addi	r4,r2,12
    3efc:	31800084 	addi	r6,r6,2
    3f00:	318d883a 	add	r6,r6,r6
    3f04:	318d883a 	add	r6,r6,r6
    3f08:	1027883a 	mov	r19,r2
    3f0c:	0005f300 	call	5f30 <memcpy>
    3f10:	01800044 	movi	r6,1
    3f14:	980b883a 	mov	r5,r19
    3f18:	e009883a 	mov	r4,fp
    3f1c:	0006b380 	call	6b38 <__lshift>
    3f20:	1029883a 	mov	r20,r2
    3f24:	003ecc06 	br	3a58 <__alt_data_end+0xfffba678>
    3f28:	00800e44 	movi	r2,57
    3f2c:	90809026 	beq	r18,r2,4170 <_dtoa_r+0x152c>
    3f30:	92000044 	addi	r8,r18,1
    3f34:	003f1f06 	br	3bb4 <__alt_data_end+0xfffba7d4>
    3f38:	9011883a 	mov	r8,r18
    3f3c:	8825883a 	mov	r18,r17
    3f40:	a023883a 	mov	r17,r20
    3f44:	003e2906 	br	37ec <__alt_data_end+0xfffba40c>
    3f48:	002b883a 	mov	r21,zero
    3f4c:	0023883a 	mov	r17,zero
    3f50:	003f5406 	br	3ca4 <__alt_data_end+0xfffba8c4>
    3f54:	61bfffc4 	addi	r6,r12,-1
    3f58:	300490fa 	slli	r2,r6,3
    3f5c:	00c00074 	movhi	r3,1
    3f60:	18fed804 	addi	r3,r3,-1184
    3f64:	1885883a 	add	r2,r3,r2
    3f68:	11000017 	ldw	r4,0(r2)
    3f6c:	11400117 	ldw	r5,4(r2)
    3f70:	d8800717 	ldw	r2,28(sp)
    3f74:	880f883a 	mov	r7,r17
    3f78:	d9801215 	stw	r6,72(sp)
    3f7c:	800d883a 	mov	r6,r16
    3f80:	db001615 	stw	r12,88(sp)
    3f84:	15c00044 	addi	r23,r2,1
    3f88:	000beac0 	call	beac <__muldf3>
    3f8c:	d9401017 	ldw	r5,64(sp)
    3f90:	d9000f17 	ldw	r4,60(sp)
    3f94:	d8c01515 	stw	r3,84(sp)
    3f98:	d8801415 	stw	r2,80(sp)
    3f9c:	000d0100 	call	d010 <__fixdfsi>
    3fa0:	1009883a 	mov	r4,r2
    3fa4:	1021883a 	mov	r16,r2
    3fa8:	000d0900 	call	d090 <__floatsidf>
    3fac:	d9000f17 	ldw	r4,60(sp)
    3fb0:	d9401017 	ldw	r5,64(sp)
    3fb4:	100d883a 	mov	r6,r2
    3fb8:	180f883a 	mov	r7,r3
    3fbc:	000c7140 	call	c714 <__subdf3>
    3fc0:	1829883a 	mov	r20,r3
    3fc4:	d8c00717 	ldw	r3,28(sp)
    3fc8:	84000c04 	addi	r16,r16,48
    3fcc:	1023883a 	mov	r17,r2
    3fd0:	1c000005 	stb	r16,0(r3)
    3fd4:	db001617 	ldw	r12,88(sp)
    3fd8:	00800044 	movi	r2,1
    3fdc:	60802226 	beq	r12,r2,4068 <_dtoa_r+0x1424>
    3fe0:	d9c00717 	ldw	r7,28(sp)
    3fe4:	8805883a 	mov	r2,r17
    3fe8:	b82b883a 	mov	r21,r23
    3fec:	3b19883a 	add	r12,r7,r12
    3ff0:	6023883a 	mov	r17,r12
    3ff4:	a007883a 	mov	r3,r20
    3ff8:	dc800f15 	stw	r18,60(sp)
    3ffc:	000d883a 	mov	r6,zero
    4000:	01d00934 	movhi	r7,16420
    4004:	1009883a 	mov	r4,r2
    4008:	180b883a 	mov	r5,r3
    400c:	000beac0 	call	beac <__muldf3>
    4010:	180b883a 	mov	r5,r3
    4014:	1009883a 	mov	r4,r2
    4018:	1829883a 	mov	r20,r3
    401c:	1025883a 	mov	r18,r2
    4020:	000d0100 	call	d010 <__fixdfsi>
    4024:	1009883a 	mov	r4,r2
    4028:	1021883a 	mov	r16,r2
    402c:	000d0900 	call	d090 <__floatsidf>
    4030:	100d883a 	mov	r6,r2
    4034:	180f883a 	mov	r7,r3
    4038:	9009883a 	mov	r4,r18
    403c:	a00b883a 	mov	r5,r20
    4040:	84000c04 	addi	r16,r16,48
    4044:	000c7140 	call	c714 <__subdf3>
    4048:	ad400044 	addi	r21,r21,1
    404c:	ac3fffc5 	stb	r16,-1(r21)
    4050:	ac7fea1e 	bne	r21,r17,3ffc <__alt_data_end+0xfffbac1c>
    4054:	1023883a 	mov	r17,r2
    4058:	d8801217 	ldw	r2,72(sp)
    405c:	dc800f17 	ldw	r18,60(sp)
    4060:	1829883a 	mov	r20,r3
    4064:	b8af883a 	add	r23,r23,r2
    4068:	d9001417 	ldw	r4,80(sp)
    406c:	d9401517 	ldw	r5,84(sp)
    4070:	000d883a 	mov	r6,zero
    4074:	01cff834 	movhi	r7,16352
    4078:	000a9d80 	call	a9d8 <__adddf3>
    407c:	880d883a 	mov	r6,r17
    4080:	a00f883a 	mov	r7,r20
    4084:	1009883a 	mov	r4,r2
    4088:	180b883a 	mov	r5,r3
    408c:	000bdb80 	call	bdb8 <__ledf2>
    4090:	10003e0e 	bge	r2,zero,418c <_dtoa_r+0x1548>
    4094:	d9001317 	ldw	r4,76(sp)
    4098:	bd3fffc3 	ldbu	r20,-1(r23)
    409c:	d9000515 	stw	r4,20(sp)
    40a0:	003d3b06 	br	3590 <__alt_data_end+0xfffba1b0>
    40a4:	0027883a 	mov	r19,zero
    40a8:	003f1b06 	br	3d18 <__alt_data_end+0xfffba938>
    40ac:	d8800817 	ldw	r2,32(sp)
    40b0:	11e9c83a 	sub	r20,r2,r7
    40b4:	0005883a 	mov	r2,zero
    40b8:	003d5406 	br	360c <__alt_data_end+0xfffba22c>
    40bc:	00800044 	movi	r2,1
    40c0:	003dc706 	br	37e0 <__alt_data_end+0xfffba400>
    40c4:	d8c00217 	ldw	r3,8(sp)
    40c8:	00800d84 	movi	r2,54
    40cc:	dd400a17 	ldw	r21,40(sp)
    40d0:	10c5c83a 	sub	r2,r2,r3
    40d4:	dd000817 	ldw	r20,32(sp)
    40d8:	003d4c06 	br	360c <__alt_data_end+0xfffba22c>
    40dc:	dc800f15 	stw	r18,60(sp)
    40e0:	dcc01015 	stw	r19,64(sp)
    40e4:	04000084 	movi	r16,2
    40e8:	003bed06 	br	30a0 <__alt_data_end+0xfffb9cc0>
    40ec:	d9000617 	ldw	r4,24(sp)
    40f0:	203f0d26 	beq	r4,zero,3d28 <__alt_data_end+0xfffba948>
    40f4:	d9800c17 	ldw	r6,48(sp)
    40f8:	01bcab0e 	bge	zero,r6,33a8 <__alt_data_end+0xfffb9fc8>
    40fc:	d9401017 	ldw	r5,64(sp)
    4100:	d9000f17 	ldw	r4,60(sp)
    4104:	000d883a 	mov	r6,zero
    4108:	01d00934 	movhi	r7,16420
    410c:	000beac0 	call	beac <__muldf3>
    4110:	81000044 	addi	r4,r16,1
    4114:	d8800f15 	stw	r2,60(sp)
    4118:	d8c01015 	stw	r3,64(sp)
    411c:	000d0900 	call	d090 <__floatsidf>
    4120:	d9800f17 	ldw	r6,60(sp)
    4124:	d9c01017 	ldw	r7,64(sp)
    4128:	1009883a 	mov	r4,r2
    412c:	180b883a 	mov	r5,r3
    4130:	000beac0 	call	beac <__muldf3>
    4134:	01d00734 	movhi	r7,16412
    4138:	000d883a 	mov	r6,zero
    413c:	1009883a 	mov	r4,r2
    4140:	180b883a 	mov	r5,r3
    4144:	000a9d80 	call	a9d8 <__adddf3>
    4148:	d9c00517 	ldw	r7,20(sp)
    414c:	047f3034 	movhi	r17,64704
    4150:	1021883a 	mov	r16,r2
    4154:	39ffffc4 	addi	r7,r7,-1
    4158:	d9c01315 	stw	r7,76(sp)
    415c:	1c63883a 	add	r17,r3,r17
    4160:	db000c17 	ldw	r12,48(sp)
    4164:	003bea06 	br	3110 <__alt_data_end+0xfffb9d30>
    4168:	dc000915 	stw	r16,36(sp)
    416c:	003e0e06 	br	39a8 <__alt_data_end+0xfffba5c8>
    4170:	01000e44 	movi	r4,57
    4174:	8825883a 	mov	r18,r17
    4178:	9dc00044 	addi	r23,r19,1
    417c:	99000005 	stb	r4,0(r19)
    4180:	a023883a 	mov	r17,r20
    4184:	dc000915 	stw	r16,36(sp)
    4188:	003da406 	br	381c <__alt_data_end+0xfffba43c>
    418c:	d9801417 	ldw	r6,80(sp)
    4190:	d9c01517 	ldw	r7,84(sp)
    4194:	0009883a 	mov	r4,zero
    4198:	014ff834 	movhi	r5,16352
    419c:	000c7140 	call	c714 <__subdf3>
    41a0:	880d883a 	mov	r6,r17
    41a4:	a00f883a 	mov	r7,r20
    41a8:	1009883a 	mov	r4,r2
    41ac:	180b883a 	mov	r5,r3
    41b0:	000bcdc0 	call	bcdc <__gedf2>
    41b4:	00bc7c0e 	bge	zero,r2,33a8 <__alt_data_end+0xfffb9fc8>
    41b8:	01000c04 	movi	r4,48
    41bc:	00000106 	br	41c4 <_dtoa_r+0x1580>
    41c0:	102f883a 	mov	r23,r2
    41c4:	b8bfffc4 	addi	r2,r23,-1
    41c8:	10c00007 	ldb	r3,0(r2)
    41cc:	193ffc26 	beq	r3,r4,41c0 <__alt_data_end+0xfffbade0>
    41d0:	d9801317 	ldw	r6,76(sp)
    41d4:	d9800515 	stw	r6,20(sp)
    41d8:	003c4406 	br	32ec <__alt_data_end+0xfffb9f0c>
    41dc:	d9801317 	ldw	r6,76(sp)
    41e0:	d9800515 	stw	r6,20(sp)
    41e4:	003cea06 	br	3590 <__alt_data_end+0xfffba1b0>
    41e8:	dd800f17 	ldw	r22,60(sp)
    41ec:	dcc01017 	ldw	r19,64(sp)
    41f0:	dc801217 	ldw	r18,72(sp)
    41f4:	003c6c06 	br	33a8 <__alt_data_end+0xfffb9fc8>
    41f8:	903e031e 	bne	r18,zero,3a08 <__alt_data_end+0xfffba628>
    41fc:	003ebb06 	br	3cec <__alt_data_end+0xfffba90c>
    4200:	103e6c1e 	bne	r2,zero,3bb4 <__alt_data_end+0xfffba7d4>
    4204:	4080004c 	andi	r2,r8,1
    4208:	103e6a26 	beq	r2,zero,3bb4 <__alt_data_end+0xfffba7d4>
    420c:	003e6606 	br	3ba8 <__alt_data_end+0xfffba7c8>
    4210:	d8c00317 	ldw	r3,12(sp)
    4214:	00800084 	movi	r2,2
    4218:	10c02916 	blt	r2,r3,42c0 <_dtoa_r+0x167c>
    421c:	d9000c17 	ldw	r4,48(sp)
    4220:	003e8806 	br	3c44 <__alt_data_end+0xfffba864>
    4224:	04000084 	movi	r16,2
    4228:	003b9d06 	br	30a0 <__alt_data_end+0xfffb9cc0>
    422c:	d9001317 	ldw	r4,76(sp)
    4230:	d9000515 	stw	r4,20(sp)
    4234:	003cd606 	br	3590 <__alt_data_end+0xfffba1b0>
    4238:	d8801317 	ldw	r2,76(sp)
    423c:	d8800515 	stw	r2,20(sp)
    4240:	003c2a06 	br	32ec <__alt_data_end+0xfffb9f0c>
    4244:	d9800317 	ldw	r6,12(sp)
    4248:	00800084 	movi	r2,2
    424c:	11801516 	blt	r2,r6,42a4 <_dtoa_r+0x1660>
    4250:	d9c00c17 	ldw	r7,48(sp)
    4254:	d9c00615 	stw	r7,24(sp)
    4258:	003df706 	br	3a38 <__alt_data_end+0xfffba658>
    425c:	193d3926 	beq	r3,r4,3744 <__alt_data_end+0xfffba364>
    4260:	00c00f04 	movi	r3,60
    4264:	1885c83a 	sub	r2,r3,r2
    4268:	003ddf06 	br	39e8 <__alt_data_end+0xfffba608>
    426c:	e009883a 	mov	r4,fp
    4270:	e0001115 	stw	zero,68(fp)
    4274:	000b883a 	mov	r5,zero
    4278:	00062fc0 	call	62fc <_Balloc>
    427c:	d8800715 	stw	r2,28(sp)
    4280:	d8c00717 	ldw	r3,28(sp)
    4284:	00bfffc4 	movi	r2,-1
    4288:	01000044 	movi	r4,1
    428c:	d8800c15 	stw	r2,48(sp)
    4290:	e0c01015 	stw	r3,64(fp)
    4294:	d9000b15 	stw	r4,44(sp)
    4298:	d8800615 	stw	r2,24(sp)
    429c:	d8002215 	stw	zero,136(sp)
    42a0:	003c4106 	br	33a8 <__alt_data_end+0xfffb9fc8>
    42a4:	d8c00c17 	ldw	r3,48(sp)
    42a8:	d8c00615 	stw	r3,24(sp)
    42ac:	003e7006 	br	3c70 <__alt_data_end+0xfffba890>
    42b0:	04400044 	movi	r17,1
    42b4:	003b2006 	br	2f38 <__alt_data_end+0xfffb9b58>
    42b8:	000b883a 	mov	r5,zero
    42bc:	003b3d06 	br	2fb4 <__alt_data_end+0xfffb9bd4>
    42c0:	d8800c17 	ldw	r2,48(sp)
    42c4:	d8800615 	stw	r2,24(sp)
    42c8:	003e6906 	br	3c70 <__alt_data_end+0xfffba890>

000042cc <__sflush_r>:
    42cc:	2880030b 	ldhu	r2,12(r5)
    42d0:	defffb04 	addi	sp,sp,-20
    42d4:	dcc00315 	stw	r19,12(sp)
    42d8:	dc400115 	stw	r17,4(sp)
    42dc:	dfc00415 	stw	ra,16(sp)
    42e0:	dc800215 	stw	r18,8(sp)
    42e4:	dc000015 	stw	r16,0(sp)
    42e8:	10c0020c 	andi	r3,r2,8
    42ec:	2823883a 	mov	r17,r5
    42f0:	2027883a 	mov	r19,r4
    42f4:	1800311e 	bne	r3,zero,43bc <__sflush_r+0xf0>
    42f8:	28c00117 	ldw	r3,4(r5)
    42fc:	10820014 	ori	r2,r2,2048
    4300:	2880030d 	sth	r2,12(r5)
    4304:	00c04b0e 	bge	zero,r3,4434 <__sflush_r+0x168>
    4308:	8a000a17 	ldw	r8,40(r17)
    430c:	40002326 	beq	r8,zero,439c <__sflush_r+0xd0>
    4310:	9c000017 	ldw	r16,0(r19)
    4314:	10c4000c 	andi	r3,r2,4096
    4318:	98000015 	stw	zero,0(r19)
    431c:	18004826 	beq	r3,zero,4440 <__sflush_r+0x174>
    4320:	89801417 	ldw	r6,80(r17)
    4324:	10c0010c 	andi	r3,r2,4
    4328:	18000626 	beq	r3,zero,4344 <__sflush_r+0x78>
    432c:	88c00117 	ldw	r3,4(r17)
    4330:	88800c17 	ldw	r2,48(r17)
    4334:	30cdc83a 	sub	r6,r6,r3
    4338:	10000226 	beq	r2,zero,4344 <__sflush_r+0x78>
    433c:	88800f17 	ldw	r2,60(r17)
    4340:	308dc83a 	sub	r6,r6,r2
    4344:	89400717 	ldw	r5,28(r17)
    4348:	000f883a 	mov	r7,zero
    434c:	9809883a 	mov	r4,r19
    4350:	403ee83a 	callr	r8
    4354:	00ffffc4 	movi	r3,-1
    4358:	10c04426 	beq	r2,r3,446c <__sflush_r+0x1a0>
    435c:	88c0030b 	ldhu	r3,12(r17)
    4360:	89000417 	ldw	r4,16(r17)
    4364:	88000115 	stw	zero,4(r17)
    4368:	197dffcc 	andi	r5,r3,63487
    436c:	8940030d 	sth	r5,12(r17)
    4370:	89000015 	stw	r4,0(r17)
    4374:	18c4000c 	andi	r3,r3,4096
    4378:	18002c1e 	bne	r3,zero,442c <__sflush_r+0x160>
    437c:	89400c17 	ldw	r5,48(r17)
    4380:	9c000015 	stw	r16,0(r19)
    4384:	28000526 	beq	r5,zero,439c <__sflush_r+0xd0>
    4388:	88801004 	addi	r2,r17,64
    438c:	28800226 	beq	r5,r2,4398 <__sflush_r+0xcc>
    4390:	9809883a 	mov	r4,r19
    4394:	0004a480 	call	4a48 <_free_r>
    4398:	88000c15 	stw	zero,48(r17)
    439c:	0005883a 	mov	r2,zero
    43a0:	dfc00417 	ldw	ra,16(sp)
    43a4:	dcc00317 	ldw	r19,12(sp)
    43a8:	dc800217 	ldw	r18,8(sp)
    43ac:	dc400117 	ldw	r17,4(sp)
    43b0:	dc000017 	ldw	r16,0(sp)
    43b4:	dec00504 	addi	sp,sp,20
    43b8:	f800283a 	ret
    43bc:	2c800417 	ldw	r18,16(r5)
    43c0:	903ff626 	beq	r18,zero,439c <__alt_data_end+0xfffbafbc>
    43c4:	2c000017 	ldw	r16,0(r5)
    43c8:	108000cc 	andi	r2,r2,3
    43cc:	2c800015 	stw	r18,0(r5)
    43d0:	84a1c83a 	sub	r16,r16,r18
    43d4:	1000131e 	bne	r2,zero,4424 <__sflush_r+0x158>
    43d8:	28800517 	ldw	r2,20(r5)
    43dc:	88800215 	stw	r2,8(r17)
    43e0:	04000316 	blt	zero,r16,43f0 <__sflush_r+0x124>
    43e4:	003fed06 	br	439c <__alt_data_end+0xfffbafbc>
    43e8:	90a5883a 	add	r18,r18,r2
    43ec:	043feb0e 	bge	zero,r16,439c <__alt_data_end+0xfffbafbc>
    43f0:	88800917 	ldw	r2,36(r17)
    43f4:	89400717 	ldw	r5,28(r17)
    43f8:	800f883a 	mov	r7,r16
    43fc:	900d883a 	mov	r6,r18
    4400:	9809883a 	mov	r4,r19
    4404:	103ee83a 	callr	r2
    4408:	80a1c83a 	sub	r16,r16,r2
    440c:	00bff616 	blt	zero,r2,43e8 <__alt_data_end+0xfffbb008>
    4410:	88c0030b 	ldhu	r3,12(r17)
    4414:	00bfffc4 	movi	r2,-1
    4418:	18c01014 	ori	r3,r3,64
    441c:	88c0030d 	sth	r3,12(r17)
    4420:	003fdf06 	br	43a0 <__alt_data_end+0xfffbafc0>
    4424:	0005883a 	mov	r2,zero
    4428:	003fec06 	br	43dc <__alt_data_end+0xfffbaffc>
    442c:	88801415 	stw	r2,80(r17)
    4430:	003fd206 	br	437c <__alt_data_end+0xfffbaf9c>
    4434:	28c00f17 	ldw	r3,60(r5)
    4438:	00ffb316 	blt	zero,r3,4308 <__alt_data_end+0xfffbaf28>
    443c:	003fd706 	br	439c <__alt_data_end+0xfffbafbc>
    4440:	89400717 	ldw	r5,28(r17)
    4444:	000d883a 	mov	r6,zero
    4448:	01c00044 	movi	r7,1
    444c:	9809883a 	mov	r4,r19
    4450:	403ee83a 	callr	r8
    4454:	100d883a 	mov	r6,r2
    4458:	00bfffc4 	movi	r2,-1
    445c:	30801426 	beq	r6,r2,44b0 <__sflush_r+0x1e4>
    4460:	8880030b 	ldhu	r2,12(r17)
    4464:	8a000a17 	ldw	r8,40(r17)
    4468:	003fae06 	br	4324 <__alt_data_end+0xfffbaf44>
    446c:	98c00017 	ldw	r3,0(r19)
    4470:	183fba26 	beq	r3,zero,435c <__alt_data_end+0xfffbaf7c>
    4474:	01000744 	movi	r4,29
    4478:	19000626 	beq	r3,r4,4494 <__sflush_r+0x1c8>
    447c:	01000584 	movi	r4,22
    4480:	19000426 	beq	r3,r4,4494 <__sflush_r+0x1c8>
    4484:	88c0030b 	ldhu	r3,12(r17)
    4488:	18c01014 	ori	r3,r3,64
    448c:	88c0030d 	sth	r3,12(r17)
    4490:	003fc306 	br	43a0 <__alt_data_end+0xfffbafc0>
    4494:	8880030b 	ldhu	r2,12(r17)
    4498:	88c00417 	ldw	r3,16(r17)
    449c:	88000115 	stw	zero,4(r17)
    44a0:	10bdffcc 	andi	r2,r2,63487
    44a4:	8880030d 	sth	r2,12(r17)
    44a8:	88c00015 	stw	r3,0(r17)
    44ac:	003fb306 	br	437c <__alt_data_end+0xfffbaf9c>
    44b0:	98800017 	ldw	r2,0(r19)
    44b4:	103fea26 	beq	r2,zero,4460 <__alt_data_end+0xfffbb080>
    44b8:	00c00744 	movi	r3,29
    44bc:	10c00226 	beq	r2,r3,44c8 <__sflush_r+0x1fc>
    44c0:	00c00584 	movi	r3,22
    44c4:	10c0031e 	bne	r2,r3,44d4 <__sflush_r+0x208>
    44c8:	9c000015 	stw	r16,0(r19)
    44cc:	0005883a 	mov	r2,zero
    44d0:	003fb306 	br	43a0 <__alt_data_end+0xfffbafc0>
    44d4:	88c0030b 	ldhu	r3,12(r17)
    44d8:	3005883a 	mov	r2,r6
    44dc:	18c01014 	ori	r3,r3,64
    44e0:	88c0030d 	sth	r3,12(r17)
    44e4:	003fae06 	br	43a0 <__alt_data_end+0xfffbafc0>

000044e8 <_fflush_r>:
    44e8:	defffd04 	addi	sp,sp,-12
    44ec:	dc000115 	stw	r16,4(sp)
    44f0:	dfc00215 	stw	ra,8(sp)
    44f4:	2021883a 	mov	r16,r4
    44f8:	20000226 	beq	r4,zero,4504 <_fflush_r+0x1c>
    44fc:	20800e17 	ldw	r2,56(r4)
    4500:	10000c26 	beq	r2,zero,4534 <_fflush_r+0x4c>
    4504:	2880030f 	ldh	r2,12(r5)
    4508:	1000051e 	bne	r2,zero,4520 <_fflush_r+0x38>
    450c:	0005883a 	mov	r2,zero
    4510:	dfc00217 	ldw	ra,8(sp)
    4514:	dc000117 	ldw	r16,4(sp)
    4518:	dec00304 	addi	sp,sp,12
    451c:	f800283a 	ret
    4520:	8009883a 	mov	r4,r16
    4524:	dfc00217 	ldw	ra,8(sp)
    4528:	dc000117 	ldw	r16,4(sp)
    452c:	dec00304 	addi	sp,sp,12
    4530:	00042cc1 	jmpi	42cc <__sflush_r>
    4534:	d9400015 	stw	r5,0(sp)
    4538:	00048d40 	call	48d4 <__sinit>
    453c:	d9400017 	ldw	r5,0(sp)
    4540:	003ff006 	br	4504 <__alt_data_end+0xfffbb124>

00004544 <fflush>:
    4544:	20000526 	beq	r4,zero,455c <fflush+0x18>
    4548:	00800074 	movhi	r2,1
    454c:	10860b04 	addi	r2,r2,6188
    4550:	200b883a 	mov	r5,r4
    4554:	11000017 	ldw	r4,0(r2)
    4558:	00044e81 	jmpi	44e8 <_fflush_r>
    455c:	00800074 	movhi	r2,1
    4560:	10860a04 	addi	r2,r2,6184
    4564:	11000017 	ldw	r4,0(r2)
    4568:	01400034 	movhi	r5,0
    456c:	29513a04 	addi	r5,r5,17640
    4570:	00052e41 	jmpi	52e4 <_fwalk_reent>

00004574 <__fp_unlock>:
    4574:	0005883a 	mov	r2,zero
    4578:	f800283a 	ret

0000457c <_cleanup_r>:
    457c:	01400074 	movhi	r5,1
    4580:	29652004 	addi	r5,r5,-27520
    4584:	00052e41 	jmpi	52e4 <_fwalk_reent>

00004588 <__sinit.part.1>:
    4588:	defff704 	addi	sp,sp,-36
    458c:	00c00034 	movhi	r3,0
    4590:	dfc00815 	stw	ra,32(sp)
    4594:	ddc00715 	stw	r23,28(sp)
    4598:	dd800615 	stw	r22,24(sp)
    459c:	dd400515 	stw	r21,20(sp)
    45a0:	dd000415 	stw	r20,16(sp)
    45a4:	dcc00315 	stw	r19,12(sp)
    45a8:	dc800215 	stw	r18,8(sp)
    45ac:	dc400115 	stw	r17,4(sp)
    45b0:	dc000015 	stw	r16,0(sp)
    45b4:	18d15f04 	addi	r3,r3,17788
    45b8:	24000117 	ldw	r16,4(r4)
    45bc:	20c00f15 	stw	r3,60(r4)
    45c0:	2080bb04 	addi	r2,r4,748
    45c4:	00c000c4 	movi	r3,3
    45c8:	20c0b915 	stw	r3,740(r4)
    45cc:	2080ba15 	stw	r2,744(r4)
    45d0:	2000b815 	stw	zero,736(r4)
    45d4:	05c00204 	movi	r23,8
    45d8:	00800104 	movi	r2,4
    45dc:	2025883a 	mov	r18,r4
    45e0:	b80d883a 	mov	r6,r23
    45e4:	81001704 	addi	r4,r16,92
    45e8:	000b883a 	mov	r5,zero
    45ec:	80000015 	stw	zero,0(r16)
    45f0:	80000115 	stw	zero,4(r16)
    45f4:	80000215 	stw	zero,8(r16)
    45f8:	8080030d 	sth	r2,12(r16)
    45fc:	80001915 	stw	zero,100(r16)
    4600:	8000038d 	sth	zero,14(r16)
    4604:	80000415 	stw	zero,16(r16)
    4608:	80000515 	stw	zero,20(r16)
    460c:	80000615 	stw	zero,24(r16)
    4610:	00061d40 	call	61d4 <memset>
    4614:	05800034 	movhi	r22,0
    4618:	94400217 	ldw	r17,8(r18)
    461c:	05400034 	movhi	r21,0
    4620:	05000034 	movhi	r20,0
    4624:	04c00034 	movhi	r19,0
    4628:	b59e7804 	addi	r22,r22,31200
    462c:	ad5e8f04 	addi	r21,r21,31292
    4630:	a51eae04 	addi	r20,r20,31416
    4634:	9cdec504 	addi	r19,r19,31508
    4638:	85800815 	stw	r22,32(r16)
    463c:	85400915 	stw	r21,36(r16)
    4640:	85000a15 	stw	r20,40(r16)
    4644:	84c00b15 	stw	r19,44(r16)
    4648:	84000715 	stw	r16,28(r16)
    464c:	00800284 	movi	r2,10
    4650:	8880030d 	sth	r2,12(r17)
    4654:	00800044 	movi	r2,1
    4658:	b80d883a 	mov	r6,r23
    465c:	89001704 	addi	r4,r17,92
    4660:	000b883a 	mov	r5,zero
    4664:	88000015 	stw	zero,0(r17)
    4668:	88000115 	stw	zero,4(r17)
    466c:	88000215 	stw	zero,8(r17)
    4670:	88001915 	stw	zero,100(r17)
    4674:	8880038d 	sth	r2,14(r17)
    4678:	88000415 	stw	zero,16(r17)
    467c:	88000515 	stw	zero,20(r17)
    4680:	88000615 	stw	zero,24(r17)
    4684:	00061d40 	call	61d4 <memset>
    4688:	94000317 	ldw	r16,12(r18)
    468c:	00800484 	movi	r2,18
    4690:	8c400715 	stw	r17,28(r17)
    4694:	8d800815 	stw	r22,32(r17)
    4698:	8d400915 	stw	r21,36(r17)
    469c:	8d000a15 	stw	r20,40(r17)
    46a0:	8cc00b15 	stw	r19,44(r17)
    46a4:	8080030d 	sth	r2,12(r16)
    46a8:	00800084 	movi	r2,2
    46ac:	80000015 	stw	zero,0(r16)
    46b0:	80000115 	stw	zero,4(r16)
    46b4:	80000215 	stw	zero,8(r16)
    46b8:	80001915 	stw	zero,100(r16)
    46bc:	8080038d 	sth	r2,14(r16)
    46c0:	80000415 	stw	zero,16(r16)
    46c4:	80000515 	stw	zero,20(r16)
    46c8:	80000615 	stw	zero,24(r16)
    46cc:	b80d883a 	mov	r6,r23
    46d0:	000b883a 	mov	r5,zero
    46d4:	81001704 	addi	r4,r16,92
    46d8:	00061d40 	call	61d4 <memset>
    46dc:	00800044 	movi	r2,1
    46e0:	84000715 	stw	r16,28(r16)
    46e4:	85800815 	stw	r22,32(r16)
    46e8:	85400915 	stw	r21,36(r16)
    46ec:	85000a15 	stw	r20,40(r16)
    46f0:	84c00b15 	stw	r19,44(r16)
    46f4:	90800e15 	stw	r2,56(r18)
    46f8:	dfc00817 	ldw	ra,32(sp)
    46fc:	ddc00717 	ldw	r23,28(sp)
    4700:	dd800617 	ldw	r22,24(sp)
    4704:	dd400517 	ldw	r21,20(sp)
    4708:	dd000417 	ldw	r20,16(sp)
    470c:	dcc00317 	ldw	r19,12(sp)
    4710:	dc800217 	ldw	r18,8(sp)
    4714:	dc400117 	ldw	r17,4(sp)
    4718:	dc000017 	ldw	r16,0(sp)
    471c:	dec00904 	addi	sp,sp,36
    4720:	f800283a 	ret

00004724 <__fp_lock>:
    4724:	0005883a 	mov	r2,zero
    4728:	f800283a 	ret

0000472c <__sfmoreglue>:
    472c:	defffc04 	addi	sp,sp,-16
    4730:	dc800215 	stw	r18,8(sp)
    4734:	2825883a 	mov	r18,r5
    4738:	dc000015 	stw	r16,0(sp)
    473c:	01401a04 	movi	r5,104
    4740:	2021883a 	mov	r16,r4
    4744:	913fffc4 	addi	r4,r18,-1
    4748:	dfc00315 	stw	ra,12(sp)
    474c:	dc400115 	stw	r17,4(sp)
    4750:	000a9b00 	call	a9b0 <__mulsi3>
    4754:	8009883a 	mov	r4,r16
    4758:	11401d04 	addi	r5,r2,116
    475c:	1023883a 	mov	r17,r2
    4760:	00056400 	call	5640 <_malloc_r>
    4764:	1021883a 	mov	r16,r2
    4768:	10000726 	beq	r2,zero,4788 <__sfmoreglue+0x5c>
    476c:	11000304 	addi	r4,r2,12
    4770:	10000015 	stw	zero,0(r2)
    4774:	14800115 	stw	r18,4(r2)
    4778:	11000215 	stw	r4,8(r2)
    477c:	89801a04 	addi	r6,r17,104
    4780:	000b883a 	mov	r5,zero
    4784:	00061d40 	call	61d4 <memset>
    4788:	8005883a 	mov	r2,r16
    478c:	dfc00317 	ldw	ra,12(sp)
    4790:	dc800217 	ldw	r18,8(sp)
    4794:	dc400117 	ldw	r17,4(sp)
    4798:	dc000017 	ldw	r16,0(sp)
    479c:	dec00404 	addi	sp,sp,16
    47a0:	f800283a 	ret

000047a4 <__sfp>:
    47a4:	defffb04 	addi	sp,sp,-20
    47a8:	dc000015 	stw	r16,0(sp)
    47ac:	04000074 	movhi	r16,1
    47b0:	84060a04 	addi	r16,r16,6184
    47b4:	dcc00315 	stw	r19,12(sp)
    47b8:	2027883a 	mov	r19,r4
    47bc:	81000017 	ldw	r4,0(r16)
    47c0:	dfc00415 	stw	ra,16(sp)
    47c4:	dc800215 	stw	r18,8(sp)
    47c8:	20800e17 	ldw	r2,56(r4)
    47cc:	dc400115 	stw	r17,4(sp)
    47d0:	1000021e 	bne	r2,zero,47dc <__sfp+0x38>
    47d4:	00045880 	call	4588 <__sinit.part.1>
    47d8:	81000017 	ldw	r4,0(r16)
    47dc:	2480b804 	addi	r18,r4,736
    47e0:	047fffc4 	movi	r17,-1
    47e4:	91000117 	ldw	r4,4(r18)
    47e8:	94000217 	ldw	r16,8(r18)
    47ec:	213fffc4 	addi	r4,r4,-1
    47f0:	20000a16 	blt	r4,zero,481c <__sfp+0x78>
    47f4:	8080030f 	ldh	r2,12(r16)
    47f8:	10000c26 	beq	r2,zero,482c <__sfp+0x88>
    47fc:	80c01d04 	addi	r3,r16,116
    4800:	00000206 	br	480c <__sfp+0x68>
    4804:	18bfe60f 	ldh	r2,-104(r3)
    4808:	10000826 	beq	r2,zero,482c <__sfp+0x88>
    480c:	213fffc4 	addi	r4,r4,-1
    4810:	1c3ffd04 	addi	r16,r3,-12
    4814:	18c01a04 	addi	r3,r3,104
    4818:	247ffa1e 	bne	r4,r17,4804 <__alt_data_end+0xfffbb424>
    481c:	90800017 	ldw	r2,0(r18)
    4820:	10001d26 	beq	r2,zero,4898 <__sfp+0xf4>
    4824:	1025883a 	mov	r18,r2
    4828:	003fee06 	br	47e4 <__alt_data_end+0xfffbb404>
    482c:	00bfffc4 	movi	r2,-1
    4830:	8080038d 	sth	r2,14(r16)
    4834:	00800044 	movi	r2,1
    4838:	8080030d 	sth	r2,12(r16)
    483c:	80001915 	stw	zero,100(r16)
    4840:	80000015 	stw	zero,0(r16)
    4844:	80000215 	stw	zero,8(r16)
    4848:	80000115 	stw	zero,4(r16)
    484c:	80000415 	stw	zero,16(r16)
    4850:	80000515 	stw	zero,20(r16)
    4854:	80000615 	stw	zero,24(r16)
    4858:	01800204 	movi	r6,8
    485c:	000b883a 	mov	r5,zero
    4860:	81001704 	addi	r4,r16,92
    4864:	00061d40 	call	61d4 <memset>
    4868:	8005883a 	mov	r2,r16
    486c:	80000c15 	stw	zero,48(r16)
    4870:	80000d15 	stw	zero,52(r16)
    4874:	80001115 	stw	zero,68(r16)
    4878:	80001215 	stw	zero,72(r16)
    487c:	dfc00417 	ldw	ra,16(sp)
    4880:	dcc00317 	ldw	r19,12(sp)
    4884:	dc800217 	ldw	r18,8(sp)
    4888:	dc400117 	ldw	r17,4(sp)
    488c:	dc000017 	ldw	r16,0(sp)
    4890:	dec00504 	addi	sp,sp,20
    4894:	f800283a 	ret
    4898:	01400104 	movi	r5,4
    489c:	9809883a 	mov	r4,r19
    48a0:	000472c0 	call	472c <__sfmoreglue>
    48a4:	90800015 	stw	r2,0(r18)
    48a8:	103fde1e 	bne	r2,zero,4824 <__alt_data_end+0xfffbb444>
    48ac:	00800304 	movi	r2,12
    48b0:	98800015 	stw	r2,0(r19)
    48b4:	0005883a 	mov	r2,zero
    48b8:	003ff006 	br	487c <__alt_data_end+0xfffbb49c>

000048bc <_cleanup>:
    48bc:	00800074 	movhi	r2,1
    48c0:	10860a04 	addi	r2,r2,6184
    48c4:	11000017 	ldw	r4,0(r2)
    48c8:	01400074 	movhi	r5,1
    48cc:	29652004 	addi	r5,r5,-27520
    48d0:	00052e41 	jmpi	52e4 <_fwalk_reent>

000048d4 <__sinit>:
    48d4:	20800e17 	ldw	r2,56(r4)
    48d8:	10000126 	beq	r2,zero,48e0 <__sinit+0xc>
    48dc:	f800283a 	ret
    48e0:	00045881 	jmpi	4588 <__sinit.part.1>

000048e4 <__sfp_lock_acquire>:
    48e4:	f800283a 	ret

000048e8 <__sfp_lock_release>:
    48e8:	f800283a 	ret

000048ec <__sinit_lock_acquire>:
    48ec:	f800283a 	ret

000048f0 <__sinit_lock_release>:
    48f0:	f800283a 	ret

000048f4 <__fp_lock_all>:
    48f4:	00800074 	movhi	r2,1
    48f8:	10860b04 	addi	r2,r2,6188
    48fc:	11000017 	ldw	r4,0(r2)
    4900:	01400034 	movhi	r5,0
    4904:	2951c904 	addi	r5,r5,18212
    4908:	00052201 	jmpi	5220 <_fwalk>

0000490c <__fp_unlock_all>:
    490c:	00800074 	movhi	r2,1
    4910:	10860b04 	addi	r2,r2,6188
    4914:	11000017 	ldw	r4,0(r2)
    4918:	01400034 	movhi	r5,0
    491c:	29515d04 	addi	r5,r5,17780
    4920:	00052201 	jmpi	5220 <_fwalk>

00004924 <_malloc_trim_r>:
    4924:	defffb04 	addi	sp,sp,-20
    4928:	dcc00315 	stw	r19,12(sp)
    492c:	04c00074 	movhi	r19,1
    4930:	dc800215 	stw	r18,8(sp)
    4934:	dc400115 	stw	r17,4(sp)
    4938:	dc000015 	stw	r16,0(sp)
    493c:	dfc00415 	stw	ra,16(sp)
    4940:	2821883a 	mov	r16,r5
    4944:	9cc08604 	addi	r19,r19,536
    4948:	2025883a 	mov	r18,r4
    494c:	000d8640 	call	d864 <__malloc_lock>
    4950:	98800217 	ldw	r2,8(r19)
    4954:	14400117 	ldw	r17,4(r2)
    4958:	00bfff04 	movi	r2,-4
    495c:	88a2703a 	and	r17,r17,r2
    4960:	8c21c83a 	sub	r16,r17,r16
    4964:	8403fbc4 	addi	r16,r16,4079
    4968:	8020d33a 	srli	r16,r16,12
    496c:	0083ffc4 	movi	r2,4095
    4970:	843fffc4 	addi	r16,r16,-1
    4974:	8020933a 	slli	r16,r16,12
    4978:	1400060e 	bge	r2,r16,4994 <_malloc_trim_r+0x70>
    497c:	000b883a 	mov	r5,zero
    4980:	9009883a 	mov	r4,r18
    4984:	000798c0 	call	798c <_sbrk_r>
    4988:	98c00217 	ldw	r3,8(r19)
    498c:	1c47883a 	add	r3,r3,r17
    4990:	10c00a26 	beq	r2,r3,49bc <_malloc_trim_r+0x98>
    4994:	9009883a 	mov	r4,r18
    4998:	000d8880 	call	d888 <__malloc_unlock>
    499c:	0005883a 	mov	r2,zero
    49a0:	dfc00417 	ldw	ra,16(sp)
    49a4:	dcc00317 	ldw	r19,12(sp)
    49a8:	dc800217 	ldw	r18,8(sp)
    49ac:	dc400117 	ldw	r17,4(sp)
    49b0:	dc000017 	ldw	r16,0(sp)
    49b4:	dec00504 	addi	sp,sp,20
    49b8:	f800283a 	ret
    49bc:	040bc83a 	sub	r5,zero,r16
    49c0:	9009883a 	mov	r4,r18
    49c4:	000798c0 	call	798c <_sbrk_r>
    49c8:	00ffffc4 	movi	r3,-1
    49cc:	10c00d26 	beq	r2,r3,4a04 <_malloc_trim_r+0xe0>
    49d0:	00c00074 	movhi	r3,1
    49d4:	18cce304 	addi	r3,r3,13196
    49d8:	18800017 	ldw	r2,0(r3)
    49dc:	99000217 	ldw	r4,8(r19)
    49e0:	8c23c83a 	sub	r17,r17,r16
    49e4:	8c400054 	ori	r17,r17,1
    49e8:	1421c83a 	sub	r16,r2,r16
    49ec:	24400115 	stw	r17,4(r4)
    49f0:	9009883a 	mov	r4,r18
    49f4:	1c000015 	stw	r16,0(r3)
    49f8:	000d8880 	call	d888 <__malloc_unlock>
    49fc:	00800044 	movi	r2,1
    4a00:	003fe706 	br	49a0 <__alt_data_end+0xfffbb5c0>
    4a04:	000b883a 	mov	r5,zero
    4a08:	9009883a 	mov	r4,r18
    4a0c:	000798c0 	call	798c <_sbrk_r>
    4a10:	99000217 	ldw	r4,8(r19)
    4a14:	014003c4 	movi	r5,15
    4a18:	1107c83a 	sub	r3,r2,r4
    4a1c:	28ffdd0e 	bge	r5,r3,4994 <__alt_data_end+0xfffbb5b4>
    4a20:	01400074 	movhi	r5,1
    4a24:	29460d04 	addi	r5,r5,6196
    4a28:	29400017 	ldw	r5,0(r5)
    4a2c:	18c00054 	ori	r3,r3,1
    4a30:	20c00115 	stw	r3,4(r4)
    4a34:	00c00074 	movhi	r3,1
    4a38:	1145c83a 	sub	r2,r2,r5
    4a3c:	18cce304 	addi	r3,r3,13196
    4a40:	18800015 	stw	r2,0(r3)
    4a44:	003fd306 	br	4994 <__alt_data_end+0xfffbb5b4>

00004a48 <_free_r>:
    4a48:	28004126 	beq	r5,zero,4b50 <_free_r+0x108>
    4a4c:	defffd04 	addi	sp,sp,-12
    4a50:	dc400115 	stw	r17,4(sp)
    4a54:	dc000015 	stw	r16,0(sp)
    4a58:	2023883a 	mov	r17,r4
    4a5c:	2821883a 	mov	r16,r5
    4a60:	dfc00215 	stw	ra,8(sp)
    4a64:	000d8640 	call	d864 <__malloc_lock>
    4a68:	81ffff17 	ldw	r7,-4(r16)
    4a6c:	00bfff84 	movi	r2,-2
    4a70:	01000074 	movhi	r4,1
    4a74:	81bffe04 	addi	r6,r16,-8
    4a78:	3884703a 	and	r2,r7,r2
    4a7c:	21008604 	addi	r4,r4,536
    4a80:	308b883a 	add	r5,r6,r2
    4a84:	2a400117 	ldw	r9,4(r5)
    4a88:	22000217 	ldw	r8,8(r4)
    4a8c:	00ffff04 	movi	r3,-4
    4a90:	48c6703a 	and	r3,r9,r3
    4a94:	2a005726 	beq	r5,r8,4bf4 <_free_r+0x1ac>
    4a98:	28c00115 	stw	r3,4(r5)
    4a9c:	39c0004c 	andi	r7,r7,1
    4aa0:	3800091e 	bne	r7,zero,4ac8 <_free_r+0x80>
    4aa4:	823ffe17 	ldw	r8,-8(r16)
    4aa8:	22400204 	addi	r9,r4,8
    4aac:	320dc83a 	sub	r6,r6,r8
    4ab0:	31c00217 	ldw	r7,8(r6)
    4ab4:	1205883a 	add	r2,r2,r8
    4ab8:	3a406526 	beq	r7,r9,4c50 <_free_r+0x208>
    4abc:	32000317 	ldw	r8,12(r6)
    4ac0:	3a000315 	stw	r8,12(r7)
    4ac4:	41c00215 	stw	r7,8(r8)
    4ac8:	28cf883a 	add	r7,r5,r3
    4acc:	39c00117 	ldw	r7,4(r7)
    4ad0:	39c0004c 	andi	r7,r7,1
    4ad4:	38003a26 	beq	r7,zero,4bc0 <_free_r+0x178>
    4ad8:	10c00054 	ori	r3,r2,1
    4adc:	30c00115 	stw	r3,4(r6)
    4ae0:	3087883a 	add	r3,r6,r2
    4ae4:	18800015 	stw	r2,0(r3)
    4ae8:	00c07fc4 	movi	r3,511
    4aec:	18801936 	bltu	r3,r2,4b54 <_free_r+0x10c>
    4af0:	1004d0fa 	srli	r2,r2,3
    4af4:	01c00044 	movi	r7,1
    4af8:	21400117 	ldw	r5,4(r4)
    4afc:	10c00044 	addi	r3,r2,1
    4b00:	18c7883a 	add	r3,r3,r3
    4b04:	1005d0ba 	srai	r2,r2,2
    4b08:	18c7883a 	add	r3,r3,r3
    4b0c:	18c7883a 	add	r3,r3,r3
    4b10:	1907883a 	add	r3,r3,r4
    4b14:	3884983a 	sll	r2,r7,r2
    4b18:	19c00017 	ldw	r7,0(r3)
    4b1c:	1a3ffe04 	addi	r8,r3,-8
    4b20:	1144b03a 	or	r2,r2,r5
    4b24:	32000315 	stw	r8,12(r6)
    4b28:	31c00215 	stw	r7,8(r6)
    4b2c:	20800115 	stw	r2,4(r4)
    4b30:	19800015 	stw	r6,0(r3)
    4b34:	39800315 	stw	r6,12(r7)
    4b38:	8809883a 	mov	r4,r17
    4b3c:	dfc00217 	ldw	ra,8(sp)
    4b40:	dc400117 	ldw	r17,4(sp)
    4b44:	dc000017 	ldw	r16,0(sp)
    4b48:	dec00304 	addi	sp,sp,12
    4b4c:	000d8881 	jmpi	d888 <__malloc_unlock>
    4b50:	f800283a 	ret
    4b54:	100ad27a 	srli	r5,r2,9
    4b58:	00c00104 	movi	r3,4
    4b5c:	19404a36 	bltu	r3,r5,4c88 <_free_r+0x240>
    4b60:	100ad1ba 	srli	r5,r2,6
    4b64:	28c00e44 	addi	r3,r5,57
    4b68:	18c7883a 	add	r3,r3,r3
    4b6c:	29400e04 	addi	r5,r5,56
    4b70:	18c7883a 	add	r3,r3,r3
    4b74:	18c7883a 	add	r3,r3,r3
    4b78:	1909883a 	add	r4,r3,r4
    4b7c:	20c00017 	ldw	r3,0(r4)
    4b80:	01c00074 	movhi	r7,1
    4b84:	213ffe04 	addi	r4,r4,-8
    4b88:	39c08604 	addi	r7,r7,536
    4b8c:	20c04426 	beq	r4,r3,4ca0 <_free_r+0x258>
    4b90:	01ffff04 	movi	r7,-4
    4b94:	19400117 	ldw	r5,4(r3)
    4b98:	29ca703a 	and	r5,r5,r7
    4b9c:	1140022e 	bgeu	r2,r5,4ba8 <_free_r+0x160>
    4ba0:	18c00217 	ldw	r3,8(r3)
    4ba4:	20fffb1e 	bne	r4,r3,4b94 <__alt_data_end+0xfffbb7b4>
    4ba8:	19000317 	ldw	r4,12(r3)
    4bac:	31000315 	stw	r4,12(r6)
    4bb0:	30c00215 	stw	r3,8(r6)
    4bb4:	21800215 	stw	r6,8(r4)
    4bb8:	19800315 	stw	r6,12(r3)
    4bbc:	003fde06 	br	4b38 <__alt_data_end+0xfffbb758>
    4bc0:	29c00217 	ldw	r7,8(r5)
    4bc4:	10c5883a 	add	r2,r2,r3
    4bc8:	00c00074 	movhi	r3,1
    4bcc:	18c08804 	addi	r3,r3,544
    4bd0:	38c03b26 	beq	r7,r3,4cc0 <_free_r+0x278>
    4bd4:	2a000317 	ldw	r8,12(r5)
    4bd8:	11400054 	ori	r5,r2,1
    4bdc:	3087883a 	add	r3,r6,r2
    4be0:	3a000315 	stw	r8,12(r7)
    4be4:	41c00215 	stw	r7,8(r8)
    4be8:	31400115 	stw	r5,4(r6)
    4bec:	18800015 	stw	r2,0(r3)
    4bf0:	003fbd06 	br	4ae8 <__alt_data_end+0xfffbb708>
    4bf4:	39c0004c 	andi	r7,r7,1
    4bf8:	10c5883a 	add	r2,r2,r3
    4bfc:	3800071e 	bne	r7,zero,4c1c <_free_r+0x1d4>
    4c00:	81fffe17 	ldw	r7,-8(r16)
    4c04:	31cdc83a 	sub	r6,r6,r7
    4c08:	30c00317 	ldw	r3,12(r6)
    4c0c:	31400217 	ldw	r5,8(r6)
    4c10:	11c5883a 	add	r2,r2,r7
    4c14:	28c00315 	stw	r3,12(r5)
    4c18:	19400215 	stw	r5,8(r3)
    4c1c:	10c00054 	ori	r3,r2,1
    4c20:	30c00115 	stw	r3,4(r6)
    4c24:	00c00074 	movhi	r3,1
    4c28:	18c60e04 	addi	r3,r3,6200
    4c2c:	18c00017 	ldw	r3,0(r3)
    4c30:	21800215 	stw	r6,8(r4)
    4c34:	10ffc036 	bltu	r2,r3,4b38 <__alt_data_end+0xfffbb758>
    4c38:	00800074 	movhi	r2,1
    4c3c:	108cda04 	addi	r2,r2,13160
    4c40:	11400017 	ldw	r5,0(r2)
    4c44:	8809883a 	mov	r4,r17
    4c48:	00049240 	call	4924 <_malloc_trim_r>
    4c4c:	003fba06 	br	4b38 <__alt_data_end+0xfffbb758>
    4c50:	28c9883a 	add	r4,r5,r3
    4c54:	21000117 	ldw	r4,4(r4)
    4c58:	2100004c 	andi	r4,r4,1
    4c5c:	2000391e 	bne	r4,zero,4d44 <_free_r+0x2fc>
    4c60:	29c00217 	ldw	r7,8(r5)
    4c64:	29000317 	ldw	r4,12(r5)
    4c68:	1885883a 	add	r2,r3,r2
    4c6c:	10c00054 	ori	r3,r2,1
    4c70:	39000315 	stw	r4,12(r7)
    4c74:	21c00215 	stw	r7,8(r4)
    4c78:	30c00115 	stw	r3,4(r6)
    4c7c:	308d883a 	add	r6,r6,r2
    4c80:	30800015 	stw	r2,0(r6)
    4c84:	003fac06 	br	4b38 <__alt_data_end+0xfffbb758>
    4c88:	00c00504 	movi	r3,20
    4c8c:	19401536 	bltu	r3,r5,4ce4 <_free_r+0x29c>
    4c90:	28c01704 	addi	r3,r5,92
    4c94:	18c7883a 	add	r3,r3,r3
    4c98:	294016c4 	addi	r5,r5,91
    4c9c:	003fb406 	br	4b70 <__alt_data_end+0xfffbb790>
    4ca0:	280bd0ba 	srai	r5,r5,2
    4ca4:	00c00044 	movi	r3,1
    4ca8:	38800117 	ldw	r2,4(r7)
    4cac:	194a983a 	sll	r5,r3,r5
    4cb0:	2007883a 	mov	r3,r4
    4cb4:	2884b03a 	or	r2,r5,r2
    4cb8:	38800115 	stw	r2,4(r7)
    4cbc:	003fbb06 	br	4bac <__alt_data_end+0xfffbb7cc>
    4cc0:	21800515 	stw	r6,20(r4)
    4cc4:	21800415 	stw	r6,16(r4)
    4cc8:	10c00054 	ori	r3,r2,1
    4ccc:	31c00315 	stw	r7,12(r6)
    4cd0:	31c00215 	stw	r7,8(r6)
    4cd4:	30c00115 	stw	r3,4(r6)
    4cd8:	308d883a 	add	r6,r6,r2
    4cdc:	30800015 	stw	r2,0(r6)
    4ce0:	003f9506 	br	4b38 <__alt_data_end+0xfffbb758>
    4ce4:	00c01504 	movi	r3,84
    4ce8:	19400536 	bltu	r3,r5,4d00 <_free_r+0x2b8>
    4cec:	100ad33a 	srli	r5,r2,12
    4cf0:	28c01bc4 	addi	r3,r5,111
    4cf4:	18c7883a 	add	r3,r3,r3
    4cf8:	29401b84 	addi	r5,r5,110
    4cfc:	003f9c06 	br	4b70 <__alt_data_end+0xfffbb790>
    4d00:	00c05504 	movi	r3,340
    4d04:	19400536 	bltu	r3,r5,4d1c <_free_r+0x2d4>
    4d08:	100ad3fa 	srli	r5,r2,15
    4d0c:	28c01e04 	addi	r3,r5,120
    4d10:	18c7883a 	add	r3,r3,r3
    4d14:	29401dc4 	addi	r5,r5,119
    4d18:	003f9506 	br	4b70 <__alt_data_end+0xfffbb790>
    4d1c:	00c15504 	movi	r3,1364
    4d20:	19400536 	bltu	r3,r5,4d38 <_free_r+0x2f0>
    4d24:	100ad4ba 	srli	r5,r2,18
    4d28:	28c01f44 	addi	r3,r5,125
    4d2c:	18c7883a 	add	r3,r3,r3
    4d30:	29401f04 	addi	r5,r5,124
    4d34:	003f8e06 	br	4b70 <__alt_data_end+0xfffbb790>
    4d38:	00c03f84 	movi	r3,254
    4d3c:	01401f84 	movi	r5,126
    4d40:	003f8b06 	br	4b70 <__alt_data_end+0xfffbb790>
    4d44:	10c00054 	ori	r3,r2,1
    4d48:	30c00115 	stw	r3,4(r6)
    4d4c:	308d883a 	add	r6,r6,r2
    4d50:	30800015 	stw	r2,0(r6)
    4d54:	003f7806 	br	4b38 <__alt_data_end+0xfffbb758>

00004d58 <__sfvwrite_r>:
    4d58:	30800217 	ldw	r2,8(r6)
    4d5c:	10006726 	beq	r2,zero,4efc <__sfvwrite_r+0x1a4>
    4d60:	28c0030b 	ldhu	r3,12(r5)
    4d64:	defff404 	addi	sp,sp,-48
    4d68:	dd400715 	stw	r21,28(sp)
    4d6c:	dd000615 	stw	r20,24(sp)
    4d70:	dc000215 	stw	r16,8(sp)
    4d74:	dfc00b15 	stw	ra,44(sp)
    4d78:	df000a15 	stw	fp,40(sp)
    4d7c:	ddc00915 	stw	r23,36(sp)
    4d80:	dd800815 	stw	r22,32(sp)
    4d84:	dcc00515 	stw	r19,20(sp)
    4d88:	dc800415 	stw	r18,16(sp)
    4d8c:	dc400315 	stw	r17,12(sp)
    4d90:	1880020c 	andi	r2,r3,8
    4d94:	2821883a 	mov	r16,r5
    4d98:	202b883a 	mov	r21,r4
    4d9c:	3029883a 	mov	r20,r6
    4da0:	10002726 	beq	r2,zero,4e40 <__sfvwrite_r+0xe8>
    4da4:	28800417 	ldw	r2,16(r5)
    4da8:	10002526 	beq	r2,zero,4e40 <__sfvwrite_r+0xe8>
    4dac:	1880008c 	andi	r2,r3,2
    4db0:	a4400017 	ldw	r17,0(r20)
    4db4:	10002a26 	beq	r2,zero,4e60 <__sfvwrite_r+0x108>
    4db8:	05a00034 	movhi	r22,32768
    4dbc:	0027883a 	mov	r19,zero
    4dc0:	0025883a 	mov	r18,zero
    4dc4:	b5bf0004 	addi	r22,r22,-1024
    4dc8:	980d883a 	mov	r6,r19
    4dcc:	a809883a 	mov	r4,r21
    4dd0:	90004626 	beq	r18,zero,4eec <__sfvwrite_r+0x194>
    4dd4:	900f883a 	mov	r7,r18
    4dd8:	b480022e 	bgeu	r22,r18,4de4 <__sfvwrite_r+0x8c>
    4ddc:	01e00034 	movhi	r7,32768
    4de0:	39ff0004 	addi	r7,r7,-1024
    4de4:	80800917 	ldw	r2,36(r16)
    4de8:	81400717 	ldw	r5,28(r16)
    4dec:	103ee83a 	callr	r2
    4df0:	00805a0e 	bge	zero,r2,4f5c <__sfvwrite_r+0x204>
    4df4:	a0c00217 	ldw	r3,8(r20)
    4df8:	98a7883a 	add	r19,r19,r2
    4dfc:	90a5c83a 	sub	r18,r18,r2
    4e00:	1885c83a 	sub	r2,r3,r2
    4e04:	a0800215 	stw	r2,8(r20)
    4e08:	103fef1e 	bne	r2,zero,4dc8 <__alt_data_end+0xfffbb9e8>
    4e0c:	0005883a 	mov	r2,zero
    4e10:	dfc00b17 	ldw	ra,44(sp)
    4e14:	df000a17 	ldw	fp,40(sp)
    4e18:	ddc00917 	ldw	r23,36(sp)
    4e1c:	dd800817 	ldw	r22,32(sp)
    4e20:	dd400717 	ldw	r21,28(sp)
    4e24:	dd000617 	ldw	r20,24(sp)
    4e28:	dcc00517 	ldw	r19,20(sp)
    4e2c:	dc800417 	ldw	r18,16(sp)
    4e30:	dc400317 	ldw	r17,12(sp)
    4e34:	dc000217 	ldw	r16,8(sp)
    4e38:	dec00c04 	addi	sp,sp,48
    4e3c:	f800283a 	ret
    4e40:	800b883a 	mov	r5,r16
    4e44:	a809883a 	mov	r4,r21
    4e48:	00028c80 	call	28c8 <__swsetup_r>
    4e4c:	1000ee1e 	bne	r2,zero,5208 <__sfvwrite_r+0x4b0>
    4e50:	80c0030b 	ldhu	r3,12(r16)
    4e54:	a4400017 	ldw	r17,0(r20)
    4e58:	1880008c 	andi	r2,r3,2
    4e5c:	103fd61e 	bne	r2,zero,4db8 <__alt_data_end+0xfffbb9d8>
    4e60:	1880004c 	andi	r2,r3,1
    4e64:	1000421e 	bne	r2,zero,4f70 <__sfvwrite_r+0x218>
    4e68:	0039883a 	mov	fp,zero
    4e6c:	0025883a 	mov	r18,zero
    4e70:	90001a26 	beq	r18,zero,4edc <__sfvwrite_r+0x184>
    4e74:	1880800c 	andi	r2,r3,512
    4e78:	84c00217 	ldw	r19,8(r16)
    4e7c:	10002126 	beq	r2,zero,4f04 <__sfvwrite_r+0x1ac>
    4e80:	982f883a 	mov	r23,r19
    4e84:	94c09636 	bltu	r18,r19,50e0 <__sfvwrite_r+0x388>
    4e88:	1881200c 	andi	r2,r3,1152
    4e8c:	1000a11e 	bne	r2,zero,5114 <__sfvwrite_r+0x3bc>
    4e90:	81000017 	ldw	r4,0(r16)
    4e94:	b80d883a 	mov	r6,r23
    4e98:	e00b883a 	mov	r5,fp
    4e9c:	00060780 	call	6078 <memmove>
    4ea0:	80c00217 	ldw	r3,8(r16)
    4ea4:	81000017 	ldw	r4,0(r16)
    4ea8:	9005883a 	mov	r2,r18
    4eac:	1ce7c83a 	sub	r19,r3,r19
    4eb0:	25cf883a 	add	r7,r4,r23
    4eb4:	84c00215 	stw	r19,8(r16)
    4eb8:	81c00015 	stw	r7,0(r16)
    4ebc:	a0c00217 	ldw	r3,8(r20)
    4ec0:	e0b9883a 	add	fp,fp,r2
    4ec4:	90a5c83a 	sub	r18,r18,r2
    4ec8:	18a7c83a 	sub	r19,r3,r2
    4ecc:	a4c00215 	stw	r19,8(r20)
    4ed0:	983fce26 	beq	r19,zero,4e0c <__alt_data_end+0xfffbba2c>
    4ed4:	80c0030b 	ldhu	r3,12(r16)
    4ed8:	903fe61e 	bne	r18,zero,4e74 <__alt_data_end+0xfffbba94>
    4edc:	8f000017 	ldw	fp,0(r17)
    4ee0:	8c800117 	ldw	r18,4(r17)
    4ee4:	8c400204 	addi	r17,r17,8
    4ee8:	003fe106 	br	4e70 <__alt_data_end+0xfffbba90>
    4eec:	8cc00017 	ldw	r19,0(r17)
    4ef0:	8c800117 	ldw	r18,4(r17)
    4ef4:	8c400204 	addi	r17,r17,8
    4ef8:	003fb306 	br	4dc8 <__alt_data_end+0xfffbb9e8>
    4efc:	0005883a 	mov	r2,zero
    4f00:	f800283a 	ret
    4f04:	81000017 	ldw	r4,0(r16)
    4f08:	80800417 	ldw	r2,16(r16)
    4f0c:	11005a36 	bltu	r2,r4,5078 <__sfvwrite_r+0x320>
    4f10:	85c00517 	ldw	r23,20(r16)
    4f14:	95c05836 	bltu	r18,r23,5078 <__sfvwrite_r+0x320>
    4f18:	00a00034 	movhi	r2,32768
    4f1c:	10bfffc4 	addi	r2,r2,-1
    4f20:	9009883a 	mov	r4,r18
    4f24:	1480012e 	bgeu	r2,r18,4f2c <__sfvwrite_r+0x1d4>
    4f28:	1009883a 	mov	r4,r2
    4f2c:	b80b883a 	mov	r5,r23
    4f30:	000a7fc0 	call	a7fc <__divsi3>
    4f34:	b80b883a 	mov	r5,r23
    4f38:	1009883a 	mov	r4,r2
    4f3c:	000a9b00 	call	a9b0 <__mulsi3>
    4f40:	81400717 	ldw	r5,28(r16)
    4f44:	80c00917 	ldw	r3,36(r16)
    4f48:	100f883a 	mov	r7,r2
    4f4c:	e00d883a 	mov	r6,fp
    4f50:	a809883a 	mov	r4,r21
    4f54:	183ee83a 	callr	r3
    4f58:	00bfd816 	blt	zero,r2,4ebc <__alt_data_end+0xfffbbadc>
    4f5c:	8080030b 	ldhu	r2,12(r16)
    4f60:	10801014 	ori	r2,r2,64
    4f64:	8080030d 	sth	r2,12(r16)
    4f68:	00bfffc4 	movi	r2,-1
    4f6c:	003fa806 	br	4e10 <__alt_data_end+0xfffbba30>
    4f70:	0027883a 	mov	r19,zero
    4f74:	0011883a 	mov	r8,zero
    4f78:	0039883a 	mov	fp,zero
    4f7c:	0025883a 	mov	r18,zero
    4f80:	90001f26 	beq	r18,zero,5000 <__sfvwrite_r+0x2a8>
    4f84:	40005a26 	beq	r8,zero,50f0 <__sfvwrite_r+0x398>
    4f88:	982d883a 	mov	r22,r19
    4f8c:	94c0012e 	bgeu	r18,r19,4f94 <__sfvwrite_r+0x23c>
    4f90:	902d883a 	mov	r22,r18
    4f94:	81000017 	ldw	r4,0(r16)
    4f98:	80800417 	ldw	r2,16(r16)
    4f9c:	b02f883a 	mov	r23,r22
    4fa0:	81c00517 	ldw	r7,20(r16)
    4fa4:	1100032e 	bgeu	r2,r4,4fb4 <__sfvwrite_r+0x25c>
    4fa8:	80c00217 	ldw	r3,8(r16)
    4fac:	38c7883a 	add	r3,r7,r3
    4fb0:	1d801816 	blt	r3,r22,5014 <__sfvwrite_r+0x2bc>
    4fb4:	b1c03e16 	blt	r22,r7,50b0 <__sfvwrite_r+0x358>
    4fb8:	80800917 	ldw	r2,36(r16)
    4fbc:	81400717 	ldw	r5,28(r16)
    4fc0:	e00d883a 	mov	r6,fp
    4fc4:	da000115 	stw	r8,4(sp)
    4fc8:	a809883a 	mov	r4,r21
    4fcc:	103ee83a 	callr	r2
    4fd0:	102f883a 	mov	r23,r2
    4fd4:	da000117 	ldw	r8,4(sp)
    4fd8:	00bfe00e 	bge	zero,r2,4f5c <__alt_data_end+0xfffbbb7c>
    4fdc:	9de7c83a 	sub	r19,r19,r23
    4fe0:	98001f26 	beq	r19,zero,5060 <__sfvwrite_r+0x308>
    4fe4:	a0800217 	ldw	r2,8(r20)
    4fe8:	e5f9883a 	add	fp,fp,r23
    4fec:	95e5c83a 	sub	r18,r18,r23
    4ff0:	15efc83a 	sub	r23,r2,r23
    4ff4:	a5c00215 	stw	r23,8(r20)
    4ff8:	b83f8426 	beq	r23,zero,4e0c <__alt_data_end+0xfffbba2c>
    4ffc:	903fe11e 	bne	r18,zero,4f84 <__alt_data_end+0xfffbbba4>
    5000:	8f000017 	ldw	fp,0(r17)
    5004:	8c800117 	ldw	r18,4(r17)
    5008:	0011883a 	mov	r8,zero
    500c:	8c400204 	addi	r17,r17,8
    5010:	003fdb06 	br	4f80 <__alt_data_end+0xfffbbba0>
    5014:	180d883a 	mov	r6,r3
    5018:	e00b883a 	mov	r5,fp
    501c:	da000115 	stw	r8,4(sp)
    5020:	d8c00015 	stw	r3,0(sp)
    5024:	00060780 	call	6078 <memmove>
    5028:	d8c00017 	ldw	r3,0(sp)
    502c:	80800017 	ldw	r2,0(r16)
    5030:	800b883a 	mov	r5,r16
    5034:	a809883a 	mov	r4,r21
    5038:	10c5883a 	add	r2,r2,r3
    503c:	80800015 	stw	r2,0(r16)
    5040:	d8c00015 	stw	r3,0(sp)
    5044:	00044e80 	call	44e8 <_fflush_r>
    5048:	d8c00017 	ldw	r3,0(sp)
    504c:	da000117 	ldw	r8,4(sp)
    5050:	103fc21e 	bne	r2,zero,4f5c <__alt_data_end+0xfffbbb7c>
    5054:	182f883a 	mov	r23,r3
    5058:	9de7c83a 	sub	r19,r19,r23
    505c:	983fe11e 	bne	r19,zero,4fe4 <__alt_data_end+0xfffbbc04>
    5060:	800b883a 	mov	r5,r16
    5064:	a809883a 	mov	r4,r21
    5068:	00044e80 	call	44e8 <_fflush_r>
    506c:	103fbb1e 	bne	r2,zero,4f5c <__alt_data_end+0xfffbbb7c>
    5070:	0011883a 	mov	r8,zero
    5074:	003fdb06 	br	4fe4 <__alt_data_end+0xfffbbc04>
    5078:	94c0012e 	bgeu	r18,r19,5080 <__sfvwrite_r+0x328>
    507c:	9027883a 	mov	r19,r18
    5080:	980d883a 	mov	r6,r19
    5084:	e00b883a 	mov	r5,fp
    5088:	00060780 	call	6078 <memmove>
    508c:	80800217 	ldw	r2,8(r16)
    5090:	80c00017 	ldw	r3,0(r16)
    5094:	14c5c83a 	sub	r2,r2,r19
    5098:	1cc7883a 	add	r3,r3,r19
    509c:	80800215 	stw	r2,8(r16)
    50a0:	80c00015 	stw	r3,0(r16)
    50a4:	10004326 	beq	r2,zero,51b4 <__sfvwrite_r+0x45c>
    50a8:	9805883a 	mov	r2,r19
    50ac:	003f8306 	br	4ebc <__alt_data_end+0xfffbbadc>
    50b0:	b00d883a 	mov	r6,r22
    50b4:	e00b883a 	mov	r5,fp
    50b8:	da000115 	stw	r8,4(sp)
    50bc:	00060780 	call	6078 <memmove>
    50c0:	80800217 	ldw	r2,8(r16)
    50c4:	80c00017 	ldw	r3,0(r16)
    50c8:	da000117 	ldw	r8,4(sp)
    50cc:	1585c83a 	sub	r2,r2,r22
    50d0:	1dad883a 	add	r22,r3,r22
    50d4:	80800215 	stw	r2,8(r16)
    50d8:	85800015 	stw	r22,0(r16)
    50dc:	003fbf06 	br	4fdc <__alt_data_end+0xfffbbbfc>
    50e0:	81000017 	ldw	r4,0(r16)
    50e4:	9027883a 	mov	r19,r18
    50e8:	902f883a 	mov	r23,r18
    50ec:	003f6906 	br	4e94 <__alt_data_end+0xfffbbab4>
    50f0:	900d883a 	mov	r6,r18
    50f4:	01400284 	movi	r5,10
    50f8:	e009883a 	mov	r4,fp
    50fc:	0005e4c0 	call	5e4c <memchr>
    5100:	10003e26 	beq	r2,zero,51fc <__sfvwrite_r+0x4a4>
    5104:	10800044 	addi	r2,r2,1
    5108:	1727c83a 	sub	r19,r2,fp
    510c:	02000044 	movi	r8,1
    5110:	003f9d06 	br	4f88 <__alt_data_end+0xfffbbba8>
    5114:	80800517 	ldw	r2,20(r16)
    5118:	81400417 	ldw	r5,16(r16)
    511c:	81c00017 	ldw	r7,0(r16)
    5120:	10a7883a 	add	r19,r2,r2
    5124:	9885883a 	add	r2,r19,r2
    5128:	1026d7fa 	srli	r19,r2,31
    512c:	396dc83a 	sub	r22,r7,r5
    5130:	b1000044 	addi	r4,r22,1
    5134:	9885883a 	add	r2,r19,r2
    5138:	1027d07a 	srai	r19,r2,1
    513c:	2485883a 	add	r2,r4,r18
    5140:	980d883a 	mov	r6,r19
    5144:	9880022e 	bgeu	r19,r2,5150 <__sfvwrite_r+0x3f8>
    5148:	1027883a 	mov	r19,r2
    514c:	100d883a 	mov	r6,r2
    5150:	18c1000c 	andi	r3,r3,1024
    5154:	18001c26 	beq	r3,zero,51c8 <__sfvwrite_r+0x470>
    5158:	300b883a 	mov	r5,r6
    515c:	a809883a 	mov	r4,r21
    5160:	00056400 	call	5640 <_malloc_r>
    5164:	102f883a 	mov	r23,r2
    5168:	10002926 	beq	r2,zero,5210 <__sfvwrite_r+0x4b8>
    516c:	81400417 	ldw	r5,16(r16)
    5170:	b00d883a 	mov	r6,r22
    5174:	1009883a 	mov	r4,r2
    5178:	0005f300 	call	5f30 <memcpy>
    517c:	8080030b 	ldhu	r2,12(r16)
    5180:	00fedfc4 	movi	r3,-1153
    5184:	10c4703a 	and	r2,r2,r3
    5188:	10802014 	ori	r2,r2,128
    518c:	8080030d 	sth	r2,12(r16)
    5190:	bd89883a 	add	r4,r23,r22
    5194:	9d8fc83a 	sub	r7,r19,r22
    5198:	85c00415 	stw	r23,16(r16)
    519c:	84c00515 	stw	r19,20(r16)
    51a0:	81000015 	stw	r4,0(r16)
    51a4:	9027883a 	mov	r19,r18
    51a8:	81c00215 	stw	r7,8(r16)
    51ac:	902f883a 	mov	r23,r18
    51b0:	003f3806 	br	4e94 <__alt_data_end+0xfffbbab4>
    51b4:	800b883a 	mov	r5,r16
    51b8:	a809883a 	mov	r4,r21
    51bc:	00044e80 	call	44e8 <_fflush_r>
    51c0:	103fb926 	beq	r2,zero,50a8 <__alt_data_end+0xfffbbcc8>
    51c4:	003f6506 	br	4f5c <__alt_data_end+0xfffbbb7c>
    51c8:	a809883a 	mov	r4,r21
    51cc:	00073b40 	call	73b4 <_realloc_r>
    51d0:	102f883a 	mov	r23,r2
    51d4:	103fee1e 	bne	r2,zero,5190 <__alt_data_end+0xfffbbdb0>
    51d8:	81400417 	ldw	r5,16(r16)
    51dc:	a809883a 	mov	r4,r21
    51e0:	0004a480 	call	4a48 <_free_r>
    51e4:	8080030b 	ldhu	r2,12(r16)
    51e8:	00ffdfc4 	movi	r3,-129
    51ec:	1884703a 	and	r2,r3,r2
    51f0:	00c00304 	movi	r3,12
    51f4:	a8c00015 	stw	r3,0(r21)
    51f8:	003f5906 	br	4f60 <__alt_data_end+0xfffbbb80>
    51fc:	94c00044 	addi	r19,r18,1
    5200:	02000044 	movi	r8,1
    5204:	003f6006 	br	4f88 <__alt_data_end+0xfffbbba8>
    5208:	00bfffc4 	movi	r2,-1
    520c:	003f0006 	br	4e10 <__alt_data_end+0xfffbba30>
    5210:	00800304 	movi	r2,12
    5214:	a8800015 	stw	r2,0(r21)
    5218:	8080030b 	ldhu	r2,12(r16)
    521c:	003f5006 	br	4f60 <__alt_data_end+0xfffbbb80>

00005220 <_fwalk>:
    5220:	defff704 	addi	sp,sp,-36
    5224:	dd000415 	stw	r20,16(sp)
    5228:	dfc00815 	stw	ra,32(sp)
    522c:	ddc00715 	stw	r23,28(sp)
    5230:	dd800615 	stw	r22,24(sp)
    5234:	dd400515 	stw	r21,20(sp)
    5238:	dcc00315 	stw	r19,12(sp)
    523c:	dc800215 	stw	r18,8(sp)
    5240:	dc400115 	stw	r17,4(sp)
    5244:	dc000015 	stw	r16,0(sp)
    5248:	2500b804 	addi	r20,r4,736
    524c:	a0002326 	beq	r20,zero,52dc <_fwalk+0xbc>
    5250:	282b883a 	mov	r21,r5
    5254:	002f883a 	mov	r23,zero
    5258:	05800044 	movi	r22,1
    525c:	04ffffc4 	movi	r19,-1
    5260:	a4400117 	ldw	r17,4(r20)
    5264:	a4800217 	ldw	r18,8(r20)
    5268:	8c7fffc4 	addi	r17,r17,-1
    526c:	88000d16 	blt	r17,zero,52a4 <_fwalk+0x84>
    5270:	94000304 	addi	r16,r18,12
    5274:	94800384 	addi	r18,r18,14
    5278:	8080000b 	ldhu	r2,0(r16)
    527c:	8c7fffc4 	addi	r17,r17,-1
    5280:	813ffd04 	addi	r4,r16,-12
    5284:	b080042e 	bgeu	r22,r2,5298 <_fwalk+0x78>
    5288:	9080000f 	ldh	r2,0(r18)
    528c:	14c00226 	beq	r2,r19,5298 <_fwalk+0x78>
    5290:	a83ee83a 	callr	r21
    5294:	b8aeb03a 	or	r23,r23,r2
    5298:	84001a04 	addi	r16,r16,104
    529c:	94801a04 	addi	r18,r18,104
    52a0:	8cfff51e 	bne	r17,r19,5278 <__alt_data_end+0xfffbbe98>
    52a4:	a5000017 	ldw	r20,0(r20)
    52a8:	a03fed1e 	bne	r20,zero,5260 <__alt_data_end+0xfffbbe80>
    52ac:	b805883a 	mov	r2,r23
    52b0:	dfc00817 	ldw	ra,32(sp)
    52b4:	ddc00717 	ldw	r23,28(sp)
    52b8:	dd800617 	ldw	r22,24(sp)
    52bc:	dd400517 	ldw	r21,20(sp)
    52c0:	dd000417 	ldw	r20,16(sp)
    52c4:	dcc00317 	ldw	r19,12(sp)
    52c8:	dc800217 	ldw	r18,8(sp)
    52cc:	dc400117 	ldw	r17,4(sp)
    52d0:	dc000017 	ldw	r16,0(sp)
    52d4:	dec00904 	addi	sp,sp,36
    52d8:	f800283a 	ret
    52dc:	002f883a 	mov	r23,zero
    52e0:	003ff206 	br	52ac <__alt_data_end+0xfffbbecc>

000052e4 <_fwalk_reent>:
    52e4:	defff704 	addi	sp,sp,-36
    52e8:	dd000415 	stw	r20,16(sp)
    52ec:	dfc00815 	stw	ra,32(sp)
    52f0:	ddc00715 	stw	r23,28(sp)
    52f4:	dd800615 	stw	r22,24(sp)
    52f8:	dd400515 	stw	r21,20(sp)
    52fc:	dcc00315 	stw	r19,12(sp)
    5300:	dc800215 	stw	r18,8(sp)
    5304:	dc400115 	stw	r17,4(sp)
    5308:	dc000015 	stw	r16,0(sp)
    530c:	2500b804 	addi	r20,r4,736
    5310:	a0002326 	beq	r20,zero,53a0 <_fwalk_reent+0xbc>
    5314:	282b883a 	mov	r21,r5
    5318:	2027883a 	mov	r19,r4
    531c:	002f883a 	mov	r23,zero
    5320:	05800044 	movi	r22,1
    5324:	04bfffc4 	movi	r18,-1
    5328:	a4400117 	ldw	r17,4(r20)
    532c:	a4000217 	ldw	r16,8(r20)
    5330:	8c7fffc4 	addi	r17,r17,-1
    5334:	88000c16 	blt	r17,zero,5368 <_fwalk_reent+0x84>
    5338:	84000304 	addi	r16,r16,12
    533c:	8080000b 	ldhu	r2,0(r16)
    5340:	8c7fffc4 	addi	r17,r17,-1
    5344:	817ffd04 	addi	r5,r16,-12
    5348:	b080052e 	bgeu	r22,r2,5360 <_fwalk_reent+0x7c>
    534c:	8080008f 	ldh	r2,2(r16)
    5350:	9809883a 	mov	r4,r19
    5354:	14800226 	beq	r2,r18,5360 <_fwalk_reent+0x7c>
    5358:	a83ee83a 	callr	r21
    535c:	b8aeb03a 	or	r23,r23,r2
    5360:	84001a04 	addi	r16,r16,104
    5364:	8cbff51e 	bne	r17,r18,533c <__alt_data_end+0xfffbbf5c>
    5368:	a5000017 	ldw	r20,0(r20)
    536c:	a03fee1e 	bne	r20,zero,5328 <__alt_data_end+0xfffbbf48>
    5370:	b805883a 	mov	r2,r23
    5374:	dfc00817 	ldw	ra,32(sp)
    5378:	ddc00717 	ldw	r23,28(sp)
    537c:	dd800617 	ldw	r22,24(sp)
    5380:	dd400517 	ldw	r21,20(sp)
    5384:	dd000417 	ldw	r20,16(sp)
    5388:	dcc00317 	ldw	r19,12(sp)
    538c:	dc800217 	ldw	r18,8(sp)
    5390:	dc400117 	ldw	r17,4(sp)
    5394:	dc000017 	ldw	r16,0(sp)
    5398:	dec00904 	addi	sp,sp,36
    539c:	f800283a 	ret
    53a0:	002f883a 	mov	r23,zero
    53a4:	003ff206 	br	5370 <__alt_data_end+0xfffbbf90>

000053a8 <_setlocale_r>:
    53a8:	30001b26 	beq	r6,zero,5418 <_setlocale_r+0x70>
    53ac:	01400074 	movhi	r5,1
    53b0:	defffe04 	addi	sp,sp,-8
    53b4:	297ebe04 	addi	r5,r5,-1288
    53b8:	3009883a 	mov	r4,r6
    53bc:	dc000015 	stw	r16,0(sp)
    53c0:	dfc00115 	stw	ra,4(sp)
    53c4:	3021883a 	mov	r16,r6
    53c8:	0007b1c0 	call	7b1c <strcmp>
    53cc:	1000061e 	bne	r2,zero,53e8 <_setlocale_r+0x40>
    53d0:	00800074 	movhi	r2,1
    53d4:	10bebd04 	addi	r2,r2,-1292
    53d8:	dfc00117 	ldw	ra,4(sp)
    53dc:	dc000017 	ldw	r16,0(sp)
    53e0:	dec00204 	addi	sp,sp,8
    53e4:	f800283a 	ret
    53e8:	01400074 	movhi	r5,1
    53ec:	297ebd04 	addi	r5,r5,-1292
    53f0:	8009883a 	mov	r4,r16
    53f4:	0007b1c0 	call	7b1c <strcmp>
    53f8:	103ff526 	beq	r2,zero,53d0 <__alt_data_end+0xfffbbff0>
    53fc:	01400074 	movhi	r5,1
    5400:	297ea804 	addi	r5,r5,-1376
    5404:	8009883a 	mov	r4,r16
    5408:	0007b1c0 	call	7b1c <strcmp>
    540c:	103ff026 	beq	r2,zero,53d0 <__alt_data_end+0xfffbbff0>
    5410:	0005883a 	mov	r2,zero
    5414:	003ff006 	br	53d8 <__alt_data_end+0xfffbbff8>
    5418:	00800074 	movhi	r2,1
    541c:	10bebd04 	addi	r2,r2,-1292
    5420:	f800283a 	ret

00005424 <__locale_charset>:
    5424:	00800074 	movhi	r2,1
    5428:	10807004 	addi	r2,r2,448
    542c:	f800283a 	ret

00005430 <__locale_mb_cur_max>:
    5430:	00800074 	movhi	r2,1
    5434:	10860c04 	addi	r2,r2,6192
    5438:	10800017 	ldw	r2,0(r2)
    543c:	f800283a 	ret

00005440 <__locale_msgcharset>:
    5440:	00800074 	movhi	r2,1
    5444:	10806804 	addi	r2,r2,416
    5448:	f800283a 	ret

0000544c <__locale_cjk_lang>:
    544c:	0005883a 	mov	r2,zero
    5450:	f800283a 	ret

00005454 <_localeconv_r>:
    5454:	00800074 	movhi	r2,1
    5458:	10807804 	addi	r2,r2,480
    545c:	f800283a 	ret

00005460 <setlocale>:
    5460:	00800074 	movhi	r2,1
    5464:	10860b04 	addi	r2,r2,6188
    5468:	280d883a 	mov	r6,r5
    546c:	200b883a 	mov	r5,r4
    5470:	11000017 	ldw	r4,0(r2)
    5474:	00053a81 	jmpi	53a8 <_setlocale_r>

00005478 <localeconv>:
    5478:	00800074 	movhi	r2,1
    547c:	10807804 	addi	r2,r2,480
    5480:	f800283a 	ret

00005484 <__smakebuf_r>:
    5484:	2880030b 	ldhu	r2,12(r5)
    5488:	10c0008c 	andi	r3,r2,2
    548c:	1800411e 	bne	r3,zero,5594 <__smakebuf_r+0x110>
    5490:	deffec04 	addi	sp,sp,-80
    5494:	dc000f15 	stw	r16,60(sp)
    5498:	2821883a 	mov	r16,r5
    549c:	2940038f 	ldh	r5,14(r5)
    54a0:	dc401015 	stw	r17,64(sp)
    54a4:	dfc01315 	stw	ra,76(sp)
    54a8:	dcc01215 	stw	r19,72(sp)
    54ac:	dc801115 	stw	r18,68(sp)
    54b0:	2023883a 	mov	r17,r4
    54b4:	28001c16 	blt	r5,zero,5528 <__smakebuf_r+0xa4>
    54b8:	d80d883a 	mov	r6,sp
    54bc:	000978c0 	call	978c <_fstat_r>
    54c0:	10001816 	blt	r2,zero,5524 <__smakebuf_r+0xa0>
    54c4:	d8800117 	ldw	r2,4(sp)
    54c8:	00e00014 	movui	r3,32768
    54cc:	10bc000c 	andi	r2,r2,61440
    54d0:	14c80020 	cmpeqi	r19,r2,8192
    54d4:	10c03726 	beq	r2,r3,55b4 <__smakebuf_r+0x130>
    54d8:	80c0030b 	ldhu	r3,12(r16)
    54dc:	18c20014 	ori	r3,r3,2048
    54e0:	80c0030d 	sth	r3,12(r16)
    54e4:	00c80004 	movi	r3,8192
    54e8:	10c0521e 	bne	r2,r3,5634 <__smakebuf_r+0x1b0>
    54ec:	8140038f 	ldh	r5,14(r16)
    54f0:	8809883a 	mov	r4,r17
    54f4:	00097e80 	call	97e8 <_isatty_r>
    54f8:	10004c26 	beq	r2,zero,562c <__smakebuf_r+0x1a8>
    54fc:	8080030b 	ldhu	r2,12(r16)
    5500:	80c010c4 	addi	r3,r16,67
    5504:	80c00015 	stw	r3,0(r16)
    5508:	10800054 	ori	r2,r2,1
    550c:	8080030d 	sth	r2,12(r16)
    5510:	00800044 	movi	r2,1
    5514:	80c00415 	stw	r3,16(r16)
    5518:	80800515 	stw	r2,20(r16)
    551c:	04810004 	movi	r18,1024
    5520:	00000706 	br	5540 <__smakebuf_r+0xbc>
    5524:	8080030b 	ldhu	r2,12(r16)
    5528:	10c0200c 	andi	r3,r2,128
    552c:	18001f1e 	bne	r3,zero,55ac <__smakebuf_r+0x128>
    5530:	04810004 	movi	r18,1024
    5534:	10820014 	ori	r2,r2,2048
    5538:	8080030d 	sth	r2,12(r16)
    553c:	0027883a 	mov	r19,zero
    5540:	900b883a 	mov	r5,r18
    5544:	8809883a 	mov	r4,r17
    5548:	00056400 	call	5640 <_malloc_r>
    554c:	10002c26 	beq	r2,zero,5600 <__smakebuf_r+0x17c>
    5550:	80c0030b 	ldhu	r3,12(r16)
    5554:	01000034 	movhi	r4,0
    5558:	21115f04 	addi	r4,r4,17788
    555c:	89000f15 	stw	r4,60(r17)
    5560:	18c02014 	ori	r3,r3,128
    5564:	80c0030d 	sth	r3,12(r16)
    5568:	80800015 	stw	r2,0(r16)
    556c:	80800415 	stw	r2,16(r16)
    5570:	84800515 	stw	r18,20(r16)
    5574:	98001a1e 	bne	r19,zero,55e0 <__smakebuf_r+0x15c>
    5578:	dfc01317 	ldw	ra,76(sp)
    557c:	dcc01217 	ldw	r19,72(sp)
    5580:	dc801117 	ldw	r18,68(sp)
    5584:	dc401017 	ldw	r17,64(sp)
    5588:	dc000f17 	ldw	r16,60(sp)
    558c:	dec01404 	addi	sp,sp,80
    5590:	f800283a 	ret
    5594:	288010c4 	addi	r2,r5,67
    5598:	28800015 	stw	r2,0(r5)
    559c:	28800415 	stw	r2,16(r5)
    55a0:	00800044 	movi	r2,1
    55a4:	28800515 	stw	r2,20(r5)
    55a8:	f800283a 	ret
    55ac:	04801004 	movi	r18,64
    55b0:	003fe006 	br	5534 <__alt_data_end+0xfffbc154>
    55b4:	81000a17 	ldw	r4,40(r16)
    55b8:	00c00034 	movhi	r3,0
    55bc:	18deae04 	addi	r3,r3,31416
    55c0:	20ffc51e 	bne	r4,r3,54d8 <__alt_data_end+0xfffbc0f8>
    55c4:	8080030b 	ldhu	r2,12(r16)
    55c8:	04810004 	movi	r18,1024
    55cc:	84801315 	stw	r18,76(r16)
    55d0:	1484b03a 	or	r2,r2,r18
    55d4:	8080030d 	sth	r2,12(r16)
    55d8:	0027883a 	mov	r19,zero
    55dc:	003fd806 	br	5540 <__alt_data_end+0xfffbc160>
    55e0:	8140038f 	ldh	r5,14(r16)
    55e4:	8809883a 	mov	r4,r17
    55e8:	00097e80 	call	97e8 <_isatty_r>
    55ec:	103fe226 	beq	r2,zero,5578 <__alt_data_end+0xfffbc198>
    55f0:	8080030b 	ldhu	r2,12(r16)
    55f4:	10800054 	ori	r2,r2,1
    55f8:	8080030d 	sth	r2,12(r16)
    55fc:	003fde06 	br	5578 <__alt_data_end+0xfffbc198>
    5600:	8080030b 	ldhu	r2,12(r16)
    5604:	10c0800c 	andi	r3,r2,512
    5608:	183fdb1e 	bne	r3,zero,5578 <__alt_data_end+0xfffbc198>
    560c:	10800094 	ori	r2,r2,2
    5610:	80c010c4 	addi	r3,r16,67
    5614:	8080030d 	sth	r2,12(r16)
    5618:	00800044 	movi	r2,1
    561c:	80c00015 	stw	r3,0(r16)
    5620:	80c00415 	stw	r3,16(r16)
    5624:	80800515 	stw	r2,20(r16)
    5628:	003fd306 	br	5578 <__alt_data_end+0xfffbc198>
    562c:	04810004 	movi	r18,1024
    5630:	003fc306 	br	5540 <__alt_data_end+0xfffbc160>
    5634:	0027883a 	mov	r19,zero
    5638:	04810004 	movi	r18,1024
    563c:	003fc006 	br	5540 <__alt_data_end+0xfffbc160>

00005640 <_malloc_r>:
    5640:	defff504 	addi	sp,sp,-44
    5644:	dc800315 	stw	r18,12(sp)
    5648:	dfc00a15 	stw	ra,40(sp)
    564c:	df000915 	stw	fp,36(sp)
    5650:	ddc00815 	stw	r23,32(sp)
    5654:	dd800715 	stw	r22,28(sp)
    5658:	dd400615 	stw	r21,24(sp)
    565c:	dd000515 	stw	r20,20(sp)
    5660:	dcc00415 	stw	r19,16(sp)
    5664:	dc400215 	stw	r17,8(sp)
    5668:	dc000115 	stw	r16,4(sp)
    566c:	288002c4 	addi	r2,r5,11
    5670:	00c00584 	movi	r3,22
    5674:	2025883a 	mov	r18,r4
    5678:	18807f2e 	bgeu	r3,r2,5878 <_malloc_r+0x238>
    567c:	047ffe04 	movi	r17,-8
    5680:	1462703a 	and	r17,r2,r17
    5684:	8800a316 	blt	r17,zero,5914 <_malloc_r+0x2d4>
    5688:	8940a236 	bltu	r17,r5,5914 <_malloc_r+0x2d4>
    568c:	000d8640 	call	d864 <__malloc_lock>
    5690:	00807dc4 	movi	r2,503
    5694:	1441e92e 	bgeu	r2,r17,5e3c <_malloc_r+0x7fc>
    5698:	8804d27a 	srli	r2,r17,9
    569c:	1000a126 	beq	r2,zero,5924 <_malloc_r+0x2e4>
    56a0:	00c00104 	movi	r3,4
    56a4:	18811e36 	bltu	r3,r2,5b20 <_malloc_r+0x4e0>
    56a8:	8804d1ba 	srli	r2,r17,6
    56ac:	12000e44 	addi	r8,r2,57
    56b0:	11c00e04 	addi	r7,r2,56
    56b4:	4209883a 	add	r4,r8,r8
    56b8:	04c00074 	movhi	r19,1
    56bc:	2109883a 	add	r4,r4,r4
    56c0:	9cc08604 	addi	r19,r19,536
    56c4:	2109883a 	add	r4,r4,r4
    56c8:	9909883a 	add	r4,r19,r4
    56cc:	24000117 	ldw	r16,4(r4)
    56d0:	213ffe04 	addi	r4,r4,-8
    56d4:	24009726 	beq	r4,r16,5934 <_malloc_r+0x2f4>
    56d8:	80800117 	ldw	r2,4(r16)
    56dc:	01bfff04 	movi	r6,-4
    56e0:	014003c4 	movi	r5,15
    56e4:	1184703a 	and	r2,r2,r6
    56e8:	1447c83a 	sub	r3,r2,r17
    56ec:	28c00716 	blt	r5,r3,570c <_malloc_r+0xcc>
    56f0:	1800920e 	bge	r3,zero,593c <_malloc_r+0x2fc>
    56f4:	84000317 	ldw	r16,12(r16)
    56f8:	24008e26 	beq	r4,r16,5934 <_malloc_r+0x2f4>
    56fc:	80800117 	ldw	r2,4(r16)
    5700:	1184703a 	and	r2,r2,r6
    5704:	1447c83a 	sub	r3,r2,r17
    5708:	28fff90e 	bge	r5,r3,56f0 <__alt_data_end+0xfffbc310>
    570c:	3809883a 	mov	r4,r7
    5710:	01800074 	movhi	r6,1
    5714:	9c000417 	ldw	r16,16(r19)
    5718:	31808604 	addi	r6,r6,536
    571c:	32000204 	addi	r8,r6,8
    5720:	82013426 	beq	r16,r8,5bf4 <_malloc_r+0x5b4>
    5724:	80c00117 	ldw	r3,4(r16)
    5728:	00bfff04 	movi	r2,-4
    572c:	188e703a 	and	r7,r3,r2
    5730:	3c45c83a 	sub	r2,r7,r17
    5734:	00c003c4 	movi	r3,15
    5738:	18811f16 	blt	r3,r2,5bb8 <_malloc_r+0x578>
    573c:	32000515 	stw	r8,20(r6)
    5740:	32000415 	stw	r8,16(r6)
    5744:	10007f0e 	bge	r2,zero,5944 <_malloc_r+0x304>
    5748:	00807fc4 	movi	r2,511
    574c:	11c0fd36 	bltu	r2,r7,5b44 <_malloc_r+0x504>
    5750:	3806d0fa 	srli	r3,r7,3
    5754:	01c00044 	movi	r7,1
    5758:	30800117 	ldw	r2,4(r6)
    575c:	19400044 	addi	r5,r3,1
    5760:	294b883a 	add	r5,r5,r5
    5764:	1807d0ba 	srai	r3,r3,2
    5768:	294b883a 	add	r5,r5,r5
    576c:	294b883a 	add	r5,r5,r5
    5770:	298b883a 	add	r5,r5,r6
    5774:	38c6983a 	sll	r3,r7,r3
    5778:	29c00017 	ldw	r7,0(r5)
    577c:	2a7ffe04 	addi	r9,r5,-8
    5780:	1886b03a 	or	r3,r3,r2
    5784:	82400315 	stw	r9,12(r16)
    5788:	81c00215 	stw	r7,8(r16)
    578c:	30c00115 	stw	r3,4(r6)
    5790:	2c000015 	stw	r16,0(r5)
    5794:	3c000315 	stw	r16,12(r7)
    5798:	2005d0ba 	srai	r2,r4,2
    579c:	01400044 	movi	r5,1
    57a0:	288a983a 	sll	r5,r5,r2
    57a4:	19406f36 	bltu	r3,r5,5964 <_malloc_r+0x324>
    57a8:	28c4703a 	and	r2,r5,r3
    57ac:	10000a1e 	bne	r2,zero,57d8 <_malloc_r+0x198>
    57b0:	00bfff04 	movi	r2,-4
    57b4:	294b883a 	add	r5,r5,r5
    57b8:	2088703a 	and	r4,r4,r2
    57bc:	28c4703a 	and	r2,r5,r3
    57c0:	21000104 	addi	r4,r4,4
    57c4:	1000041e 	bne	r2,zero,57d8 <_malloc_r+0x198>
    57c8:	294b883a 	add	r5,r5,r5
    57cc:	28c4703a 	and	r2,r5,r3
    57d0:	21000104 	addi	r4,r4,4
    57d4:	103ffc26 	beq	r2,zero,57c8 <__alt_data_end+0xfffbc3e8>
    57d8:	02bfff04 	movi	r10,-4
    57dc:	024003c4 	movi	r9,15
    57e0:	21800044 	addi	r6,r4,1
    57e4:	318d883a 	add	r6,r6,r6
    57e8:	318d883a 	add	r6,r6,r6
    57ec:	318d883a 	add	r6,r6,r6
    57f0:	998d883a 	add	r6,r19,r6
    57f4:	333ffe04 	addi	r12,r6,-8
    57f8:	2017883a 	mov	r11,r4
    57fc:	31800104 	addi	r6,r6,4
    5800:	34000017 	ldw	r16,0(r6)
    5804:	31fffd04 	addi	r7,r6,-12
    5808:	81c0041e 	bne	r16,r7,581c <_malloc_r+0x1dc>
    580c:	0000fb06 	br	5bfc <_malloc_r+0x5bc>
    5810:	1801030e 	bge	r3,zero,5c20 <_malloc_r+0x5e0>
    5814:	84000317 	ldw	r16,12(r16)
    5818:	81c0f826 	beq	r16,r7,5bfc <_malloc_r+0x5bc>
    581c:	80800117 	ldw	r2,4(r16)
    5820:	1284703a 	and	r2,r2,r10
    5824:	1447c83a 	sub	r3,r2,r17
    5828:	48fff90e 	bge	r9,r3,5810 <__alt_data_end+0xfffbc430>
    582c:	80800317 	ldw	r2,12(r16)
    5830:	81000217 	ldw	r4,8(r16)
    5834:	89400054 	ori	r5,r17,1
    5838:	81400115 	stw	r5,4(r16)
    583c:	20800315 	stw	r2,12(r4)
    5840:	11000215 	stw	r4,8(r2)
    5844:	8463883a 	add	r17,r16,r17
    5848:	9c400515 	stw	r17,20(r19)
    584c:	9c400415 	stw	r17,16(r19)
    5850:	18800054 	ori	r2,r3,1
    5854:	88800115 	stw	r2,4(r17)
    5858:	8a000315 	stw	r8,12(r17)
    585c:	8a000215 	stw	r8,8(r17)
    5860:	88e3883a 	add	r17,r17,r3
    5864:	88c00015 	stw	r3,0(r17)
    5868:	9009883a 	mov	r4,r18
    586c:	000d8880 	call	d888 <__malloc_unlock>
    5870:	80800204 	addi	r2,r16,8
    5874:	00001b06 	br	58e4 <_malloc_r+0x2a4>
    5878:	04400404 	movi	r17,16
    587c:	89402536 	bltu	r17,r5,5914 <_malloc_r+0x2d4>
    5880:	000d8640 	call	d864 <__malloc_lock>
    5884:	00800184 	movi	r2,6
    5888:	01000084 	movi	r4,2
    588c:	04c00074 	movhi	r19,1
    5890:	1085883a 	add	r2,r2,r2
    5894:	9cc08604 	addi	r19,r19,536
    5898:	1085883a 	add	r2,r2,r2
    589c:	9885883a 	add	r2,r19,r2
    58a0:	14000117 	ldw	r16,4(r2)
    58a4:	10fffe04 	addi	r3,r2,-8
    58a8:	80c0d926 	beq	r16,r3,5c10 <_malloc_r+0x5d0>
    58ac:	80c00117 	ldw	r3,4(r16)
    58b0:	81000317 	ldw	r4,12(r16)
    58b4:	00bfff04 	movi	r2,-4
    58b8:	1884703a 	and	r2,r3,r2
    58bc:	81400217 	ldw	r5,8(r16)
    58c0:	8085883a 	add	r2,r16,r2
    58c4:	10c00117 	ldw	r3,4(r2)
    58c8:	29000315 	stw	r4,12(r5)
    58cc:	21400215 	stw	r5,8(r4)
    58d0:	18c00054 	ori	r3,r3,1
    58d4:	10c00115 	stw	r3,4(r2)
    58d8:	9009883a 	mov	r4,r18
    58dc:	000d8880 	call	d888 <__malloc_unlock>
    58e0:	80800204 	addi	r2,r16,8
    58e4:	dfc00a17 	ldw	ra,40(sp)
    58e8:	df000917 	ldw	fp,36(sp)
    58ec:	ddc00817 	ldw	r23,32(sp)
    58f0:	dd800717 	ldw	r22,28(sp)
    58f4:	dd400617 	ldw	r21,24(sp)
    58f8:	dd000517 	ldw	r20,20(sp)
    58fc:	dcc00417 	ldw	r19,16(sp)
    5900:	dc800317 	ldw	r18,12(sp)
    5904:	dc400217 	ldw	r17,8(sp)
    5908:	dc000117 	ldw	r16,4(sp)
    590c:	dec00b04 	addi	sp,sp,44
    5910:	f800283a 	ret
    5914:	00800304 	movi	r2,12
    5918:	90800015 	stw	r2,0(r18)
    591c:	0005883a 	mov	r2,zero
    5920:	003ff006 	br	58e4 <__alt_data_end+0xfffbc504>
    5924:	01002004 	movi	r4,128
    5928:	02001004 	movi	r8,64
    592c:	01c00fc4 	movi	r7,63
    5930:	003f6106 	br	56b8 <__alt_data_end+0xfffbc2d8>
    5934:	4009883a 	mov	r4,r8
    5938:	003f7506 	br	5710 <__alt_data_end+0xfffbc330>
    593c:	81000317 	ldw	r4,12(r16)
    5940:	003fde06 	br	58bc <__alt_data_end+0xfffbc4dc>
    5944:	81c5883a 	add	r2,r16,r7
    5948:	11400117 	ldw	r5,4(r2)
    594c:	9009883a 	mov	r4,r18
    5950:	29400054 	ori	r5,r5,1
    5954:	11400115 	stw	r5,4(r2)
    5958:	000d8880 	call	d888 <__malloc_unlock>
    595c:	80800204 	addi	r2,r16,8
    5960:	003fe006 	br	58e4 <__alt_data_end+0xfffbc504>
    5964:	9c000217 	ldw	r16,8(r19)
    5968:	00bfff04 	movi	r2,-4
    596c:	85800117 	ldw	r22,4(r16)
    5970:	b0ac703a 	and	r22,r22,r2
    5974:	b4400336 	bltu	r22,r17,5984 <_malloc_r+0x344>
    5978:	b445c83a 	sub	r2,r22,r17
    597c:	00c003c4 	movi	r3,15
    5980:	18805d16 	blt	r3,r2,5af8 <_malloc_r+0x4b8>
    5984:	05c00074 	movhi	r23,1
    5988:	00800074 	movhi	r2,1
    598c:	108cda04 	addi	r2,r2,13160
    5990:	bdc60d04 	addi	r23,r23,6196
    5994:	15400017 	ldw	r21,0(r2)
    5998:	b8c00017 	ldw	r3,0(r23)
    599c:	00bfffc4 	movi	r2,-1
    59a0:	858d883a 	add	r6,r16,r22
    59a4:	8d6b883a 	add	r21,r17,r21
    59a8:	1880ea26 	beq	r3,r2,5d54 <_malloc_r+0x714>
    59ac:	ad4403c4 	addi	r21,r21,4111
    59b0:	00bc0004 	movi	r2,-4096
    59b4:	a8aa703a 	and	r21,r21,r2
    59b8:	a80b883a 	mov	r5,r21
    59bc:	9009883a 	mov	r4,r18
    59c0:	d9800015 	stw	r6,0(sp)
    59c4:	000798c0 	call	798c <_sbrk_r>
    59c8:	1029883a 	mov	r20,r2
    59cc:	00bfffc4 	movi	r2,-1
    59d0:	d9800017 	ldw	r6,0(sp)
    59d4:	a080e826 	beq	r20,r2,5d78 <_malloc_r+0x738>
    59d8:	a180a636 	bltu	r20,r6,5c74 <_malloc_r+0x634>
    59dc:	07000074 	movhi	fp,1
    59e0:	e70ce304 	addi	fp,fp,13196
    59e4:	e0800017 	ldw	r2,0(fp)
    59e8:	a887883a 	add	r3,r21,r2
    59ec:	e0c00015 	stw	r3,0(fp)
    59f0:	3500e626 	beq	r6,r20,5d8c <_malloc_r+0x74c>
    59f4:	b9000017 	ldw	r4,0(r23)
    59f8:	00bfffc4 	movi	r2,-1
    59fc:	2080ee26 	beq	r4,r2,5db8 <_malloc_r+0x778>
    5a00:	a185c83a 	sub	r2,r20,r6
    5a04:	10c5883a 	add	r2,r2,r3
    5a08:	e0800015 	stw	r2,0(fp)
    5a0c:	a0c001cc 	andi	r3,r20,7
    5a10:	1800bc26 	beq	r3,zero,5d04 <_malloc_r+0x6c4>
    5a14:	a0e9c83a 	sub	r20,r20,r3
    5a18:	00840204 	movi	r2,4104
    5a1c:	a5000204 	addi	r20,r20,8
    5a20:	10c7c83a 	sub	r3,r2,r3
    5a24:	a545883a 	add	r2,r20,r21
    5a28:	1083ffcc 	andi	r2,r2,4095
    5a2c:	18abc83a 	sub	r21,r3,r2
    5a30:	a80b883a 	mov	r5,r21
    5a34:	9009883a 	mov	r4,r18
    5a38:	000798c0 	call	798c <_sbrk_r>
    5a3c:	00ffffc4 	movi	r3,-1
    5a40:	10c0e126 	beq	r2,r3,5dc8 <_malloc_r+0x788>
    5a44:	1505c83a 	sub	r2,r2,r20
    5a48:	1545883a 	add	r2,r2,r21
    5a4c:	10800054 	ori	r2,r2,1
    5a50:	e0c00017 	ldw	r3,0(fp)
    5a54:	9d000215 	stw	r20,8(r19)
    5a58:	a0800115 	stw	r2,4(r20)
    5a5c:	a8c7883a 	add	r3,r21,r3
    5a60:	e0c00015 	stw	r3,0(fp)
    5a64:	84c00e26 	beq	r16,r19,5aa0 <_malloc_r+0x460>
    5a68:	018003c4 	movi	r6,15
    5a6c:	3580a72e 	bgeu	r6,r22,5d0c <_malloc_r+0x6cc>
    5a70:	81400117 	ldw	r5,4(r16)
    5a74:	013ffe04 	movi	r4,-8
    5a78:	b0bffd04 	addi	r2,r22,-12
    5a7c:	1104703a 	and	r2,r2,r4
    5a80:	2900004c 	andi	r4,r5,1
    5a84:	2088b03a 	or	r4,r4,r2
    5a88:	81000115 	stw	r4,4(r16)
    5a8c:	01400144 	movi	r5,5
    5a90:	8089883a 	add	r4,r16,r2
    5a94:	21400115 	stw	r5,4(r4)
    5a98:	21400215 	stw	r5,8(r4)
    5a9c:	3080cd36 	bltu	r6,r2,5dd4 <_malloc_r+0x794>
    5aa0:	00800074 	movhi	r2,1
    5aa4:	108cd904 	addi	r2,r2,13156
    5aa8:	11000017 	ldw	r4,0(r2)
    5aac:	20c0012e 	bgeu	r4,r3,5ab4 <_malloc_r+0x474>
    5ab0:	10c00015 	stw	r3,0(r2)
    5ab4:	00800074 	movhi	r2,1
    5ab8:	108cd804 	addi	r2,r2,13152
    5abc:	11000017 	ldw	r4,0(r2)
    5ac0:	9c000217 	ldw	r16,8(r19)
    5ac4:	20c0012e 	bgeu	r4,r3,5acc <_malloc_r+0x48c>
    5ac8:	10c00015 	stw	r3,0(r2)
    5acc:	80c00117 	ldw	r3,4(r16)
    5ad0:	00bfff04 	movi	r2,-4
    5ad4:	1886703a 	and	r3,r3,r2
    5ad8:	1c45c83a 	sub	r2,r3,r17
    5adc:	1c400236 	bltu	r3,r17,5ae8 <_malloc_r+0x4a8>
    5ae0:	00c003c4 	movi	r3,15
    5ae4:	18800416 	blt	r3,r2,5af8 <_malloc_r+0x4b8>
    5ae8:	9009883a 	mov	r4,r18
    5aec:	000d8880 	call	d888 <__malloc_unlock>
    5af0:	0005883a 	mov	r2,zero
    5af4:	003f7b06 	br	58e4 <__alt_data_end+0xfffbc504>
    5af8:	88c00054 	ori	r3,r17,1
    5afc:	80c00115 	stw	r3,4(r16)
    5b00:	8463883a 	add	r17,r16,r17
    5b04:	10800054 	ori	r2,r2,1
    5b08:	9c400215 	stw	r17,8(r19)
    5b0c:	88800115 	stw	r2,4(r17)
    5b10:	9009883a 	mov	r4,r18
    5b14:	000d8880 	call	d888 <__malloc_unlock>
    5b18:	80800204 	addi	r2,r16,8
    5b1c:	003f7106 	br	58e4 <__alt_data_end+0xfffbc504>
    5b20:	00c00504 	movi	r3,20
    5b24:	18804a2e 	bgeu	r3,r2,5c50 <_malloc_r+0x610>
    5b28:	00c01504 	movi	r3,84
    5b2c:	18806e36 	bltu	r3,r2,5ce8 <_malloc_r+0x6a8>
    5b30:	8804d33a 	srli	r2,r17,12
    5b34:	12001bc4 	addi	r8,r2,111
    5b38:	11c01b84 	addi	r7,r2,110
    5b3c:	4209883a 	add	r4,r8,r8
    5b40:	003edd06 	br	56b8 <__alt_data_end+0xfffbc2d8>
    5b44:	3804d27a 	srli	r2,r7,9
    5b48:	00c00104 	movi	r3,4
    5b4c:	1880442e 	bgeu	r3,r2,5c60 <_malloc_r+0x620>
    5b50:	00c00504 	movi	r3,20
    5b54:	18808136 	bltu	r3,r2,5d5c <_malloc_r+0x71c>
    5b58:	11401704 	addi	r5,r2,92
    5b5c:	10c016c4 	addi	r3,r2,91
    5b60:	294b883a 	add	r5,r5,r5
    5b64:	294b883a 	add	r5,r5,r5
    5b68:	294b883a 	add	r5,r5,r5
    5b6c:	994b883a 	add	r5,r19,r5
    5b70:	28800017 	ldw	r2,0(r5)
    5b74:	01800074 	movhi	r6,1
    5b78:	297ffe04 	addi	r5,r5,-8
    5b7c:	31808604 	addi	r6,r6,536
    5b80:	28806526 	beq	r5,r2,5d18 <_malloc_r+0x6d8>
    5b84:	01bfff04 	movi	r6,-4
    5b88:	10c00117 	ldw	r3,4(r2)
    5b8c:	1986703a 	and	r3,r3,r6
    5b90:	38c0022e 	bgeu	r7,r3,5b9c <_malloc_r+0x55c>
    5b94:	10800217 	ldw	r2,8(r2)
    5b98:	28bffb1e 	bne	r5,r2,5b88 <__alt_data_end+0xfffbc7a8>
    5b9c:	11400317 	ldw	r5,12(r2)
    5ba0:	98c00117 	ldw	r3,4(r19)
    5ba4:	81400315 	stw	r5,12(r16)
    5ba8:	80800215 	stw	r2,8(r16)
    5bac:	2c000215 	stw	r16,8(r5)
    5bb0:	14000315 	stw	r16,12(r2)
    5bb4:	003ef806 	br	5798 <__alt_data_end+0xfffbc3b8>
    5bb8:	88c00054 	ori	r3,r17,1
    5bbc:	80c00115 	stw	r3,4(r16)
    5bc0:	8463883a 	add	r17,r16,r17
    5bc4:	34400515 	stw	r17,20(r6)
    5bc8:	34400415 	stw	r17,16(r6)
    5bcc:	10c00054 	ori	r3,r2,1
    5bd0:	8a000315 	stw	r8,12(r17)
    5bd4:	8a000215 	stw	r8,8(r17)
    5bd8:	88c00115 	stw	r3,4(r17)
    5bdc:	88a3883a 	add	r17,r17,r2
    5be0:	88800015 	stw	r2,0(r17)
    5be4:	9009883a 	mov	r4,r18
    5be8:	000d8880 	call	d888 <__malloc_unlock>
    5bec:	80800204 	addi	r2,r16,8
    5bf0:	003f3c06 	br	58e4 <__alt_data_end+0xfffbc504>
    5bf4:	30c00117 	ldw	r3,4(r6)
    5bf8:	003ee706 	br	5798 <__alt_data_end+0xfffbc3b8>
    5bfc:	5ac00044 	addi	r11,r11,1
    5c00:	588000cc 	andi	r2,r11,3
    5c04:	31800204 	addi	r6,r6,8
    5c08:	103efd1e 	bne	r2,zero,5800 <__alt_data_end+0xfffbc420>
    5c0c:	00002406 	br	5ca0 <_malloc_r+0x660>
    5c10:	14000317 	ldw	r16,12(r2)
    5c14:	143f251e 	bne	r2,r16,58ac <__alt_data_end+0xfffbc4cc>
    5c18:	21000084 	addi	r4,r4,2
    5c1c:	003ebc06 	br	5710 <__alt_data_end+0xfffbc330>
    5c20:	8085883a 	add	r2,r16,r2
    5c24:	10c00117 	ldw	r3,4(r2)
    5c28:	81000317 	ldw	r4,12(r16)
    5c2c:	81400217 	ldw	r5,8(r16)
    5c30:	18c00054 	ori	r3,r3,1
    5c34:	10c00115 	stw	r3,4(r2)
    5c38:	29000315 	stw	r4,12(r5)
    5c3c:	21400215 	stw	r5,8(r4)
    5c40:	9009883a 	mov	r4,r18
    5c44:	000d8880 	call	d888 <__malloc_unlock>
    5c48:	80800204 	addi	r2,r16,8
    5c4c:	003f2506 	br	58e4 <__alt_data_end+0xfffbc504>
    5c50:	12001704 	addi	r8,r2,92
    5c54:	11c016c4 	addi	r7,r2,91
    5c58:	4209883a 	add	r4,r8,r8
    5c5c:	003e9606 	br	56b8 <__alt_data_end+0xfffbc2d8>
    5c60:	3804d1ba 	srli	r2,r7,6
    5c64:	11400e44 	addi	r5,r2,57
    5c68:	10c00e04 	addi	r3,r2,56
    5c6c:	294b883a 	add	r5,r5,r5
    5c70:	003fbc06 	br	5b64 <__alt_data_end+0xfffbc784>
    5c74:	84ff5926 	beq	r16,r19,59dc <__alt_data_end+0xfffbc5fc>
    5c78:	00800074 	movhi	r2,1
    5c7c:	10808604 	addi	r2,r2,536
    5c80:	14000217 	ldw	r16,8(r2)
    5c84:	00bfff04 	movi	r2,-4
    5c88:	80c00117 	ldw	r3,4(r16)
    5c8c:	1886703a 	and	r3,r3,r2
    5c90:	003f9106 	br	5ad8 <__alt_data_end+0xfffbc6f8>
    5c94:	60800217 	ldw	r2,8(r12)
    5c98:	213fffc4 	addi	r4,r4,-1
    5c9c:	1300651e 	bne	r2,r12,5e34 <_malloc_r+0x7f4>
    5ca0:	208000cc 	andi	r2,r4,3
    5ca4:	633ffe04 	addi	r12,r12,-8
    5ca8:	103ffa1e 	bne	r2,zero,5c94 <__alt_data_end+0xfffbc8b4>
    5cac:	98800117 	ldw	r2,4(r19)
    5cb0:	0146303a 	nor	r3,zero,r5
    5cb4:	1884703a 	and	r2,r3,r2
    5cb8:	98800115 	stw	r2,4(r19)
    5cbc:	294b883a 	add	r5,r5,r5
    5cc0:	117f2836 	bltu	r2,r5,5964 <__alt_data_end+0xfffbc584>
    5cc4:	283f2726 	beq	r5,zero,5964 <__alt_data_end+0xfffbc584>
    5cc8:	2886703a 	and	r3,r5,r2
    5ccc:	5809883a 	mov	r4,r11
    5cd0:	183ec31e 	bne	r3,zero,57e0 <__alt_data_end+0xfffbc400>
    5cd4:	294b883a 	add	r5,r5,r5
    5cd8:	2886703a 	and	r3,r5,r2
    5cdc:	21000104 	addi	r4,r4,4
    5ce0:	183ffc26 	beq	r3,zero,5cd4 <__alt_data_end+0xfffbc8f4>
    5ce4:	003ebe06 	br	57e0 <__alt_data_end+0xfffbc400>
    5ce8:	00c05504 	movi	r3,340
    5cec:	18801236 	bltu	r3,r2,5d38 <_malloc_r+0x6f8>
    5cf0:	8804d3fa 	srli	r2,r17,15
    5cf4:	12001e04 	addi	r8,r2,120
    5cf8:	11c01dc4 	addi	r7,r2,119
    5cfc:	4209883a 	add	r4,r8,r8
    5d00:	003e6d06 	br	56b8 <__alt_data_end+0xfffbc2d8>
    5d04:	00c40004 	movi	r3,4096
    5d08:	003f4606 	br	5a24 <__alt_data_end+0xfffbc644>
    5d0c:	00800044 	movi	r2,1
    5d10:	a0800115 	stw	r2,4(r20)
    5d14:	003f7406 	br	5ae8 <__alt_data_end+0xfffbc708>
    5d18:	1805d0ba 	srai	r2,r3,2
    5d1c:	01c00044 	movi	r7,1
    5d20:	30c00117 	ldw	r3,4(r6)
    5d24:	388e983a 	sll	r7,r7,r2
    5d28:	2805883a 	mov	r2,r5
    5d2c:	38c6b03a 	or	r3,r7,r3
    5d30:	30c00115 	stw	r3,4(r6)
    5d34:	003f9b06 	br	5ba4 <__alt_data_end+0xfffbc7c4>
    5d38:	00c15504 	movi	r3,1364
    5d3c:	18801a36 	bltu	r3,r2,5da8 <_malloc_r+0x768>
    5d40:	8804d4ba 	srli	r2,r17,18
    5d44:	12001f44 	addi	r8,r2,125
    5d48:	11c01f04 	addi	r7,r2,124
    5d4c:	4209883a 	add	r4,r8,r8
    5d50:	003e5906 	br	56b8 <__alt_data_end+0xfffbc2d8>
    5d54:	ad400404 	addi	r21,r21,16
    5d58:	003f1706 	br	59b8 <__alt_data_end+0xfffbc5d8>
    5d5c:	00c01504 	movi	r3,84
    5d60:	18802336 	bltu	r3,r2,5df0 <_malloc_r+0x7b0>
    5d64:	3804d33a 	srli	r2,r7,12
    5d68:	11401bc4 	addi	r5,r2,111
    5d6c:	10c01b84 	addi	r3,r2,110
    5d70:	294b883a 	add	r5,r5,r5
    5d74:	003f7b06 	br	5b64 <__alt_data_end+0xfffbc784>
    5d78:	9c000217 	ldw	r16,8(r19)
    5d7c:	00bfff04 	movi	r2,-4
    5d80:	80c00117 	ldw	r3,4(r16)
    5d84:	1886703a 	and	r3,r3,r2
    5d88:	003f5306 	br	5ad8 <__alt_data_end+0xfffbc6f8>
    5d8c:	3083ffcc 	andi	r2,r6,4095
    5d90:	103f181e 	bne	r2,zero,59f4 <__alt_data_end+0xfffbc614>
    5d94:	99000217 	ldw	r4,8(r19)
    5d98:	b545883a 	add	r2,r22,r21
    5d9c:	10800054 	ori	r2,r2,1
    5da0:	20800115 	stw	r2,4(r4)
    5da4:	003f3e06 	br	5aa0 <__alt_data_end+0xfffbc6c0>
    5da8:	01003f84 	movi	r4,254
    5dac:	02001fc4 	movi	r8,127
    5db0:	01c01f84 	movi	r7,126
    5db4:	003e4006 	br	56b8 <__alt_data_end+0xfffbc2d8>
    5db8:	00800074 	movhi	r2,1
    5dbc:	10860d04 	addi	r2,r2,6196
    5dc0:	15000015 	stw	r20,0(r2)
    5dc4:	003f1106 	br	5a0c <__alt_data_end+0xfffbc62c>
    5dc8:	00800044 	movi	r2,1
    5dcc:	002b883a 	mov	r21,zero
    5dd0:	003f1f06 	br	5a50 <__alt_data_end+0xfffbc670>
    5dd4:	81400204 	addi	r5,r16,8
    5dd8:	9009883a 	mov	r4,r18
    5ddc:	0004a480 	call	4a48 <_free_r>
    5de0:	00800074 	movhi	r2,1
    5de4:	108ce304 	addi	r2,r2,13196
    5de8:	10c00017 	ldw	r3,0(r2)
    5dec:	003f2c06 	br	5aa0 <__alt_data_end+0xfffbc6c0>
    5df0:	00c05504 	movi	r3,340
    5df4:	18800536 	bltu	r3,r2,5e0c <_malloc_r+0x7cc>
    5df8:	3804d3fa 	srli	r2,r7,15
    5dfc:	11401e04 	addi	r5,r2,120
    5e00:	10c01dc4 	addi	r3,r2,119
    5e04:	294b883a 	add	r5,r5,r5
    5e08:	003f5606 	br	5b64 <__alt_data_end+0xfffbc784>
    5e0c:	00c15504 	movi	r3,1364
    5e10:	18800536 	bltu	r3,r2,5e28 <_malloc_r+0x7e8>
    5e14:	3804d4ba 	srli	r2,r7,18
    5e18:	11401f44 	addi	r5,r2,125
    5e1c:	10c01f04 	addi	r3,r2,124
    5e20:	294b883a 	add	r5,r5,r5
    5e24:	003f4f06 	br	5b64 <__alt_data_end+0xfffbc784>
    5e28:	01403f84 	movi	r5,254
    5e2c:	00c01f84 	movi	r3,126
    5e30:	003f4c06 	br	5b64 <__alt_data_end+0xfffbc784>
    5e34:	98800117 	ldw	r2,4(r19)
    5e38:	003fa006 	br	5cbc <__alt_data_end+0xfffbc8dc>
    5e3c:	8808d0fa 	srli	r4,r17,3
    5e40:	20800044 	addi	r2,r4,1
    5e44:	1085883a 	add	r2,r2,r2
    5e48:	003e9006 	br	588c <__alt_data_end+0xfffbc4ac>

00005e4c <memchr>:
    5e4c:	208000cc 	andi	r2,r4,3
    5e50:	280f883a 	mov	r7,r5
    5e54:	10003426 	beq	r2,zero,5f28 <memchr+0xdc>
    5e58:	30bfffc4 	addi	r2,r6,-1
    5e5c:	30001a26 	beq	r6,zero,5ec8 <memchr+0x7c>
    5e60:	20c00003 	ldbu	r3,0(r4)
    5e64:	29803fcc 	andi	r6,r5,255
    5e68:	30c0051e 	bne	r6,r3,5e80 <memchr+0x34>
    5e6c:	00001806 	br	5ed0 <memchr+0x84>
    5e70:	10001526 	beq	r2,zero,5ec8 <memchr+0x7c>
    5e74:	20c00003 	ldbu	r3,0(r4)
    5e78:	10bfffc4 	addi	r2,r2,-1
    5e7c:	30c01426 	beq	r6,r3,5ed0 <memchr+0x84>
    5e80:	21000044 	addi	r4,r4,1
    5e84:	20c000cc 	andi	r3,r4,3
    5e88:	183ff91e 	bne	r3,zero,5e70 <__alt_data_end+0xfffbca90>
    5e8c:	020000c4 	movi	r8,3
    5e90:	40801136 	bltu	r8,r2,5ed8 <memchr+0x8c>
    5e94:	10000c26 	beq	r2,zero,5ec8 <memchr+0x7c>
    5e98:	20c00003 	ldbu	r3,0(r4)
    5e9c:	29403fcc 	andi	r5,r5,255
    5ea0:	28c00b26 	beq	r5,r3,5ed0 <memchr+0x84>
    5ea4:	20c00044 	addi	r3,r4,1
    5ea8:	39803fcc 	andi	r6,r7,255
    5eac:	2089883a 	add	r4,r4,r2
    5eb0:	00000306 	br	5ec0 <memchr+0x74>
    5eb4:	18c00044 	addi	r3,r3,1
    5eb8:	197fffc3 	ldbu	r5,-1(r3)
    5ebc:	31400526 	beq	r6,r5,5ed4 <memchr+0x88>
    5ec0:	1805883a 	mov	r2,r3
    5ec4:	20fffb1e 	bne	r4,r3,5eb4 <__alt_data_end+0xfffbcad4>
    5ec8:	0005883a 	mov	r2,zero
    5ecc:	f800283a 	ret
    5ed0:	2005883a 	mov	r2,r4
    5ed4:	f800283a 	ret
    5ed8:	28c03fcc 	andi	r3,r5,255
    5edc:	1812923a 	slli	r9,r3,8
    5ee0:	02ffbff4 	movhi	r11,65279
    5ee4:	02a02074 	movhi	r10,32897
    5ee8:	48d2b03a 	or	r9,r9,r3
    5eec:	4806943a 	slli	r3,r9,16
    5ef0:	5affbfc4 	addi	r11,r11,-257
    5ef4:	52a02004 	addi	r10,r10,-32640
    5ef8:	48d2b03a 	or	r9,r9,r3
    5efc:	20c00017 	ldw	r3,0(r4)
    5f00:	48c6f03a 	xor	r3,r9,r3
    5f04:	1acd883a 	add	r6,r3,r11
    5f08:	00c6303a 	nor	r3,zero,r3
    5f0c:	30c6703a 	and	r3,r6,r3
    5f10:	1a86703a 	and	r3,r3,r10
    5f14:	183fe01e 	bne	r3,zero,5e98 <__alt_data_end+0xfffbcab8>
    5f18:	10bfff04 	addi	r2,r2,-4
    5f1c:	21000104 	addi	r4,r4,4
    5f20:	40bff636 	bltu	r8,r2,5efc <__alt_data_end+0xfffbcb1c>
    5f24:	003fdb06 	br	5e94 <__alt_data_end+0xfffbcab4>
    5f28:	3005883a 	mov	r2,r6
    5f2c:	003fd706 	br	5e8c <__alt_data_end+0xfffbcaac>

00005f30 <memcpy>:
    5f30:	defffd04 	addi	sp,sp,-12
    5f34:	dfc00215 	stw	ra,8(sp)
    5f38:	dc400115 	stw	r17,4(sp)
    5f3c:	dc000015 	stw	r16,0(sp)
    5f40:	00c003c4 	movi	r3,15
    5f44:	2005883a 	mov	r2,r4
    5f48:	1980452e 	bgeu	r3,r6,6060 <memcpy+0x130>
    5f4c:	2906b03a 	or	r3,r5,r4
    5f50:	18c000cc 	andi	r3,r3,3
    5f54:	1800441e 	bne	r3,zero,6068 <memcpy+0x138>
    5f58:	347ffc04 	addi	r17,r6,-16
    5f5c:	8822d13a 	srli	r17,r17,4
    5f60:	28c00104 	addi	r3,r5,4
    5f64:	23400104 	addi	r13,r4,4
    5f68:	8820913a 	slli	r16,r17,4
    5f6c:	2b000204 	addi	r12,r5,8
    5f70:	22c00204 	addi	r11,r4,8
    5f74:	84000504 	addi	r16,r16,20
    5f78:	2a800304 	addi	r10,r5,12
    5f7c:	22400304 	addi	r9,r4,12
    5f80:	2c21883a 	add	r16,r5,r16
    5f84:	2811883a 	mov	r8,r5
    5f88:	200f883a 	mov	r7,r4
    5f8c:	41000017 	ldw	r4,0(r8)
    5f90:	1fc00017 	ldw	ra,0(r3)
    5f94:	63c00017 	ldw	r15,0(r12)
    5f98:	39000015 	stw	r4,0(r7)
    5f9c:	53800017 	ldw	r14,0(r10)
    5fa0:	6fc00015 	stw	ra,0(r13)
    5fa4:	5bc00015 	stw	r15,0(r11)
    5fa8:	4b800015 	stw	r14,0(r9)
    5fac:	18c00404 	addi	r3,r3,16
    5fb0:	39c00404 	addi	r7,r7,16
    5fb4:	42000404 	addi	r8,r8,16
    5fb8:	6b400404 	addi	r13,r13,16
    5fbc:	63000404 	addi	r12,r12,16
    5fc0:	5ac00404 	addi	r11,r11,16
    5fc4:	52800404 	addi	r10,r10,16
    5fc8:	4a400404 	addi	r9,r9,16
    5fcc:	1c3fef1e 	bne	r3,r16,5f8c <__alt_data_end+0xfffbcbac>
    5fd0:	89c00044 	addi	r7,r17,1
    5fd4:	380e913a 	slli	r7,r7,4
    5fd8:	310003cc 	andi	r4,r6,15
    5fdc:	02c000c4 	movi	r11,3
    5fe0:	11c7883a 	add	r3,r2,r7
    5fe4:	29cb883a 	add	r5,r5,r7
    5fe8:	5900212e 	bgeu	r11,r4,6070 <memcpy+0x140>
    5fec:	1813883a 	mov	r9,r3
    5ff0:	2811883a 	mov	r8,r5
    5ff4:	200f883a 	mov	r7,r4
    5ff8:	42800017 	ldw	r10,0(r8)
    5ffc:	4a400104 	addi	r9,r9,4
    6000:	39ffff04 	addi	r7,r7,-4
    6004:	4abfff15 	stw	r10,-4(r9)
    6008:	42000104 	addi	r8,r8,4
    600c:	59fffa36 	bltu	r11,r7,5ff8 <__alt_data_end+0xfffbcc18>
    6010:	213fff04 	addi	r4,r4,-4
    6014:	2008d0ba 	srli	r4,r4,2
    6018:	318000cc 	andi	r6,r6,3
    601c:	21000044 	addi	r4,r4,1
    6020:	2109883a 	add	r4,r4,r4
    6024:	2109883a 	add	r4,r4,r4
    6028:	1907883a 	add	r3,r3,r4
    602c:	290b883a 	add	r5,r5,r4
    6030:	30000626 	beq	r6,zero,604c <memcpy+0x11c>
    6034:	198d883a 	add	r6,r3,r6
    6038:	29c00003 	ldbu	r7,0(r5)
    603c:	18c00044 	addi	r3,r3,1
    6040:	29400044 	addi	r5,r5,1
    6044:	19ffffc5 	stb	r7,-1(r3)
    6048:	19bffb1e 	bne	r3,r6,6038 <__alt_data_end+0xfffbcc58>
    604c:	dfc00217 	ldw	ra,8(sp)
    6050:	dc400117 	ldw	r17,4(sp)
    6054:	dc000017 	ldw	r16,0(sp)
    6058:	dec00304 	addi	sp,sp,12
    605c:	f800283a 	ret
    6060:	2007883a 	mov	r3,r4
    6064:	003ff206 	br	6030 <__alt_data_end+0xfffbcc50>
    6068:	2007883a 	mov	r3,r4
    606c:	003ff106 	br	6034 <__alt_data_end+0xfffbcc54>
    6070:	200d883a 	mov	r6,r4
    6074:	003fee06 	br	6030 <__alt_data_end+0xfffbcc50>

00006078 <memmove>:
    6078:	2005883a 	mov	r2,r4
    607c:	29000b2e 	bgeu	r5,r4,60ac <memmove+0x34>
    6080:	298f883a 	add	r7,r5,r6
    6084:	21c0092e 	bgeu	r4,r7,60ac <memmove+0x34>
    6088:	2187883a 	add	r3,r4,r6
    608c:	198bc83a 	sub	r5,r3,r6
    6090:	30004826 	beq	r6,zero,61b4 <memmove+0x13c>
    6094:	39ffffc4 	addi	r7,r7,-1
    6098:	39000003 	ldbu	r4,0(r7)
    609c:	18ffffc4 	addi	r3,r3,-1
    60a0:	19000005 	stb	r4,0(r3)
    60a4:	28fffb1e 	bne	r5,r3,6094 <__alt_data_end+0xfffbccb4>
    60a8:	f800283a 	ret
    60ac:	00c003c4 	movi	r3,15
    60b0:	1980412e 	bgeu	r3,r6,61b8 <memmove+0x140>
    60b4:	2886b03a 	or	r3,r5,r2
    60b8:	18c000cc 	andi	r3,r3,3
    60bc:	1800401e 	bne	r3,zero,61c0 <memmove+0x148>
    60c0:	33fffc04 	addi	r15,r6,-16
    60c4:	781ed13a 	srli	r15,r15,4
    60c8:	28c00104 	addi	r3,r5,4
    60cc:	13400104 	addi	r13,r2,4
    60d0:	781c913a 	slli	r14,r15,4
    60d4:	2b000204 	addi	r12,r5,8
    60d8:	12c00204 	addi	r11,r2,8
    60dc:	73800504 	addi	r14,r14,20
    60e0:	2a800304 	addi	r10,r5,12
    60e4:	12400304 	addi	r9,r2,12
    60e8:	2b9d883a 	add	r14,r5,r14
    60ec:	2811883a 	mov	r8,r5
    60f0:	100f883a 	mov	r7,r2
    60f4:	41000017 	ldw	r4,0(r8)
    60f8:	39c00404 	addi	r7,r7,16
    60fc:	18c00404 	addi	r3,r3,16
    6100:	393ffc15 	stw	r4,-16(r7)
    6104:	193ffc17 	ldw	r4,-16(r3)
    6108:	6b400404 	addi	r13,r13,16
    610c:	5ac00404 	addi	r11,r11,16
    6110:	693ffc15 	stw	r4,-16(r13)
    6114:	61000017 	ldw	r4,0(r12)
    6118:	4a400404 	addi	r9,r9,16
    611c:	42000404 	addi	r8,r8,16
    6120:	593ffc15 	stw	r4,-16(r11)
    6124:	51000017 	ldw	r4,0(r10)
    6128:	63000404 	addi	r12,r12,16
    612c:	52800404 	addi	r10,r10,16
    6130:	493ffc15 	stw	r4,-16(r9)
    6134:	1bbfef1e 	bne	r3,r14,60f4 <__alt_data_end+0xfffbcd14>
    6138:	79000044 	addi	r4,r15,1
    613c:	2008913a 	slli	r4,r4,4
    6140:	328003cc 	andi	r10,r6,15
    6144:	02c000c4 	movi	r11,3
    6148:	1107883a 	add	r3,r2,r4
    614c:	290b883a 	add	r5,r5,r4
    6150:	5a801e2e 	bgeu	r11,r10,61cc <memmove+0x154>
    6154:	1813883a 	mov	r9,r3
    6158:	2811883a 	mov	r8,r5
    615c:	500f883a 	mov	r7,r10
    6160:	41000017 	ldw	r4,0(r8)
    6164:	4a400104 	addi	r9,r9,4
    6168:	39ffff04 	addi	r7,r7,-4
    616c:	493fff15 	stw	r4,-4(r9)
    6170:	42000104 	addi	r8,r8,4
    6174:	59fffa36 	bltu	r11,r7,6160 <__alt_data_end+0xfffbcd80>
    6178:	513fff04 	addi	r4,r10,-4
    617c:	2008d0ba 	srli	r4,r4,2
    6180:	318000cc 	andi	r6,r6,3
    6184:	21000044 	addi	r4,r4,1
    6188:	2109883a 	add	r4,r4,r4
    618c:	2109883a 	add	r4,r4,r4
    6190:	1907883a 	add	r3,r3,r4
    6194:	290b883a 	add	r5,r5,r4
    6198:	30000b26 	beq	r6,zero,61c8 <memmove+0x150>
    619c:	198d883a 	add	r6,r3,r6
    61a0:	29c00003 	ldbu	r7,0(r5)
    61a4:	18c00044 	addi	r3,r3,1
    61a8:	29400044 	addi	r5,r5,1
    61ac:	19ffffc5 	stb	r7,-1(r3)
    61b0:	19bffb1e 	bne	r3,r6,61a0 <__alt_data_end+0xfffbcdc0>
    61b4:	f800283a 	ret
    61b8:	1007883a 	mov	r3,r2
    61bc:	003ff606 	br	6198 <__alt_data_end+0xfffbcdb8>
    61c0:	1007883a 	mov	r3,r2
    61c4:	003ff506 	br	619c <__alt_data_end+0xfffbcdbc>
    61c8:	f800283a 	ret
    61cc:	500d883a 	mov	r6,r10
    61d0:	003ff106 	br	6198 <__alt_data_end+0xfffbcdb8>

000061d4 <memset>:
    61d4:	20c000cc 	andi	r3,r4,3
    61d8:	2005883a 	mov	r2,r4
    61dc:	18004426 	beq	r3,zero,62f0 <memset+0x11c>
    61e0:	31ffffc4 	addi	r7,r6,-1
    61e4:	30004026 	beq	r6,zero,62e8 <memset+0x114>
    61e8:	2813883a 	mov	r9,r5
    61ec:	200d883a 	mov	r6,r4
    61f0:	2007883a 	mov	r3,r4
    61f4:	00000406 	br	6208 <memset+0x34>
    61f8:	3a3fffc4 	addi	r8,r7,-1
    61fc:	31800044 	addi	r6,r6,1
    6200:	38003926 	beq	r7,zero,62e8 <memset+0x114>
    6204:	400f883a 	mov	r7,r8
    6208:	18c00044 	addi	r3,r3,1
    620c:	32400005 	stb	r9,0(r6)
    6210:	1a0000cc 	andi	r8,r3,3
    6214:	403ff81e 	bne	r8,zero,61f8 <__alt_data_end+0xfffbce18>
    6218:	010000c4 	movi	r4,3
    621c:	21c02d2e 	bgeu	r4,r7,62d4 <memset+0x100>
    6220:	29003fcc 	andi	r4,r5,255
    6224:	200c923a 	slli	r6,r4,8
    6228:	3108b03a 	or	r4,r6,r4
    622c:	200c943a 	slli	r6,r4,16
    6230:	218cb03a 	or	r6,r4,r6
    6234:	010003c4 	movi	r4,15
    6238:	21c0182e 	bgeu	r4,r7,629c <memset+0xc8>
    623c:	3b3ffc04 	addi	r12,r7,-16
    6240:	6018d13a 	srli	r12,r12,4
    6244:	1a000104 	addi	r8,r3,4
    6248:	1ac00204 	addi	r11,r3,8
    624c:	6008913a 	slli	r4,r12,4
    6250:	1a800304 	addi	r10,r3,12
    6254:	1813883a 	mov	r9,r3
    6258:	21000504 	addi	r4,r4,20
    625c:	1909883a 	add	r4,r3,r4
    6260:	49800015 	stw	r6,0(r9)
    6264:	41800015 	stw	r6,0(r8)
    6268:	59800015 	stw	r6,0(r11)
    626c:	51800015 	stw	r6,0(r10)
    6270:	42000404 	addi	r8,r8,16
    6274:	4a400404 	addi	r9,r9,16
    6278:	5ac00404 	addi	r11,r11,16
    627c:	52800404 	addi	r10,r10,16
    6280:	413ff71e 	bne	r8,r4,6260 <__alt_data_end+0xfffbce80>
    6284:	63000044 	addi	r12,r12,1
    6288:	6018913a 	slli	r12,r12,4
    628c:	39c003cc 	andi	r7,r7,15
    6290:	010000c4 	movi	r4,3
    6294:	1b07883a 	add	r3,r3,r12
    6298:	21c00e2e 	bgeu	r4,r7,62d4 <memset+0x100>
    629c:	1813883a 	mov	r9,r3
    62a0:	3811883a 	mov	r8,r7
    62a4:	010000c4 	movi	r4,3
    62a8:	49800015 	stw	r6,0(r9)
    62ac:	423fff04 	addi	r8,r8,-4
    62b0:	4a400104 	addi	r9,r9,4
    62b4:	223ffc36 	bltu	r4,r8,62a8 <__alt_data_end+0xfffbcec8>
    62b8:	393fff04 	addi	r4,r7,-4
    62bc:	2008d0ba 	srli	r4,r4,2
    62c0:	39c000cc 	andi	r7,r7,3
    62c4:	21000044 	addi	r4,r4,1
    62c8:	2109883a 	add	r4,r4,r4
    62cc:	2109883a 	add	r4,r4,r4
    62d0:	1907883a 	add	r3,r3,r4
    62d4:	38000526 	beq	r7,zero,62ec <memset+0x118>
    62d8:	19cf883a 	add	r7,r3,r7
    62dc:	19400005 	stb	r5,0(r3)
    62e0:	18c00044 	addi	r3,r3,1
    62e4:	38fffd1e 	bne	r7,r3,62dc <__alt_data_end+0xfffbcefc>
    62e8:	f800283a 	ret
    62ec:	f800283a 	ret
    62f0:	2007883a 	mov	r3,r4
    62f4:	300f883a 	mov	r7,r6
    62f8:	003fc706 	br	6218 <__alt_data_end+0xfffbce38>

000062fc <_Balloc>:
    62fc:	20801317 	ldw	r2,76(r4)
    6300:	defffc04 	addi	sp,sp,-16
    6304:	dc400115 	stw	r17,4(sp)
    6308:	dc000015 	stw	r16,0(sp)
    630c:	dfc00315 	stw	ra,12(sp)
    6310:	dc800215 	stw	r18,8(sp)
    6314:	2023883a 	mov	r17,r4
    6318:	2821883a 	mov	r16,r5
    631c:	10000f26 	beq	r2,zero,635c <_Balloc+0x60>
    6320:	8407883a 	add	r3,r16,r16
    6324:	18c7883a 	add	r3,r3,r3
    6328:	10c7883a 	add	r3,r2,r3
    632c:	18800017 	ldw	r2,0(r3)
    6330:	10001126 	beq	r2,zero,6378 <_Balloc+0x7c>
    6334:	11000017 	ldw	r4,0(r2)
    6338:	19000015 	stw	r4,0(r3)
    633c:	10000415 	stw	zero,16(r2)
    6340:	10000315 	stw	zero,12(r2)
    6344:	dfc00317 	ldw	ra,12(sp)
    6348:	dc800217 	ldw	r18,8(sp)
    634c:	dc400117 	ldw	r17,4(sp)
    6350:	dc000017 	ldw	r16,0(sp)
    6354:	dec00404 	addi	sp,sp,16
    6358:	f800283a 	ret
    635c:	01800844 	movi	r6,33
    6360:	01400104 	movi	r5,4
    6364:	00093a40 	call	93a4 <_calloc_r>
    6368:	88801315 	stw	r2,76(r17)
    636c:	103fec1e 	bne	r2,zero,6320 <__alt_data_end+0xfffbcf40>
    6370:	0005883a 	mov	r2,zero
    6374:	003ff306 	br	6344 <__alt_data_end+0xfffbcf64>
    6378:	01400044 	movi	r5,1
    637c:	2c24983a 	sll	r18,r5,r16
    6380:	8809883a 	mov	r4,r17
    6384:	91800144 	addi	r6,r18,5
    6388:	318d883a 	add	r6,r6,r6
    638c:	318d883a 	add	r6,r6,r6
    6390:	00093a40 	call	93a4 <_calloc_r>
    6394:	103ff626 	beq	r2,zero,6370 <__alt_data_end+0xfffbcf90>
    6398:	14000115 	stw	r16,4(r2)
    639c:	14800215 	stw	r18,8(r2)
    63a0:	003fe606 	br	633c <__alt_data_end+0xfffbcf5c>

000063a4 <_Bfree>:
    63a4:	28000826 	beq	r5,zero,63c8 <_Bfree+0x24>
    63a8:	28c00117 	ldw	r3,4(r5)
    63ac:	20801317 	ldw	r2,76(r4)
    63b0:	18c7883a 	add	r3,r3,r3
    63b4:	18c7883a 	add	r3,r3,r3
    63b8:	10c5883a 	add	r2,r2,r3
    63bc:	10c00017 	ldw	r3,0(r2)
    63c0:	28c00015 	stw	r3,0(r5)
    63c4:	11400015 	stw	r5,0(r2)
    63c8:	f800283a 	ret

000063cc <__multadd>:
    63cc:	defff704 	addi	sp,sp,-36
    63d0:	dc800215 	stw	r18,8(sp)
    63d4:	2c800417 	ldw	r18,16(r5)
    63d8:	dd800615 	stw	r22,24(sp)
    63dc:	dd400515 	stw	r21,20(sp)
    63e0:	dd000415 	stw	r20,16(sp)
    63e4:	dcc00315 	stw	r19,12(sp)
    63e8:	dc400115 	stw	r17,4(sp)
    63ec:	dc000015 	stw	r16,0(sp)
    63f0:	dfc00815 	stw	ra,32(sp)
    63f4:	ddc00715 	stw	r23,28(sp)
    63f8:	2827883a 	mov	r19,r5
    63fc:	2029883a 	mov	r20,r4
    6400:	3023883a 	mov	r17,r6
    6404:	3821883a 	mov	r16,r7
    6408:	2d400504 	addi	r21,r5,20
    640c:	002d883a 	mov	r22,zero
    6410:	adc00017 	ldw	r23,0(r21)
    6414:	880b883a 	mov	r5,r17
    6418:	ad400104 	addi	r21,r21,4
    641c:	b93fffcc 	andi	r4,r23,65535
    6420:	000a9b00 	call	a9b0 <__mulsi3>
    6424:	b808d43a 	srli	r4,r23,16
    6428:	880b883a 	mov	r5,r17
    642c:	1421883a 	add	r16,r2,r16
    6430:	000a9b00 	call	a9b0 <__mulsi3>
    6434:	800ed43a 	srli	r7,r16,16
    6438:	80ffffcc 	andi	r3,r16,65535
    643c:	b5800044 	addi	r22,r22,1
    6440:	11c5883a 	add	r2,r2,r7
    6444:	100e943a 	slli	r7,r2,16
    6448:	1020d43a 	srli	r16,r2,16
    644c:	38c7883a 	add	r3,r7,r3
    6450:	a8ffff15 	stw	r3,-4(r21)
    6454:	b4bfee16 	blt	r22,r18,6410 <__alt_data_end+0xfffbd030>
    6458:	80000926 	beq	r16,zero,6480 <__multadd+0xb4>
    645c:	98800217 	ldw	r2,8(r19)
    6460:	9080130e 	bge	r18,r2,64b0 <__multadd+0xe4>
    6464:	90800144 	addi	r2,r18,5
    6468:	1085883a 	add	r2,r2,r2
    646c:	1085883a 	add	r2,r2,r2
    6470:	9885883a 	add	r2,r19,r2
    6474:	14000015 	stw	r16,0(r2)
    6478:	94800044 	addi	r18,r18,1
    647c:	9c800415 	stw	r18,16(r19)
    6480:	9805883a 	mov	r2,r19
    6484:	dfc00817 	ldw	ra,32(sp)
    6488:	ddc00717 	ldw	r23,28(sp)
    648c:	dd800617 	ldw	r22,24(sp)
    6490:	dd400517 	ldw	r21,20(sp)
    6494:	dd000417 	ldw	r20,16(sp)
    6498:	dcc00317 	ldw	r19,12(sp)
    649c:	dc800217 	ldw	r18,8(sp)
    64a0:	dc400117 	ldw	r17,4(sp)
    64a4:	dc000017 	ldw	r16,0(sp)
    64a8:	dec00904 	addi	sp,sp,36
    64ac:	f800283a 	ret
    64b0:	99400117 	ldw	r5,4(r19)
    64b4:	a009883a 	mov	r4,r20
    64b8:	29400044 	addi	r5,r5,1
    64bc:	00062fc0 	call	62fc <_Balloc>
    64c0:	99800417 	ldw	r6,16(r19)
    64c4:	99400304 	addi	r5,r19,12
    64c8:	11000304 	addi	r4,r2,12
    64cc:	31800084 	addi	r6,r6,2
    64d0:	318d883a 	add	r6,r6,r6
    64d4:	318d883a 	add	r6,r6,r6
    64d8:	1023883a 	mov	r17,r2
    64dc:	0005f300 	call	5f30 <memcpy>
    64e0:	98000a26 	beq	r19,zero,650c <__multadd+0x140>
    64e4:	98c00117 	ldw	r3,4(r19)
    64e8:	a0801317 	ldw	r2,76(r20)
    64ec:	18c7883a 	add	r3,r3,r3
    64f0:	18c7883a 	add	r3,r3,r3
    64f4:	10c5883a 	add	r2,r2,r3
    64f8:	10c00017 	ldw	r3,0(r2)
    64fc:	98c00015 	stw	r3,0(r19)
    6500:	14c00015 	stw	r19,0(r2)
    6504:	8827883a 	mov	r19,r17
    6508:	003fd606 	br	6464 <__alt_data_end+0xfffbd084>
    650c:	8827883a 	mov	r19,r17
    6510:	003fd406 	br	6464 <__alt_data_end+0xfffbd084>

00006514 <__s2b>:
    6514:	defff904 	addi	sp,sp,-28
    6518:	dc400115 	stw	r17,4(sp)
    651c:	dc000015 	stw	r16,0(sp)
    6520:	2023883a 	mov	r17,r4
    6524:	2821883a 	mov	r16,r5
    6528:	39000204 	addi	r4,r7,8
    652c:	01400244 	movi	r5,9
    6530:	dcc00315 	stw	r19,12(sp)
    6534:	dc800215 	stw	r18,8(sp)
    6538:	dfc00615 	stw	ra,24(sp)
    653c:	dd400515 	stw	r21,20(sp)
    6540:	dd000415 	stw	r20,16(sp)
    6544:	3825883a 	mov	r18,r7
    6548:	3027883a 	mov	r19,r6
    654c:	000a7fc0 	call	a7fc <__divsi3>
    6550:	00c00044 	movi	r3,1
    6554:	000b883a 	mov	r5,zero
    6558:	1880030e 	bge	r3,r2,6568 <__s2b+0x54>
    655c:	18c7883a 	add	r3,r3,r3
    6560:	29400044 	addi	r5,r5,1
    6564:	18bffd16 	blt	r3,r2,655c <__alt_data_end+0xfffbd17c>
    6568:	8809883a 	mov	r4,r17
    656c:	00062fc0 	call	62fc <_Balloc>
    6570:	d8c00717 	ldw	r3,28(sp)
    6574:	10c00515 	stw	r3,20(r2)
    6578:	00c00044 	movi	r3,1
    657c:	10c00415 	stw	r3,16(r2)
    6580:	00c00244 	movi	r3,9
    6584:	1cc0210e 	bge	r3,r19,660c <__s2b+0xf8>
    6588:	80eb883a 	add	r21,r16,r3
    658c:	a829883a 	mov	r20,r21
    6590:	84e1883a 	add	r16,r16,r19
    6594:	a1c00007 	ldb	r7,0(r20)
    6598:	01800284 	movi	r6,10
    659c:	a5000044 	addi	r20,r20,1
    65a0:	100b883a 	mov	r5,r2
    65a4:	39fff404 	addi	r7,r7,-48
    65a8:	8809883a 	mov	r4,r17
    65ac:	00063cc0 	call	63cc <__multadd>
    65b0:	a43ff81e 	bne	r20,r16,6594 <__alt_data_end+0xfffbd1b4>
    65b4:	ace1883a 	add	r16,r21,r19
    65b8:	843ffe04 	addi	r16,r16,-8
    65bc:	9c800a0e 	bge	r19,r18,65e8 <__s2b+0xd4>
    65c0:	94e5c83a 	sub	r18,r18,r19
    65c4:	84a5883a 	add	r18,r16,r18
    65c8:	81c00007 	ldb	r7,0(r16)
    65cc:	01800284 	movi	r6,10
    65d0:	84000044 	addi	r16,r16,1
    65d4:	100b883a 	mov	r5,r2
    65d8:	39fff404 	addi	r7,r7,-48
    65dc:	8809883a 	mov	r4,r17
    65e0:	00063cc0 	call	63cc <__multadd>
    65e4:	84bff81e 	bne	r16,r18,65c8 <__alt_data_end+0xfffbd1e8>
    65e8:	dfc00617 	ldw	ra,24(sp)
    65ec:	dd400517 	ldw	r21,20(sp)
    65f0:	dd000417 	ldw	r20,16(sp)
    65f4:	dcc00317 	ldw	r19,12(sp)
    65f8:	dc800217 	ldw	r18,8(sp)
    65fc:	dc400117 	ldw	r17,4(sp)
    6600:	dc000017 	ldw	r16,0(sp)
    6604:	dec00704 	addi	sp,sp,28
    6608:	f800283a 	ret
    660c:	84000284 	addi	r16,r16,10
    6610:	1827883a 	mov	r19,r3
    6614:	003fe906 	br	65bc <__alt_data_end+0xfffbd1dc>

00006618 <__hi0bits>:
    6618:	20bfffec 	andhi	r2,r4,65535
    661c:	1000141e 	bne	r2,zero,6670 <__hi0bits+0x58>
    6620:	2008943a 	slli	r4,r4,16
    6624:	00800404 	movi	r2,16
    6628:	20ffc02c 	andhi	r3,r4,65280
    662c:	1800021e 	bne	r3,zero,6638 <__hi0bits+0x20>
    6630:	2008923a 	slli	r4,r4,8
    6634:	10800204 	addi	r2,r2,8
    6638:	20fc002c 	andhi	r3,r4,61440
    663c:	1800021e 	bne	r3,zero,6648 <__hi0bits+0x30>
    6640:	2008913a 	slli	r4,r4,4
    6644:	10800104 	addi	r2,r2,4
    6648:	20f0002c 	andhi	r3,r4,49152
    664c:	1800031e 	bne	r3,zero,665c <__hi0bits+0x44>
    6650:	2109883a 	add	r4,r4,r4
    6654:	10800084 	addi	r2,r2,2
    6658:	2109883a 	add	r4,r4,r4
    665c:	20000316 	blt	r4,zero,666c <__hi0bits+0x54>
    6660:	2110002c 	andhi	r4,r4,16384
    6664:	2000041e 	bne	r4,zero,6678 <__hi0bits+0x60>
    6668:	00800804 	movi	r2,32
    666c:	f800283a 	ret
    6670:	0005883a 	mov	r2,zero
    6674:	003fec06 	br	6628 <__alt_data_end+0xfffbd248>
    6678:	10800044 	addi	r2,r2,1
    667c:	f800283a 	ret

00006680 <__lo0bits>:
    6680:	20c00017 	ldw	r3,0(r4)
    6684:	188001cc 	andi	r2,r3,7
    6688:	10000826 	beq	r2,zero,66ac <__lo0bits+0x2c>
    668c:	1880004c 	andi	r2,r3,1
    6690:	1000211e 	bne	r2,zero,6718 <__lo0bits+0x98>
    6694:	1880008c 	andi	r2,r3,2
    6698:	1000211e 	bne	r2,zero,6720 <__lo0bits+0xa0>
    669c:	1806d0ba 	srli	r3,r3,2
    66a0:	00800084 	movi	r2,2
    66a4:	20c00015 	stw	r3,0(r4)
    66a8:	f800283a 	ret
    66ac:	18bfffcc 	andi	r2,r3,65535
    66b0:	10001326 	beq	r2,zero,6700 <__lo0bits+0x80>
    66b4:	0005883a 	mov	r2,zero
    66b8:	19403fcc 	andi	r5,r3,255
    66bc:	2800021e 	bne	r5,zero,66c8 <__lo0bits+0x48>
    66c0:	1806d23a 	srli	r3,r3,8
    66c4:	10800204 	addi	r2,r2,8
    66c8:	194003cc 	andi	r5,r3,15
    66cc:	2800021e 	bne	r5,zero,66d8 <__lo0bits+0x58>
    66d0:	1806d13a 	srli	r3,r3,4
    66d4:	10800104 	addi	r2,r2,4
    66d8:	194000cc 	andi	r5,r3,3
    66dc:	2800021e 	bne	r5,zero,66e8 <__lo0bits+0x68>
    66e0:	1806d0ba 	srli	r3,r3,2
    66e4:	10800084 	addi	r2,r2,2
    66e8:	1940004c 	andi	r5,r3,1
    66ec:	2800081e 	bne	r5,zero,6710 <__lo0bits+0x90>
    66f0:	1806d07a 	srli	r3,r3,1
    66f4:	1800051e 	bne	r3,zero,670c <__lo0bits+0x8c>
    66f8:	00800804 	movi	r2,32
    66fc:	f800283a 	ret
    6700:	1806d43a 	srli	r3,r3,16
    6704:	00800404 	movi	r2,16
    6708:	003feb06 	br	66b8 <__alt_data_end+0xfffbd2d8>
    670c:	10800044 	addi	r2,r2,1
    6710:	20c00015 	stw	r3,0(r4)
    6714:	f800283a 	ret
    6718:	0005883a 	mov	r2,zero
    671c:	f800283a 	ret
    6720:	1806d07a 	srli	r3,r3,1
    6724:	00800044 	movi	r2,1
    6728:	20c00015 	stw	r3,0(r4)
    672c:	f800283a 	ret

00006730 <__i2b>:
    6730:	defffd04 	addi	sp,sp,-12
    6734:	dc000015 	stw	r16,0(sp)
    6738:	04000044 	movi	r16,1
    673c:	dc400115 	stw	r17,4(sp)
    6740:	2823883a 	mov	r17,r5
    6744:	800b883a 	mov	r5,r16
    6748:	dfc00215 	stw	ra,8(sp)
    674c:	00062fc0 	call	62fc <_Balloc>
    6750:	14400515 	stw	r17,20(r2)
    6754:	14000415 	stw	r16,16(r2)
    6758:	dfc00217 	ldw	ra,8(sp)
    675c:	dc400117 	ldw	r17,4(sp)
    6760:	dc000017 	ldw	r16,0(sp)
    6764:	dec00304 	addi	sp,sp,12
    6768:	f800283a 	ret

0000676c <__multiply>:
    676c:	deffef04 	addi	sp,sp,-68
    6770:	dc400815 	stw	r17,32(sp)
    6774:	dc000715 	stw	r16,28(sp)
    6778:	34400417 	ldw	r17,16(r6)
    677c:	2c000417 	ldw	r16,16(r5)
    6780:	dd800d15 	stw	r22,52(sp)
    6784:	dc800915 	stw	r18,36(sp)
    6788:	dfc01015 	stw	ra,64(sp)
    678c:	df000f15 	stw	fp,60(sp)
    6790:	ddc00e15 	stw	r23,56(sp)
    6794:	dd400c15 	stw	r21,48(sp)
    6798:	dd000b15 	stw	r20,44(sp)
    679c:	dcc00a15 	stw	r19,40(sp)
    67a0:	2825883a 	mov	r18,r5
    67a4:	302d883a 	mov	r22,r6
    67a8:	8440050e 	bge	r16,r17,67c0 <__multiply+0x54>
    67ac:	8007883a 	mov	r3,r16
    67b0:	3025883a 	mov	r18,r6
    67b4:	8821883a 	mov	r16,r17
    67b8:	282d883a 	mov	r22,r5
    67bc:	1823883a 	mov	r17,r3
    67c0:	90800217 	ldw	r2,8(r18)
    67c4:	8447883a 	add	r3,r16,r17
    67c8:	d8c00215 	stw	r3,8(sp)
    67cc:	91400117 	ldw	r5,4(r18)
    67d0:	10c0010e 	bge	r2,r3,67d8 <__multiply+0x6c>
    67d4:	29400044 	addi	r5,r5,1
    67d8:	00062fc0 	call	62fc <_Balloc>
    67dc:	d8c00217 	ldw	r3,8(sp)
    67e0:	d8800615 	stw	r2,24(sp)
    67e4:	18eb883a 	add	r21,r3,r3
    67e8:	ad6b883a 	add	r21,r21,r21
    67ec:	10c00504 	addi	r3,r2,20
    67f0:	1d6b883a 	add	r21,r3,r21
    67f4:	d8c00115 	stw	r3,4(sp)
    67f8:	dd400315 	stw	r21,12(sp)
    67fc:	1805883a 	mov	r2,r3
    6800:	1d40042e 	bgeu	r3,r21,6814 <__multiply+0xa8>
    6804:	d8c00317 	ldw	r3,12(sp)
    6808:	10000015 	stw	zero,0(r2)
    680c:	10800104 	addi	r2,r2,4
    6810:	10fffc36 	bltu	r2,r3,6804 <__alt_data_end+0xfffbd424>
    6814:	8c63883a 	add	r17,r17,r17
    6818:	b5800504 	addi	r22,r22,20
    681c:	8c63883a 	add	r17,r17,r17
    6820:	94800504 	addi	r18,r18,20
    6824:	8421883a 	add	r16,r16,r16
    6828:	b463883a 	add	r17,r22,r17
    682c:	8421883a 	add	r16,r16,r16
    6830:	dd800015 	stw	r22,0(sp)
    6834:	dc800415 	stw	r18,16(sp)
    6838:	dc400515 	stw	r17,20(sp)
    683c:	9429883a 	add	r20,r18,r16
    6840:	b4404f2e 	bgeu	r22,r17,6980 <__multiply+0x214>
    6844:	d8c00017 	ldw	r3,0(sp)
    6848:	1c800017 	ldw	r18,0(r3)
    684c:	947fffcc 	andi	r17,r18,65535
    6850:	88001e26 	beq	r17,zero,68cc <__multiply+0x160>
    6854:	dd800117 	ldw	r22,4(sp)
    6858:	dd400417 	ldw	r21,16(sp)
    685c:	0027883a 	mov	r19,zero
    6860:	ac800017 	ldw	r18,0(r21)
    6864:	b4000017 	ldw	r16,0(r22)
    6868:	880b883a 	mov	r5,r17
    686c:	913fffcc 	andi	r4,r18,65535
    6870:	000a9b00 	call	a9b0 <__mulsi3>
    6874:	9008d43a 	srli	r4,r18,16
    6878:	84bfffcc 	andi	r18,r16,65535
    687c:	1485883a 	add	r2,r2,r18
    6880:	14e5883a 	add	r18,r2,r19
    6884:	8020d43a 	srli	r16,r16,16
    6888:	9026d43a 	srli	r19,r18,16
    688c:	880b883a 	mov	r5,r17
    6890:	000a9b00 	call	a9b0 <__mulsi3>
    6894:	1405883a 	add	r2,r2,r16
    6898:	14e1883a 	add	r16,r2,r19
    689c:	90ffffcc 	andi	r3,r18,65535
    68a0:	8024943a 	slli	r18,r16,16
    68a4:	ad400104 	addi	r21,r21,4
    68a8:	b005883a 	mov	r2,r22
    68ac:	90c6b03a 	or	r3,r18,r3
    68b0:	b0c00015 	stw	r3,0(r22)
    68b4:	8026d43a 	srli	r19,r16,16
    68b8:	b5800104 	addi	r22,r22,4
    68bc:	ad3fe836 	bltu	r21,r20,6860 <__alt_data_end+0xfffbd480>
    68c0:	d8c00017 	ldw	r3,0(sp)
    68c4:	14c00115 	stw	r19,4(r2)
    68c8:	1c800017 	ldw	r18,0(r3)
    68cc:	9024d43a 	srli	r18,r18,16
    68d0:	90002226 	beq	r18,zero,695c <__multiply+0x1f0>
    68d4:	d8c00117 	ldw	r3,4(sp)
    68d8:	dd800417 	ldw	r22,16(sp)
    68dc:	002f883a 	mov	r23,zero
    68e0:	1f000017 	ldw	fp,0(r3)
    68e4:	1823883a 	mov	r17,r3
    68e8:	182b883a 	mov	r21,r3
    68ec:	e021883a 	mov	r16,fp
    68f0:	00000106 	br	68f8 <__multiply+0x18c>
    68f4:	982b883a 	mov	r21,r19
    68f8:	b100000b 	ldhu	r4,0(r22)
    68fc:	8020d43a 	srli	r16,r16,16
    6900:	900b883a 	mov	r5,r18
    6904:	000a9b00 	call	a9b0 <__mulsi3>
    6908:	1405883a 	add	r2,r2,r16
    690c:	15ef883a 	add	r23,r2,r23
    6910:	b804943a 	slli	r2,r23,16
    6914:	e0ffffcc 	andi	r3,fp,65535
    6918:	8c400104 	addi	r17,r17,4
    691c:	10c6b03a 	or	r3,r2,r3
    6920:	88ffff15 	stw	r3,-4(r17)
    6924:	b5800104 	addi	r22,r22,4
    6928:	b13fff17 	ldw	r4,-4(r22)
    692c:	acc00104 	addi	r19,r21,4
    6930:	900b883a 	mov	r5,r18
    6934:	2008d43a 	srli	r4,r4,16
    6938:	9c000017 	ldw	r16,0(r19)
    693c:	000a9b00 	call	a9b0 <__mulsi3>
    6940:	b806d43a 	srli	r3,r23,16
    6944:	813fffcc 	andi	r4,r16,65535
    6948:	1105883a 	add	r2,r2,r4
    694c:	10f9883a 	add	fp,r2,r3
    6950:	e02ed43a 	srli	r23,fp,16
    6954:	b53fe736 	bltu	r22,r20,68f4 <__alt_data_end+0xfffbd514>
    6958:	af000115 	stw	fp,4(r21)
    695c:	d8c00017 	ldw	r3,0(sp)
    6960:	d9000517 	ldw	r4,20(sp)
    6964:	18c00104 	addi	r3,r3,4
    6968:	d8c00015 	stw	r3,0(sp)
    696c:	d8c00117 	ldw	r3,4(sp)
    6970:	18c00104 	addi	r3,r3,4
    6974:	d8c00115 	stw	r3,4(sp)
    6978:	d8c00017 	ldw	r3,0(sp)
    697c:	193fb136 	bltu	r3,r4,6844 <__alt_data_end+0xfffbd464>
    6980:	d8c00217 	ldw	r3,8(sp)
    6984:	00c00c0e 	bge	zero,r3,69b8 <__multiply+0x24c>
    6988:	d8c00317 	ldw	r3,12(sp)
    698c:	18bfff17 	ldw	r2,-4(r3)
    6990:	1d7fff04 	addi	r21,r3,-4
    6994:	10000326 	beq	r2,zero,69a4 <__multiply+0x238>
    6998:	00000706 	br	69b8 <__multiply+0x24c>
    699c:	a8800017 	ldw	r2,0(r21)
    69a0:	1000051e 	bne	r2,zero,69b8 <__multiply+0x24c>
    69a4:	d8c00217 	ldw	r3,8(sp)
    69a8:	ad7fff04 	addi	r21,r21,-4
    69ac:	18ffffc4 	addi	r3,r3,-1
    69b0:	d8c00215 	stw	r3,8(sp)
    69b4:	183ff91e 	bne	r3,zero,699c <__alt_data_end+0xfffbd5bc>
    69b8:	d8c00617 	ldw	r3,24(sp)
    69bc:	d9000217 	ldw	r4,8(sp)
    69c0:	1805883a 	mov	r2,r3
    69c4:	19000415 	stw	r4,16(r3)
    69c8:	dfc01017 	ldw	ra,64(sp)
    69cc:	df000f17 	ldw	fp,60(sp)
    69d0:	ddc00e17 	ldw	r23,56(sp)
    69d4:	dd800d17 	ldw	r22,52(sp)
    69d8:	dd400c17 	ldw	r21,48(sp)
    69dc:	dd000b17 	ldw	r20,44(sp)
    69e0:	dcc00a17 	ldw	r19,40(sp)
    69e4:	dc800917 	ldw	r18,36(sp)
    69e8:	dc400817 	ldw	r17,32(sp)
    69ec:	dc000717 	ldw	r16,28(sp)
    69f0:	dec01104 	addi	sp,sp,68
    69f4:	f800283a 	ret

000069f8 <__pow5mult>:
    69f8:	defffa04 	addi	sp,sp,-24
    69fc:	dcc00315 	stw	r19,12(sp)
    6a00:	dc000015 	stw	r16,0(sp)
    6a04:	dfc00515 	stw	ra,20(sp)
    6a08:	dd000415 	stw	r20,16(sp)
    6a0c:	dc800215 	stw	r18,8(sp)
    6a10:	dc400115 	stw	r17,4(sp)
    6a14:	308000cc 	andi	r2,r6,3
    6a18:	3021883a 	mov	r16,r6
    6a1c:	2027883a 	mov	r19,r4
    6a20:	10002f1e 	bne	r2,zero,6ae0 <__pow5mult+0xe8>
    6a24:	2825883a 	mov	r18,r5
    6a28:	8021d0ba 	srai	r16,r16,2
    6a2c:	80001a26 	beq	r16,zero,6a98 <__pow5mult+0xa0>
    6a30:	9c401217 	ldw	r17,72(r19)
    6a34:	8800061e 	bne	r17,zero,6a50 <__pow5mult+0x58>
    6a38:	00003406 	br	6b0c <__pow5mult+0x114>
    6a3c:	8021d07a 	srai	r16,r16,1
    6a40:	80001526 	beq	r16,zero,6a98 <__pow5mult+0xa0>
    6a44:	88800017 	ldw	r2,0(r17)
    6a48:	10001c26 	beq	r2,zero,6abc <__pow5mult+0xc4>
    6a4c:	1023883a 	mov	r17,r2
    6a50:	8080004c 	andi	r2,r16,1
    6a54:	103ff926 	beq	r2,zero,6a3c <__alt_data_end+0xfffbd65c>
    6a58:	880d883a 	mov	r6,r17
    6a5c:	900b883a 	mov	r5,r18
    6a60:	9809883a 	mov	r4,r19
    6a64:	000676c0 	call	676c <__multiply>
    6a68:	90001b26 	beq	r18,zero,6ad8 <__pow5mult+0xe0>
    6a6c:	91000117 	ldw	r4,4(r18)
    6a70:	98c01317 	ldw	r3,76(r19)
    6a74:	8021d07a 	srai	r16,r16,1
    6a78:	2109883a 	add	r4,r4,r4
    6a7c:	2109883a 	add	r4,r4,r4
    6a80:	1907883a 	add	r3,r3,r4
    6a84:	19000017 	ldw	r4,0(r3)
    6a88:	91000015 	stw	r4,0(r18)
    6a8c:	1c800015 	stw	r18,0(r3)
    6a90:	1025883a 	mov	r18,r2
    6a94:	803feb1e 	bne	r16,zero,6a44 <__alt_data_end+0xfffbd664>
    6a98:	9005883a 	mov	r2,r18
    6a9c:	dfc00517 	ldw	ra,20(sp)
    6aa0:	dd000417 	ldw	r20,16(sp)
    6aa4:	dcc00317 	ldw	r19,12(sp)
    6aa8:	dc800217 	ldw	r18,8(sp)
    6aac:	dc400117 	ldw	r17,4(sp)
    6ab0:	dc000017 	ldw	r16,0(sp)
    6ab4:	dec00604 	addi	sp,sp,24
    6ab8:	f800283a 	ret
    6abc:	880d883a 	mov	r6,r17
    6ac0:	880b883a 	mov	r5,r17
    6ac4:	9809883a 	mov	r4,r19
    6ac8:	000676c0 	call	676c <__multiply>
    6acc:	88800015 	stw	r2,0(r17)
    6ad0:	10000015 	stw	zero,0(r2)
    6ad4:	003fdd06 	br	6a4c <__alt_data_end+0xfffbd66c>
    6ad8:	1025883a 	mov	r18,r2
    6adc:	003fd706 	br	6a3c <__alt_data_end+0xfffbd65c>
    6ae0:	10bfffc4 	addi	r2,r2,-1
    6ae4:	1085883a 	add	r2,r2,r2
    6ae8:	00c00074 	movhi	r3,1
    6aec:	18fec104 	addi	r3,r3,-1276
    6af0:	1085883a 	add	r2,r2,r2
    6af4:	1885883a 	add	r2,r3,r2
    6af8:	11800017 	ldw	r6,0(r2)
    6afc:	000f883a 	mov	r7,zero
    6b00:	00063cc0 	call	63cc <__multadd>
    6b04:	1025883a 	mov	r18,r2
    6b08:	003fc706 	br	6a28 <__alt_data_end+0xfffbd648>
    6b0c:	05000044 	movi	r20,1
    6b10:	a00b883a 	mov	r5,r20
    6b14:	9809883a 	mov	r4,r19
    6b18:	00062fc0 	call	62fc <_Balloc>
    6b1c:	1023883a 	mov	r17,r2
    6b20:	00809c44 	movi	r2,625
    6b24:	88800515 	stw	r2,20(r17)
    6b28:	8d000415 	stw	r20,16(r17)
    6b2c:	9c401215 	stw	r17,72(r19)
    6b30:	88000015 	stw	zero,0(r17)
    6b34:	003fc606 	br	6a50 <__alt_data_end+0xfffbd670>

00006b38 <__lshift>:
    6b38:	defff904 	addi	sp,sp,-28
    6b3c:	dd400515 	stw	r21,20(sp)
    6b40:	dcc00315 	stw	r19,12(sp)
    6b44:	302bd17a 	srai	r21,r6,5
    6b48:	2cc00417 	ldw	r19,16(r5)
    6b4c:	28800217 	ldw	r2,8(r5)
    6b50:	dd000415 	stw	r20,16(sp)
    6b54:	ace7883a 	add	r19,r21,r19
    6b58:	dc800215 	stw	r18,8(sp)
    6b5c:	dc400115 	stw	r17,4(sp)
    6b60:	dc000015 	stw	r16,0(sp)
    6b64:	dfc00615 	stw	ra,24(sp)
    6b68:	9c000044 	addi	r16,r19,1
    6b6c:	2823883a 	mov	r17,r5
    6b70:	3029883a 	mov	r20,r6
    6b74:	2025883a 	mov	r18,r4
    6b78:	29400117 	ldw	r5,4(r5)
    6b7c:	1400030e 	bge	r2,r16,6b8c <__lshift+0x54>
    6b80:	1085883a 	add	r2,r2,r2
    6b84:	29400044 	addi	r5,r5,1
    6b88:	143ffd16 	blt	r2,r16,6b80 <__alt_data_end+0xfffbd7a0>
    6b8c:	9009883a 	mov	r4,r18
    6b90:	00062fc0 	call	62fc <_Balloc>
    6b94:	10c00504 	addi	r3,r2,20
    6b98:	0540070e 	bge	zero,r21,6bb8 <__lshift+0x80>
    6b9c:	ad6b883a 	add	r21,r21,r21
    6ba0:	ad6b883a 	add	r21,r21,r21
    6ba4:	1809883a 	mov	r4,r3
    6ba8:	1d47883a 	add	r3,r3,r21
    6bac:	20000015 	stw	zero,0(r4)
    6bb0:	21000104 	addi	r4,r4,4
    6bb4:	193ffd1e 	bne	r3,r4,6bac <__alt_data_end+0xfffbd7cc>
    6bb8:	8a000417 	ldw	r8,16(r17)
    6bbc:	89000504 	addi	r4,r17,20
    6bc0:	a18007cc 	andi	r6,r20,31
    6bc4:	4211883a 	add	r8,r8,r8
    6bc8:	4211883a 	add	r8,r8,r8
    6bcc:	2211883a 	add	r8,r4,r8
    6bd0:	30002326 	beq	r6,zero,6c60 <__lshift+0x128>
    6bd4:	02400804 	movi	r9,32
    6bd8:	4993c83a 	sub	r9,r9,r6
    6bdc:	000b883a 	mov	r5,zero
    6be0:	21c00017 	ldw	r7,0(r4)
    6be4:	1815883a 	mov	r10,r3
    6be8:	18c00104 	addi	r3,r3,4
    6bec:	398e983a 	sll	r7,r7,r6
    6bf0:	21000104 	addi	r4,r4,4
    6bf4:	394ab03a 	or	r5,r7,r5
    6bf8:	197fff15 	stw	r5,-4(r3)
    6bfc:	217fff17 	ldw	r5,-4(r4)
    6c00:	2a4ad83a 	srl	r5,r5,r9
    6c04:	223ff636 	bltu	r4,r8,6be0 <__alt_data_end+0xfffbd800>
    6c08:	51400115 	stw	r5,4(r10)
    6c0c:	28001a1e 	bne	r5,zero,6c78 <__lshift+0x140>
    6c10:	843fffc4 	addi	r16,r16,-1
    6c14:	14000415 	stw	r16,16(r2)
    6c18:	88000826 	beq	r17,zero,6c3c <__lshift+0x104>
    6c1c:	89000117 	ldw	r4,4(r17)
    6c20:	90c01317 	ldw	r3,76(r18)
    6c24:	2109883a 	add	r4,r4,r4
    6c28:	2109883a 	add	r4,r4,r4
    6c2c:	1907883a 	add	r3,r3,r4
    6c30:	19000017 	ldw	r4,0(r3)
    6c34:	89000015 	stw	r4,0(r17)
    6c38:	1c400015 	stw	r17,0(r3)
    6c3c:	dfc00617 	ldw	ra,24(sp)
    6c40:	dd400517 	ldw	r21,20(sp)
    6c44:	dd000417 	ldw	r20,16(sp)
    6c48:	dcc00317 	ldw	r19,12(sp)
    6c4c:	dc800217 	ldw	r18,8(sp)
    6c50:	dc400117 	ldw	r17,4(sp)
    6c54:	dc000017 	ldw	r16,0(sp)
    6c58:	dec00704 	addi	sp,sp,28
    6c5c:	f800283a 	ret
    6c60:	21400017 	ldw	r5,0(r4)
    6c64:	18c00104 	addi	r3,r3,4
    6c68:	21000104 	addi	r4,r4,4
    6c6c:	197fff15 	stw	r5,-4(r3)
    6c70:	223ffb36 	bltu	r4,r8,6c60 <__alt_data_end+0xfffbd880>
    6c74:	003fe606 	br	6c10 <__alt_data_end+0xfffbd830>
    6c78:	9c000084 	addi	r16,r19,2
    6c7c:	003fe406 	br	6c10 <__alt_data_end+0xfffbd830>

00006c80 <__mcmp>:
    6c80:	20800417 	ldw	r2,16(r4)
    6c84:	28c00417 	ldw	r3,16(r5)
    6c88:	10c5c83a 	sub	r2,r2,r3
    6c8c:	1000111e 	bne	r2,zero,6cd4 <__mcmp+0x54>
    6c90:	18c7883a 	add	r3,r3,r3
    6c94:	18c7883a 	add	r3,r3,r3
    6c98:	21000504 	addi	r4,r4,20
    6c9c:	29400504 	addi	r5,r5,20
    6ca0:	20c5883a 	add	r2,r4,r3
    6ca4:	28cb883a 	add	r5,r5,r3
    6ca8:	00000106 	br	6cb0 <__mcmp+0x30>
    6cac:	20800a2e 	bgeu	r4,r2,6cd8 <__mcmp+0x58>
    6cb0:	10bfff04 	addi	r2,r2,-4
    6cb4:	297fff04 	addi	r5,r5,-4
    6cb8:	11800017 	ldw	r6,0(r2)
    6cbc:	28c00017 	ldw	r3,0(r5)
    6cc0:	30fffa26 	beq	r6,r3,6cac <__alt_data_end+0xfffbd8cc>
    6cc4:	30c00236 	bltu	r6,r3,6cd0 <__mcmp+0x50>
    6cc8:	00800044 	movi	r2,1
    6ccc:	f800283a 	ret
    6cd0:	00bfffc4 	movi	r2,-1
    6cd4:	f800283a 	ret
    6cd8:	0005883a 	mov	r2,zero
    6cdc:	f800283a 	ret

00006ce0 <__mdiff>:
    6ce0:	28c00417 	ldw	r3,16(r5)
    6ce4:	30800417 	ldw	r2,16(r6)
    6ce8:	defffa04 	addi	sp,sp,-24
    6cec:	dcc00315 	stw	r19,12(sp)
    6cf0:	dc800215 	stw	r18,8(sp)
    6cf4:	dfc00515 	stw	ra,20(sp)
    6cf8:	dd000415 	stw	r20,16(sp)
    6cfc:	dc400115 	stw	r17,4(sp)
    6d00:	dc000015 	stw	r16,0(sp)
    6d04:	1887c83a 	sub	r3,r3,r2
    6d08:	2825883a 	mov	r18,r5
    6d0c:	3027883a 	mov	r19,r6
    6d10:	1800141e 	bne	r3,zero,6d64 <__mdiff+0x84>
    6d14:	1085883a 	add	r2,r2,r2
    6d18:	1085883a 	add	r2,r2,r2
    6d1c:	2a000504 	addi	r8,r5,20
    6d20:	34000504 	addi	r16,r6,20
    6d24:	4087883a 	add	r3,r8,r2
    6d28:	8085883a 	add	r2,r16,r2
    6d2c:	00000106 	br	6d34 <__mdiff+0x54>
    6d30:	40c0592e 	bgeu	r8,r3,6e98 <__mdiff+0x1b8>
    6d34:	18ffff04 	addi	r3,r3,-4
    6d38:	10bfff04 	addi	r2,r2,-4
    6d3c:	19c00017 	ldw	r7,0(r3)
    6d40:	11400017 	ldw	r5,0(r2)
    6d44:	397ffa26 	beq	r7,r5,6d30 <__alt_data_end+0xfffbd950>
    6d48:	3940592e 	bgeu	r7,r5,6eb0 <__mdiff+0x1d0>
    6d4c:	9005883a 	mov	r2,r18
    6d50:	4023883a 	mov	r17,r8
    6d54:	9825883a 	mov	r18,r19
    6d58:	05000044 	movi	r20,1
    6d5c:	1027883a 	mov	r19,r2
    6d60:	00000406 	br	6d74 <__mdiff+0x94>
    6d64:	18005616 	blt	r3,zero,6ec0 <__mdiff+0x1e0>
    6d68:	34400504 	addi	r17,r6,20
    6d6c:	2c000504 	addi	r16,r5,20
    6d70:	0029883a 	mov	r20,zero
    6d74:	91400117 	ldw	r5,4(r18)
    6d78:	00062fc0 	call	62fc <_Balloc>
    6d7c:	92400417 	ldw	r9,16(r18)
    6d80:	9b000417 	ldw	r12,16(r19)
    6d84:	12c00504 	addi	r11,r2,20
    6d88:	4a51883a 	add	r8,r9,r9
    6d8c:	6319883a 	add	r12,r12,r12
    6d90:	4211883a 	add	r8,r8,r8
    6d94:	6319883a 	add	r12,r12,r12
    6d98:	15000315 	stw	r20,12(r2)
    6d9c:	8211883a 	add	r8,r16,r8
    6da0:	8b19883a 	add	r12,r17,r12
    6da4:	0007883a 	mov	r3,zero
    6da8:	81400017 	ldw	r5,0(r16)
    6dac:	89c00017 	ldw	r7,0(r17)
    6db0:	59800104 	addi	r6,r11,4
    6db4:	293fffcc 	andi	r4,r5,65535
    6db8:	20c7883a 	add	r3,r4,r3
    6dbc:	393fffcc 	andi	r4,r7,65535
    6dc0:	1909c83a 	sub	r4,r3,r4
    6dc4:	280ad43a 	srli	r5,r5,16
    6dc8:	380ed43a 	srli	r7,r7,16
    6dcc:	2007d43a 	srai	r3,r4,16
    6dd0:	213fffcc 	andi	r4,r4,65535
    6dd4:	29cbc83a 	sub	r5,r5,r7
    6dd8:	28c7883a 	add	r3,r5,r3
    6ddc:	180a943a 	slli	r5,r3,16
    6de0:	8c400104 	addi	r17,r17,4
    6de4:	84000104 	addi	r16,r16,4
    6de8:	2908b03a 	or	r4,r5,r4
    6dec:	59000015 	stw	r4,0(r11)
    6df0:	1807d43a 	srai	r3,r3,16
    6df4:	3015883a 	mov	r10,r6
    6df8:	3017883a 	mov	r11,r6
    6dfc:	8b3fea36 	bltu	r17,r12,6da8 <__alt_data_end+0xfffbd9c8>
    6e00:	8200162e 	bgeu	r16,r8,6e5c <__mdiff+0x17c>
    6e04:	8017883a 	mov	r11,r16
    6e08:	59400017 	ldw	r5,0(r11)
    6e0c:	31800104 	addi	r6,r6,4
    6e10:	5ac00104 	addi	r11,r11,4
    6e14:	293fffcc 	andi	r4,r5,65535
    6e18:	20c7883a 	add	r3,r4,r3
    6e1c:	280ed43a 	srli	r7,r5,16
    6e20:	180bd43a 	srai	r5,r3,16
    6e24:	193fffcc 	andi	r4,r3,65535
    6e28:	3947883a 	add	r3,r7,r5
    6e2c:	180a943a 	slli	r5,r3,16
    6e30:	1807d43a 	srai	r3,r3,16
    6e34:	2908b03a 	or	r4,r5,r4
    6e38:	313fff15 	stw	r4,-4(r6)
    6e3c:	5a3ff236 	bltu	r11,r8,6e08 <__alt_data_end+0xfffbda28>
    6e40:	0406303a 	nor	r3,zero,r16
    6e44:	1a07883a 	add	r3,r3,r8
    6e48:	1806d0ba 	srli	r3,r3,2
    6e4c:	18c00044 	addi	r3,r3,1
    6e50:	18c7883a 	add	r3,r3,r3
    6e54:	18c7883a 	add	r3,r3,r3
    6e58:	50d5883a 	add	r10,r10,r3
    6e5c:	50ffff04 	addi	r3,r10,-4
    6e60:	2000041e 	bne	r4,zero,6e74 <__mdiff+0x194>
    6e64:	18ffff04 	addi	r3,r3,-4
    6e68:	19000017 	ldw	r4,0(r3)
    6e6c:	4a7fffc4 	addi	r9,r9,-1
    6e70:	203ffc26 	beq	r4,zero,6e64 <__alt_data_end+0xfffbda84>
    6e74:	12400415 	stw	r9,16(r2)
    6e78:	dfc00517 	ldw	ra,20(sp)
    6e7c:	dd000417 	ldw	r20,16(sp)
    6e80:	dcc00317 	ldw	r19,12(sp)
    6e84:	dc800217 	ldw	r18,8(sp)
    6e88:	dc400117 	ldw	r17,4(sp)
    6e8c:	dc000017 	ldw	r16,0(sp)
    6e90:	dec00604 	addi	sp,sp,24
    6e94:	f800283a 	ret
    6e98:	000b883a 	mov	r5,zero
    6e9c:	00062fc0 	call	62fc <_Balloc>
    6ea0:	00c00044 	movi	r3,1
    6ea4:	10c00415 	stw	r3,16(r2)
    6ea8:	10000515 	stw	zero,20(r2)
    6eac:	003ff206 	br	6e78 <__alt_data_end+0xfffbda98>
    6eb0:	8023883a 	mov	r17,r16
    6eb4:	0029883a 	mov	r20,zero
    6eb8:	4021883a 	mov	r16,r8
    6ebc:	003fad06 	br	6d74 <__alt_data_end+0xfffbd994>
    6ec0:	9005883a 	mov	r2,r18
    6ec4:	94400504 	addi	r17,r18,20
    6ec8:	9c000504 	addi	r16,r19,20
    6ecc:	9825883a 	mov	r18,r19
    6ed0:	05000044 	movi	r20,1
    6ed4:	1027883a 	mov	r19,r2
    6ed8:	003fa606 	br	6d74 <__alt_data_end+0xfffbd994>

00006edc <__ulp>:
    6edc:	295ffc2c 	andhi	r5,r5,32752
    6ee0:	00bf3034 	movhi	r2,64704
    6ee4:	2887883a 	add	r3,r5,r2
    6ee8:	00c0020e 	bge	zero,r3,6ef4 <__ulp+0x18>
    6eec:	0005883a 	mov	r2,zero
    6ef0:	f800283a 	ret
    6ef4:	00c7c83a 	sub	r3,zero,r3
    6ef8:	1807d53a 	srai	r3,r3,20
    6efc:	008004c4 	movi	r2,19
    6f00:	10c00b0e 	bge	r2,r3,6f30 <__ulp+0x54>
    6f04:	18bffb04 	addi	r2,r3,-20
    6f08:	01000784 	movi	r4,30
    6f0c:	0007883a 	mov	r3,zero
    6f10:	20800516 	blt	r4,r2,6f28 <__ulp+0x4c>
    6f14:	010007c4 	movi	r4,31
    6f18:	2089c83a 	sub	r4,r4,r2
    6f1c:	00800044 	movi	r2,1
    6f20:	1104983a 	sll	r2,r2,r4
    6f24:	f800283a 	ret
    6f28:	00800044 	movi	r2,1
    6f2c:	f800283a 	ret
    6f30:	01400234 	movhi	r5,8
    6f34:	28c7d83a 	sra	r3,r5,r3
    6f38:	0005883a 	mov	r2,zero
    6f3c:	f800283a 	ret

00006f40 <__b2d>:
    6f40:	defffa04 	addi	sp,sp,-24
    6f44:	dc000015 	stw	r16,0(sp)
    6f48:	24000417 	ldw	r16,16(r4)
    6f4c:	dc400115 	stw	r17,4(sp)
    6f50:	24400504 	addi	r17,r4,20
    6f54:	8421883a 	add	r16,r16,r16
    6f58:	8421883a 	add	r16,r16,r16
    6f5c:	8c21883a 	add	r16,r17,r16
    6f60:	dc800215 	stw	r18,8(sp)
    6f64:	84bfff17 	ldw	r18,-4(r16)
    6f68:	dd000415 	stw	r20,16(sp)
    6f6c:	dcc00315 	stw	r19,12(sp)
    6f70:	9009883a 	mov	r4,r18
    6f74:	2829883a 	mov	r20,r5
    6f78:	dfc00515 	stw	ra,20(sp)
    6f7c:	00066180 	call	6618 <__hi0bits>
    6f80:	00c00804 	movi	r3,32
    6f84:	1889c83a 	sub	r4,r3,r2
    6f88:	a1000015 	stw	r4,0(r20)
    6f8c:	01000284 	movi	r4,10
    6f90:	84ffff04 	addi	r19,r16,-4
    6f94:	20801216 	blt	r4,r2,6fe0 <__b2d+0xa0>
    6f98:	018002c4 	movi	r6,11
    6f9c:	308dc83a 	sub	r6,r6,r2
    6fa0:	9186d83a 	srl	r3,r18,r6
    6fa4:	18cffc34 	orhi	r3,r3,16368
    6fa8:	8cc0212e 	bgeu	r17,r19,7030 <__b2d+0xf0>
    6fac:	813ffe17 	ldw	r4,-8(r16)
    6fb0:	218cd83a 	srl	r6,r4,r6
    6fb4:	10800544 	addi	r2,r2,21
    6fb8:	9084983a 	sll	r2,r18,r2
    6fbc:	1184b03a 	or	r2,r2,r6
    6fc0:	dfc00517 	ldw	ra,20(sp)
    6fc4:	dd000417 	ldw	r20,16(sp)
    6fc8:	dcc00317 	ldw	r19,12(sp)
    6fcc:	dc800217 	ldw	r18,8(sp)
    6fd0:	dc400117 	ldw	r17,4(sp)
    6fd4:	dc000017 	ldw	r16,0(sp)
    6fd8:	dec00604 	addi	sp,sp,24
    6fdc:	f800283a 	ret
    6fe0:	8cc00f2e 	bgeu	r17,r19,7020 <__b2d+0xe0>
    6fe4:	117ffd44 	addi	r5,r2,-11
    6fe8:	80bffe17 	ldw	r2,-8(r16)
    6fec:	28000e26 	beq	r5,zero,7028 <__b2d+0xe8>
    6ff0:	1949c83a 	sub	r4,r3,r5
    6ff4:	9164983a 	sll	r18,r18,r5
    6ff8:	1106d83a 	srl	r3,r2,r4
    6ffc:	81bffe04 	addi	r6,r16,-8
    7000:	948ffc34 	orhi	r18,r18,16368
    7004:	90c6b03a 	or	r3,r18,r3
    7008:	89800e2e 	bgeu	r17,r6,7044 <__b2d+0x104>
    700c:	81bffd17 	ldw	r6,-12(r16)
    7010:	1144983a 	sll	r2,r2,r5
    7014:	310ad83a 	srl	r5,r6,r4
    7018:	2884b03a 	or	r2,r5,r2
    701c:	003fe806 	br	6fc0 <__alt_data_end+0xfffbdbe0>
    7020:	10bffd44 	addi	r2,r2,-11
    7024:	1000041e 	bne	r2,zero,7038 <__b2d+0xf8>
    7028:	90cffc34 	orhi	r3,r18,16368
    702c:	003fe406 	br	6fc0 <__alt_data_end+0xfffbdbe0>
    7030:	000d883a 	mov	r6,zero
    7034:	003fdf06 	br	6fb4 <__alt_data_end+0xfffbdbd4>
    7038:	90a4983a 	sll	r18,r18,r2
    703c:	0005883a 	mov	r2,zero
    7040:	003ff906 	br	7028 <__alt_data_end+0xfffbdc48>
    7044:	1144983a 	sll	r2,r2,r5
    7048:	003fdd06 	br	6fc0 <__alt_data_end+0xfffbdbe0>

0000704c <__d2b>:
    704c:	defff804 	addi	sp,sp,-32
    7050:	dc000215 	stw	r16,8(sp)
    7054:	3021883a 	mov	r16,r6
    7058:	dc400315 	stw	r17,12(sp)
    705c:	8022907a 	slli	r17,r16,1
    7060:	dd000615 	stw	r20,24(sp)
    7064:	2829883a 	mov	r20,r5
    7068:	01400044 	movi	r5,1
    706c:	dcc00515 	stw	r19,20(sp)
    7070:	dc800415 	stw	r18,16(sp)
    7074:	dfc00715 	stw	ra,28(sp)
    7078:	3825883a 	mov	r18,r7
    707c:	8822d57a 	srli	r17,r17,21
    7080:	00062fc0 	call	62fc <_Balloc>
    7084:	1027883a 	mov	r19,r2
    7088:	00800434 	movhi	r2,16
    708c:	10bfffc4 	addi	r2,r2,-1
    7090:	808c703a 	and	r6,r16,r2
    7094:	88000126 	beq	r17,zero,709c <__d2b+0x50>
    7098:	31800434 	orhi	r6,r6,16
    709c:	d9800015 	stw	r6,0(sp)
    70a0:	a0002426 	beq	r20,zero,7134 <__d2b+0xe8>
    70a4:	d9000104 	addi	r4,sp,4
    70a8:	dd000115 	stw	r20,4(sp)
    70ac:	00066800 	call	6680 <__lo0bits>
    70b0:	d8c00017 	ldw	r3,0(sp)
    70b4:	10002f1e 	bne	r2,zero,7174 <__d2b+0x128>
    70b8:	d9000117 	ldw	r4,4(sp)
    70bc:	99000515 	stw	r4,20(r19)
    70c0:	1821003a 	cmpeq	r16,r3,zero
    70c4:	01000084 	movi	r4,2
    70c8:	2421c83a 	sub	r16,r4,r16
    70cc:	98c00615 	stw	r3,24(r19)
    70d0:	9c000415 	stw	r16,16(r19)
    70d4:	88001f1e 	bne	r17,zero,7154 <__d2b+0x108>
    70d8:	10bef384 	addi	r2,r2,-1074
    70dc:	90800015 	stw	r2,0(r18)
    70e0:	00900034 	movhi	r2,16384
    70e4:	10bfffc4 	addi	r2,r2,-1
    70e8:	8085883a 	add	r2,r16,r2
    70ec:	1085883a 	add	r2,r2,r2
    70f0:	1085883a 	add	r2,r2,r2
    70f4:	9885883a 	add	r2,r19,r2
    70f8:	11000517 	ldw	r4,20(r2)
    70fc:	8020917a 	slli	r16,r16,5
    7100:	00066180 	call	6618 <__hi0bits>
    7104:	d8c00817 	ldw	r3,32(sp)
    7108:	8085c83a 	sub	r2,r16,r2
    710c:	18800015 	stw	r2,0(r3)
    7110:	9805883a 	mov	r2,r19
    7114:	dfc00717 	ldw	ra,28(sp)
    7118:	dd000617 	ldw	r20,24(sp)
    711c:	dcc00517 	ldw	r19,20(sp)
    7120:	dc800417 	ldw	r18,16(sp)
    7124:	dc400317 	ldw	r17,12(sp)
    7128:	dc000217 	ldw	r16,8(sp)
    712c:	dec00804 	addi	sp,sp,32
    7130:	f800283a 	ret
    7134:	d809883a 	mov	r4,sp
    7138:	00066800 	call	6680 <__lo0bits>
    713c:	d8c00017 	ldw	r3,0(sp)
    7140:	04000044 	movi	r16,1
    7144:	9c000415 	stw	r16,16(r19)
    7148:	98c00515 	stw	r3,20(r19)
    714c:	10800804 	addi	r2,r2,32
    7150:	883fe126 	beq	r17,zero,70d8 <__alt_data_end+0xfffbdcf8>
    7154:	00c00d44 	movi	r3,53
    7158:	8c7ef344 	addi	r17,r17,-1075
    715c:	88a3883a 	add	r17,r17,r2
    7160:	1885c83a 	sub	r2,r3,r2
    7164:	d8c00817 	ldw	r3,32(sp)
    7168:	94400015 	stw	r17,0(r18)
    716c:	18800015 	stw	r2,0(r3)
    7170:	003fe706 	br	7110 <__alt_data_end+0xfffbdd30>
    7174:	01000804 	movi	r4,32
    7178:	2089c83a 	sub	r4,r4,r2
    717c:	1908983a 	sll	r4,r3,r4
    7180:	d9400117 	ldw	r5,4(sp)
    7184:	1886d83a 	srl	r3,r3,r2
    7188:	2148b03a 	or	r4,r4,r5
    718c:	99000515 	stw	r4,20(r19)
    7190:	d8c00015 	stw	r3,0(sp)
    7194:	003fca06 	br	70c0 <__alt_data_end+0xfffbdce0>

00007198 <__ratio>:
    7198:	defff904 	addi	sp,sp,-28
    719c:	dc400315 	stw	r17,12(sp)
    71a0:	2823883a 	mov	r17,r5
    71a4:	d9400104 	addi	r5,sp,4
    71a8:	dfc00615 	stw	ra,24(sp)
    71ac:	dcc00515 	stw	r19,20(sp)
    71b0:	dc800415 	stw	r18,16(sp)
    71b4:	2027883a 	mov	r19,r4
    71b8:	dc000215 	stw	r16,8(sp)
    71bc:	0006f400 	call	6f40 <__b2d>
    71c0:	d80b883a 	mov	r5,sp
    71c4:	8809883a 	mov	r4,r17
    71c8:	1025883a 	mov	r18,r2
    71cc:	1821883a 	mov	r16,r3
    71d0:	0006f400 	call	6f40 <__b2d>
    71d4:	8a000417 	ldw	r8,16(r17)
    71d8:	99000417 	ldw	r4,16(r19)
    71dc:	d9400117 	ldw	r5,4(sp)
    71e0:	2209c83a 	sub	r4,r4,r8
    71e4:	2010917a 	slli	r8,r4,5
    71e8:	d9000017 	ldw	r4,0(sp)
    71ec:	2909c83a 	sub	r4,r5,r4
    71f0:	4109883a 	add	r4,r8,r4
    71f4:	01000e0e 	bge	zero,r4,7230 <__ratio+0x98>
    71f8:	2008953a 	slli	r4,r4,20
    71fc:	2421883a 	add	r16,r4,r16
    7200:	100d883a 	mov	r6,r2
    7204:	180f883a 	mov	r7,r3
    7208:	9009883a 	mov	r4,r18
    720c:	800b883a 	mov	r5,r16
    7210:	000b2840 	call	b284 <__divdf3>
    7214:	dfc00617 	ldw	ra,24(sp)
    7218:	dcc00517 	ldw	r19,20(sp)
    721c:	dc800417 	ldw	r18,16(sp)
    7220:	dc400317 	ldw	r17,12(sp)
    7224:	dc000217 	ldw	r16,8(sp)
    7228:	dec00704 	addi	sp,sp,28
    722c:	f800283a 	ret
    7230:	2008953a 	slli	r4,r4,20
    7234:	1907c83a 	sub	r3,r3,r4
    7238:	003ff106 	br	7200 <__alt_data_end+0xfffbde20>

0000723c <_mprec_log10>:
    723c:	defffe04 	addi	sp,sp,-8
    7240:	dc000015 	stw	r16,0(sp)
    7244:	dfc00115 	stw	ra,4(sp)
    7248:	008005c4 	movi	r2,23
    724c:	2021883a 	mov	r16,r4
    7250:	11000d0e 	bge	r2,r4,7288 <_mprec_log10+0x4c>
    7254:	0005883a 	mov	r2,zero
    7258:	00cffc34 	movhi	r3,16368
    725c:	843fffc4 	addi	r16,r16,-1
    7260:	000d883a 	mov	r6,zero
    7264:	01d00934 	movhi	r7,16420
    7268:	1009883a 	mov	r4,r2
    726c:	180b883a 	mov	r5,r3
    7270:	000beac0 	call	beac <__muldf3>
    7274:	803ff91e 	bne	r16,zero,725c <__alt_data_end+0xfffbde7c>
    7278:	dfc00117 	ldw	ra,4(sp)
    727c:	dc000017 	ldw	r16,0(sp)
    7280:	dec00204 	addi	sp,sp,8
    7284:	f800283a 	ret
    7288:	202090fa 	slli	r16,r4,3
    728c:	00800074 	movhi	r2,1
    7290:	10bed804 	addi	r2,r2,-1184
    7294:	1421883a 	add	r16,r2,r16
    7298:	80800017 	ldw	r2,0(r16)
    729c:	80c00117 	ldw	r3,4(r16)
    72a0:	dfc00117 	ldw	ra,4(sp)
    72a4:	dc000017 	ldw	r16,0(sp)
    72a8:	dec00204 	addi	sp,sp,8
    72ac:	f800283a 	ret

000072b0 <__copybits>:
    72b0:	297fffc4 	addi	r5,r5,-1
    72b4:	280fd17a 	srai	r7,r5,5
    72b8:	30c00417 	ldw	r3,16(r6)
    72bc:	30800504 	addi	r2,r6,20
    72c0:	39c00044 	addi	r7,r7,1
    72c4:	18c7883a 	add	r3,r3,r3
    72c8:	39cf883a 	add	r7,r7,r7
    72cc:	18c7883a 	add	r3,r3,r3
    72d0:	39cf883a 	add	r7,r7,r7
    72d4:	10c7883a 	add	r3,r2,r3
    72d8:	21cf883a 	add	r7,r4,r7
    72dc:	10c00d2e 	bgeu	r2,r3,7314 <__copybits+0x64>
    72e0:	200b883a 	mov	r5,r4
    72e4:	12000017 	ldw	r8,0(r2)
    72e8:	29400104 	addi	r5,r5,4
    72ec:	10800104 	addi	r2,r2,4
    72f0:	2a3fff15 	stw	r8,-4(r5)
    72f4:	10fffb36 	bltu	r2,r3,72e4 <__alt_data_end+0xfffbdf04>
    72f8:	1985c83a 	sub	r2,r3,r6
    72fc:	10bffac4 	addi	r2,r2,-21
    7300:	1004d0ba 	srli	r2,r2,2
    7304:	10800044 	addi	r2,r2,1
    7308:	1085883a 	add	r2,r2,r2
    730c:	1085883a 	add	r2,r2,r2
    7310:	2089883a 	add	r4,r4,r2
    7314:	21c0032e 	bgeu	r4,r7,7324 <__copybits+0x74>
    7318:	20000015 	stw	zero,0(r4)
    731c:	21000104 	addi	r4,r4,4
    7320:	21fffd36 	bltu	r4,r7,7318 <__alt_data_end+0xfffbdf38>
    7324:	f800283a 	ret

00007328 <__any_on>:
    7328:	20c00417 	ldw	r3,16(r4)
    732c:	2805d17a 	srai	r2,r5,5
    7330:	21000504 	addi	r4,r4,20
    7334:	18800d0e 	bge	r3,r2,736c <__any_on+0x44>
    7338:	18c7883a 	add	r3,r3,r3
    733c:	18c7883a 	add	r3,r3,r3
    7340:	20c7883a 	add	r3,r4,r3
    7344:	20c0192e 	bgeu	r4,r3,73ac <__any_on+0x84>
    7348:	18bfff17 	ldw	r2,-4(r3)
    734c:	18ffff04 	addi	r3,r3,-4
    7350:	1000041e 	bne	r2,zero,7364 <__any_on+0x3c>
    7354:	20c0142e 	bgeu	r4,r3,73a8 <__any_on+0x80>
    7358:	18ffff04 	addi	r3,r3,-4
    735c:	19400017 	ldw	r5,0(r3)
    7360:	283ffc26 	beq	r5,zero,7354 <__alt_data_end+0xfffbdf74>
    7364:	00800044 	movi	r2,1
    7368:	f800283a 	ret
    736c:	10c00a0e 	bge	r2,r3,7398 <__any_on+0x70>
    7370:	1085883a 	add	r2,r2,r2
    7374:	1085883a 	add	r2,r2,r2
    7378:	294007cc 	andi	r5,r5,31
    737c:	2087883a 	add	r3,r4,r2
    7380:	283ff026 	beq	r5,zero,7344 <__alt_data_end+0xfffbdf64>
    7384:	19800017 	ldw	r6,0(r3)
    7388:	3144d83a 	srl	r2,r6,r5
    738c:	114a983a 	sll	r5,r2,r5
    7390:	317ff41e 	bne	r6,r5,7364 <__alt_data_end+0xfffbdf84>
    7394:	003feb06 	br	7344 <__alt_data_end+0xfffbdf64>
    7398:	1085883a 	add	r2,r2,r2
    739c:	1085883a 	add	r2,r2,r2
    73a0:	2087883a 	add	r3,r4,r2
    73a4:	003fe706 	br	7344 <__alt_data_end+0xfffbdf64>
    73a8:	f800283a 	ret
    73ac:	0005883a 	mov	r2,zero
    73b0:	f800283a 	ret

000073b4 <_realloc_r>:
    73b4:	defff604 	addi	sp,sp,-40
    73b8:	dc400115 	stw	r17,4(sp)
    73bc:	dfc00915 	stw	ra,36(sp)
    73c0:	df000815 	stw	fp,32(sp)
    73c4:	ddc00715 	stw	r23,28(sp)
    73c8:	dd800615 	stw	r22,24(sp)
    73cc:	dd400515 	stw	r21,20(sp)
    73d0:	dd000415 	stw	r20,16(sp)
    73d4:	dcc00315 	stw	r19,12(sp)
    73d8:	dc800215 	stw	r18,8(sp)
    73dc:	dc000015 	stw	r16,0(sp)
    73e0:	3023883a 	mov	r17,r6
    73e4:	2800b626 	beq	r5,zero,76c0 <_realloc_r+0x30c>
    73e8:	2829883a 	mov	r20,r5
    73ec:	2025883a 	mov	r18,r4
    73f0:	000d8640 	call	d864 <__malloc_lock>
    73f4:	a0ffff17 	ldw	r3,-4(r20)
    73f8:	043fff04 	movi	r16,-4
    73fc:	888002c4 	addi	r2,r17,11
    7400:	01000584 	movi	r4,22
    7404:	a57ffe04 	addi	r21,r20,-8
    7408:	1c20703a 	and	r16,r3,r16
    740c:	2080332e 	bgeu	r4,r2,74dc <_realloc_r+0x128>
    7410:	05bffe04 	movi	r22,-8
    7414:	15ac703a 	and	r22,r2,r22
    7418:	b005883a 	mov	r2,r22
    741c:	b0005716 	blt	r22,zero,757c <_realloc_r+0x1c8>
    7420:	b4405636 	bltu	r22,r17,757c <_realloc_r+0x1c8>
    7424:	8080300e 	bge	r16,r2,74e8 <_realloc_r+0x134>
    7428:	07000074 	movhi	fp,1
    742c:	e7008604 	addi	fp,fp,536
    7430:	e2000217 	ldw	r8,8(fp)
    7434:	ac09883a 	add	r4,r21,r16
    7438:	22006126 	beq	r4,r8,75c0 <_realloc_r+0x20c>
    743c:	22400117 	ldw	r9,4(r4)
    7440:	01ffff84 	movi	r7,-2
    7444:	49ce703a 	and	r7,r9,r7
    7448:	21cf883a 	add	r7,r4,r7
    744c:	39800117 	ldw	r6,4(r7)
    7450:	3180004c 	andi	r6,r6,1
    7454:	30003e26 	beq	r6,zero,7550 <_realloc_r+0x19c>
    7458:	18c0004c 	andi	r3,r3,1
    745c:	18008126 	beq	r3,zero,7664 <_realloc_r+0x2b0>
    7460:	880b883a 	mov	r5,r17
    7464:	9009883a 	mov	r4,r18
    7468:	00056400 	call	5640 <_malloc_r>
    746c:	1023883a 	mov	r17,r2
    7470:	10011e26 	beq	r2,zero,78ec <_realloc_r+0x538>
    7474:	a0ffff17 	ldw	r3,-4(r20)
    7478:	113ffe04 	addi	r4,r2,-8
    747c:	00bfff84 	movi	r2,-2
    7480:	1884703a 	and	r2,r3,r2
    7484:	a885883a 	add	r2,r21,r2
    7488:	2080ee26 	beq	r4,r2,7844 <_realloc_r+0x490>
    748c:	81bfff04 	addi	r6,r16,-4
    7490:	00800904 	movi	r2,36
    7494:	1180b836 	bltu	r2,r6,7778 <_realloc_r+0x3c4>
    7498:	00c004c4 	movi	r3,19
    749c:	19809536 	bltu	r3,r6,76f4 <_realloc_r+0x340>
    74a0:	8805883a 	mov	r2,r17
    74a4:	a007883a 	mov	r3,r20
    74a8:	19000017 	ldw	r4,0(r3)
    74ac:	11000015 	stw	r4,0(r2)
    74b0:	19000117 	ldw	r4,4(r3)
    74b4:	11000115 	stw	r4,4(r2)
    74b8:	18c00217 	ldw	r3,8(r3)
    74bc:	10c00215 	stw	r3,8(r2)
    74c0:	a00b883a 	mov	r5,r20
    74c4:	9009883a 	mov	r4,r18
    74c8:	0004a480 	call	4a48 <_free_r>
    74cc:	9009883a 	mov	r4,r18
    74d0:	000d8880 	call	d888 <__malloc_unlock>
    74d4:	8805883a 	mov	r2,r17
    74d8:	00001106 	br	7520 <_realloc_r+0x16c>
    74dc:	00800404 	movi	r2,16
    74e0:	102d883a 	mov	r22,r2
    74e4:	003fce06 	br	7420 <__alt_data_end+0xfffbe040>
    74e8:	a023883a 	mov	r17,r20
    74ec:	858fc83a 	sub	r7,r16,r22
    74f0:	008003c4 	movi	r2,15
    74f4:	18c0004c 	andi	r3,r3,1
    74f8:	11c02436 	bltu	r2,r7,758c <_realloc_r+0x1d8>
    74fc:	1c06b03a 	or	r3,r3,r16
    7500:	a8c00115 	stw	r3,4(r21)
    7504:	ac21883a 	add	r16,r21,r16
    7508:	80800117 	ldw	r2,4(r16)
    750c:	10800054 	ori	r2,r2,1
    7510:	80800115 	stw	r2,4(r16)
    7514:	9009883a 	mov	r4,r18
    7518:	000d8880 	call	d888 <__malloc_unlock>
    751c:	8805883a 	mov	r2,r17
    7520:	dfc00917 	ldw	ra,36(sp)
    7524:	df000817 	ldw	fp,32(sp)
    7528:	ddc00717 	ldw	r23,28(sp)
    752c:	dd800617 	ldw	r22,24(sp)
    7530:	dd400517 	ldw	r21,20(sp)
    7534:	dd000417 	ldw	r20,16(sp)
    7538:	dcc00317 	ldw	r19,12(sp)
    753c:	dc800217 	ldw	r18,8(sp)
    7540:	dc400117 	ldw	r17,4(sp)
    7544:	dc000017 	ldw	r16,0(sp)
    7548:	dec00a04 	addi	sp,sp,40
    754c:	f800283a 	ret
    7550:	017fff04 	movi	r5,-4
    7554:	494a703a 	and	r5,r9,r5
    7558:	814d883a 	add	r6,r16,r5
    755c:	30801e16 	blt	r6,r2,75d8 <_realloc_r+0x224>
    7560:	20800317 	ldw	r2,12(r4)
    7564:	21000217 	ldw	r4,8(r4)
    7568:	a023883a 	mov	r17,r20
    756c:	3021883a 	mov	r16,r6
    7570:	20800315 	stw	r2,12(r4)
    7574:	11000215 	stw	r4,8(r2)
    7578:	003fdc06 	br	74ec <__alt_data_end+0xfffbe10c>
    757c:	00800304 	movi	r2,12
    7580:	90800015 	stw	r2,0(r18)
    7584:	0005883a 	mov	r2,zero
    7588:	003fe506 	br	7520 <__alt_data_end+0xfffbe140>
    758c:	1d86b03a 	or	r3,r3,r22
    7590:	a8c00115 	stw	r3,4(r21)
    7594:	ad8b883a 	add	r5,r21,r22
    7598:	38c00054 	ori	r3,r7,1
    759c:	28c00115 	stw	r3,4(r5)
    75a0:	29cf883a 	add	r7,r5,r7
    75a4:	38c00117 	ldw	r3,4(r7)
    75a8:	29400204 	addi	r5,r5,8
    75ac:	9009883a 	mov	r4,r18
    75b0:	18800054 	ori	r2,r3,1
    75b4:	38800115 	stw	r2,4(r7)
    75b8:	0004a480 	call	4a48 <_free_r>
    75bc:	003fd506 	br	7514 <__alt_data_end+0xfffbe134>
    75c0:	21c00117 	ldw	r7,4(r4)
    75c4:	017fff04 	movi	r5,-4
    75c8:	b1800404 	addi	r6,r22,16
    75cc:	394a703a 	and	r5,r7,r5
    75d0:	814f883a 	add	r7,r16,r5
    75d4:	39805b0e 	bge	r7,r6,7744 <_realloc_r+0x390>
    75d8:	18c0004c 	andi	r3,r3,1
    75dc:	183fa01e 	bne	r3,zero,7460 <__alt_data_end+0xfffbe080>
    75e0:	a4fffe17 	ldw	r19,-8(r20)
    75e4:	00ffff04 	movi	r3,-4
    75e8:	ace7c83a 	sub	r19,r21,r19
    75ec:	99800117 	ldw	r6,4(r19)
    75f0:	30c6703a 	and	r3,r6,r3
    75f4:	20002026 	beq	r4,zero,7678 <_realloc_r+0x2c4>
    75f8:	80ef883a 	add	r23,r16,r3
    75fc:	b96f883a 	add	r23,r23,r5
    7600:	22006126 	beq	r4,r8,7788 <_realloc_r+0x3d4>
    7604:	b8801c16 	blt	r23,r2,7678 <_realloc_r+0x2c4>
    7608:	20800317 	ldw	r2,12(r4)
    760c:	20c00217 	ldw	r3,8(r4)
    7610:	81bfff04 	addi	r6,r16,-4
    7614:	01000904 	movi	r4,36
    7618:	18800315 	stw	r2,12(r3)
    761c:	10c00215 	stw	r3,8(r2)
    7620:	98c00217 	ldw	r3,8(r19)
    7624:	98800317 	ldw	r2,12(r19)
    7628:	9c400204 	addi	r17,r19,8
    762c:	18800315 	stw	r2,12(r3)
    7630:	10c00215 	stw	r3,8(r2)
    7634:	21801b36 	bltu	r4,r6,76a4 <_realloc_r+0x2f0>
    7638:	008004c4 	movi	r2,19
    763c:	1180362e 	bgeu	r2,r6,7718 <_realloc_r+0x364>
    7640:	a0800017 	ldw	r2,0(r20)
    7644:	98800215 	stw	r2,8(r19)
    7648:	a0800117 	ldw	r2,4(r20)
    764c:	98800315 	stw	r2,12(r19)
    7650:	008006c4 	movi	r2,27
    7654:	11808136 	bltu	r2,r6,785c <_realloc_r+0x4a8>
    7658:	98800404 	addi	r2,r19,16
    765c:	a5000204 	addi	r20,r20,8
    7660:	00002e06 	br	771c <_realloc_r+0x368>
    7664:	a4fffe17 	ldw	r19,-8(r20)
    7668:	00ffff04 	movi	r3,-4
    766c:	ace7c83a 	sub	r19,r21,r19
    7670:	99000117 	ldw	r4,4(r19)
    7674:	20c6703a 	and	r3,r4,r3
    7678:	983f7926 	beq	r19,zero,7460 <__alt_data_end+0xfffbe080>
    767c:	80ef883a 	add	r23,r16,r3
    7680:	b8bf7716 	blt	r23,r2,7460 <__alt_data_end+0xfffbe080>
    7684:	98800317 	ldw	r2,12(r19)
    7688:	98c00217 	ldw	r3,8(r19)
    768c:	81bfff04 	addi	r6,r16,-4
    7690:	01000904 	movi	r4,36
    7694:	18800315 	stw	r2,12(r3)
    7698:	10c00215 	stw	r3,8(r2)
    769c:	9c400204 	addi	r17,r19,8
    76a0:	21bfe52e 	bgeu	r4,r6,7638 <__alt_data_end+0xfffbe258>
    76a4:	a00b883a 	mov	r5,r20
    76a8:	8809883a 	mov	r4,r17
    76ac:	00060780 	call	6078 <memmove>
    76b0:	98c00117 	ldw	r3,4(r19)
    76b4:	b821883a 	mov	r16,r23
    76b8:	982b883a 	mov	r21,r19
    76bc:	003f8b06 	br	74ec <__alt_data_end+0xfffbe10c>
    76c0:	300b883a 	mov	r5,r6
    76c4:	dfc00917 	ldw	ra,36(sp)
    76c8:	df000817 	ldw	fp,32(sp)
    76cc:	ddc00717 	ldw	r23,28(sp)
    76d0:	dd800617 	ldw	r22,24(sp)
    76d4:	dd400517 	ldw	r21,20(sp)
    76d8:	dd000417 	ldw	r20,16(sp)
    76dc:	dcc00317 	ldw	r19,12(sp)
    76e0:	dc800217 	ldw	r18,8(sp)
    76e4:	dc400117 	ldw	r17,4(sp)
    76e8:	dc000017 	ldw	r16,0(sp)
    76ec:	dec00a04 	addi	sp,sp,40
    76f0:	00056401 	jmpi	5640 <_malloc_r>
    76f4:	a0c00017 	ldw	r3,0(r20)
    76f8:	88c00015 	stw	r3,0(r17)
    76fc:	a0c00117 	ldw	r3,4(r20)
    7700:	88c00115 	stw	r3,4(r17)
    7704:	00c006c4 	movi	r3,27
    7708:	19804636 	bltu	r3,r6,7824 <_realloc_r+0x470>
    770c:	88800204 	addi	r2,r17,8
    7710:	a0c00204 	addi	r3,r20,8
    7714:	003f6406 	br	74a8 <__alt_data_end+0xfffbe0c8>
    7718:	8805883a 	mov	r2,r17
    771c:	a0c00017 	ldw	r3,0(r20)
    7720:	b821883a 	mov	r16,r23
    7724:	982b883a 	mov	r21,r19
    7728:	10c00015 	stw	r3,0(r2)
    772c:	a0c00117 	ldw	r3,4(r20)
    7730:	10c00115 	stw	r3,4(r2)
    7734:	a0c00217 	ldw	r3,8(r20)
    7738:	10c00215 	stw	r3,8(r2)
    773c:	98c00117 	ldw	r3,4(r19)
    7740:	003f6a06 	br	74ec <__alt_data_end+0xfffbe10c>
    7744:	adab883a 	add	r21,r21,r22
    7748:	3d85c83a 	sub	r2,r7,r22
    774c:	e5400215 	stw	r21,8(fp)
    7750:	10800054 	ori	r2,r2,1
    7754:	a8800115 	stw	r2,4(r21)
    7758:	a0bfff17 	ldw	r2,-4(r20)
    775c:	9009883a 	mov	r4,r18
    7760:	1080004c 	andi	r2,r2,1
    7764:	1584b03a 	or	r2,r2,r22
    7768:	a0bfff15 	stw	r2,-4(r20)
    776c:	000d8880 	call	d888 <__malloc_unlock>
    7770:	a005883a 	mov	r2,r20
    7774:	003f6a06 	br	7520 <__alt_data_end+0xfffbe140>
    7778:	a00b883a 	mov	r5,r20
    777c:	8809883a 	mov	r4,r17
    7780:	00060780 	call	6078 <memmove>
    7784:	003f4e06 	br	74c0 <__alt_data_end+0xfffbe0e0>
    7788:	b1000404 	addi	r4,r22,16
    778c:	b93fba16 	blt	r23,r4,7678 <__alt_data_end+0xfffbe298>
    7790:	98800317 	ldw	r2,12(r19)
    7794:	98c00217 	ldw	r3,8(r19)
    7798:	81bfff04 	addi	r6,r16,-4
    779c:	01000904 	movi	r4,36
    77a0:	18800315 	stw	r2,12(r3)
    77a4:	10c00215 	stw	r3,8(r2)
    77a8:	9c400204 	addi	r17,r19,8
    77ac:	21804336 	bltu	r4,r6,78bc <_realloc_r+0x508>
    77b0:	008004c4 	movi	r2,19
    77b4:	11803f2e 	bgeu	r2,r6,78b4 <_realloc_r+0x500>
    77b8:	a0800017 	ldw	r2,0(r20)
    77bc:	98800215 	stw	r2,8(r19)
    77c0:	a0800117 	ldw	r2,4(r20)
    77c4:	98800315 	stw	r2,12(r19)
    77c8:	008006c4 	movi	r2,27
    77cc:	11803f36 	bltu	r2,r6,78cc <_realloc_r+0x518>
    77d0:	98800404 	addi	r2,r19,16
    77d4:	a5000204 	addi	r20,r20,8
    77d8:	a0c00017 	ldw	r3,0(r20)
    77dc:	10c00015 	stw	r3,0(r2)
    77e0:	a0c00117 	ldw	r3,4(r20)
    77e4:	10c00115 	stw	r3,4(r2)
    77e8:	a0c00217 	ldw	r3,8(r20)
    77ec:	10c00215 	stw	r3,8(r2)
    77f0:	9d87883a 	add	r3,r19,r22
    77f4:	bd85c83a 	sub	r2,r23,r22
    77f8:	e0c00215 	stw	r3,8(fp)
    77fc:	10800054 	ori	r2,r2,1
    7800:	18800115 	stw	r2,4(r3)
    7804:	98800117 	ldw	r2,4(r19)
    7808:	9009883a 	mov	r4,r18
    780c:	1080004c 	andi	r2,r2,1
    7810:	1584b03a 	or	r2,r2,r22
    7814:	98800115 	stw	r2,4(r19)
    7818:	000d8880 	call	d888 <__malloc_unlock>
    781c:	8805883a 	mov	r2,r17
    7820:	003f3f06 	br	7520 <__alt_data_end+0xfffbe140>
    7824:	a0c00217 	ldw	r3,8(r20)
    7828:	88c00215 	stw	r3,8(r17)
    782c:	a0c00317 	ldw	r3,12(r20)
    7830:	88c00315 	stw	r3,12(r17)
    7834:	30801126 	beq	r6,r2,787c <_realloc_r+0x4c8>
    7838:	88800404 	addi	r2,r17,16
    783c:	a0c00404 	addi	r3,r20,16
    7840:	003f1906 	br	74a8 <__alt_data_end+0xfffbe0c8>
    7844:	893fff17 	ldw	r4,-4(r17)
    7848:	00bfff04 	movi	r2,-4
    784c:	a023883a 	mov	r17,r20
    7850:	2084703a 	and	r2,r4,r2
    7854:	80a1883a 	add	r16,r16,r2
    7858:	003f2406 	br	74ec <__alt_data_end+0xfffbe10c>
    785c:	a0800217 	ldw	r2,8(r20)
    7860:	98800415 	stw	r2,16(r19)
    7864:	a0800317 	ldw	r2,12(r20)
    7868:	98800515 	stw	r2,20(r19)
    786c:	31000a26 	beq	r6,r4,7898 <_realloc_r+0x4e4>
    7870:	98800604 	addi	r2,r19,24
    7874:	a5000404 	addi	r20,r20,16
    7878:	003fa806 	br	771c <__alt_data_end+0xfffbe33c>
    787c:	a1000417 	ldw	r4,16(r20)
    7880:	88800604 	addi	r2,r17,24
    7884:	a0c00604 	addi	r3,r20,24
    7888:	89000415 	stw	r4,16(r17)
    788c:	a1000517 	ldw	r4,20(r20)
    7890:	89000515 	stw	r4,20(r17)
    7894:	003f0406 	br	74a8 <__alt_data_end+0xfffbe0c8>
    7898:	a0c00417 	ldw	r3,16(r20)
    789c:	a5000604 	addi	r20,r20,24
    78a0:	98800804 	addi	r2,r19,32
    78a4:	98c00615 	stw	r3,24(r19)
    78a8:	a0ffff17 	ldw	r3,-4(r20)
    78ac:	98c00715 	stw	r3,28(r19)
    78b0:	003f9a06 	br	771c <__alt_data_end+0xfffbe33c>
    78b4:	8805883a 	mov	r2,r17
    78b8:	003fc706 	br	77d8 <__alt_data_end+0xfffbe3f8>
    78bc:	a00b883a 	mov	r5,r20
    78c0:	8809883a 	mov	r4,r17
    78c4:	00060780 	call	6078 <memmove>
    78c8:	003fc906 	br	77f0 <__alt_data_end+0xfffbe410>
    78cc:	a0800217 	ldw	r2,8(r20)
    78d0:	98800415 	stw	r2,16(r19)
    78d4:	a0800317 	ldw	r2,12(r20)
    78d8:	98800515 	stw	r2,20(r19)
    78dc:	31000726 	beq	r6,r4,78fc <_realloc_r+0x548>
    78e0:	98800604 	addi	r2,r19,24
    78e4:	a5000404 	addi	r20,r20,16
    78e8:	003fbb06 	br	77d8 <__alt_data_end+0xfffbe3f8>
    78ec:	9009883a 	mov	r4,r18
    78f0:	000d8880 	call	d888 <__malloc_unlock>
    78f4:	0005883a 	mov	r2,zero
    78f8:	003f0906 	br	7520 <__alt_data_end+0xfffbe140>
    78fc:	a0c00417 	ldw	r3,16(r20)
    7900:	a5000604 	addi	r20,r20,24
    7904:	98800804 	addi	r2,r19,32
    7908:	98c00615 	stw	r3,24(r19)
    790c:	a0ffff17 	ldw	r3,-4(r20)
    7910:	98c00715 	stw	r3,28(r19)
    7914:	003fb006 	br	77d8 <__alt_data_end+0xfffbe3f8>

00007918 <__fpclassifyd>:
    7918:	00a00034 	movhi	r2,32768
    791c:	10bfffc4 	addi	r2,r2,-1
    7920:	2884703a 	and	r2,r5,r2
    7924:	10000726 	beq	r2,zero,7944 <__fpclassifyd+0x2c>
    7928:	00fffc34 	movhi	r3,65520
    792c:	019ff834 	movhi	r6,32736
    7930:	28c7883a 	add	r3,r5,r3
    7934:	31bfffc4 	addi	r6,r6,-1
    7938:	30c00536 	bltu	r6,r3,7950 <__fpclassifyd+0x38>
    793c:	00800104 	movi	r2,4
    7940:	f800283a 	ret
    7944:	2000021e 	bne	r4,zero,7950 <__fpclassifyd+0x38>
    7948:	00800084 	movi	r2,2
    794c:	f800283a 	ret
    7950:	00dffc34 	movhi	r3,32752
    7954:	019ff834 	movhi	r6,32736
    7958:	28cb883a 	add	r5,r5,r3
    795c:	31bfffc4 	addi	r6,r6,-1
    7960:	317ff62e 	bgeu	r6,r5,793c <__alt_data_end+0xfffbe55c>
    7964:	01400434 	movhi	r5,16
    7968:	297fffc4 	addi	r5,r5,-1
    796c:	28800236 	bltu	r5,r2,7978 <__fpclassifyd+0x60>
    7970:	008000c4 	movi	r2,3
    7974:	f800283a 	ret
    7978:	10c00226 	beq	r2,r3,7984 <__fpclassifyd+0x6c>
    797c:	0005883a 	mov	r2,zero
    7980:	f800283a 	ret
    7984:	2005003a 	cmpeq	r2,r4,zero
    7988:	f800283a 	ret

0000798c <_sbrk_r>:
    798c:	defffd04 	addi	sp,sp,-12
    7990:	dc000015 	stw	r16,0(sp)
    7994:	04000074 	movhi	r16,1
    7998:	dc400115 	stw	r17,4(sp)
    799c:	840cdb04 	addi	r16,r16,13164
    79a0:	2023883a 	mov	r17,r4
    79a4:	2809883a 	mov	r4,r5
    79a8:	dfc00215 	stw	ra,8(sp)
    79ac:	80000015 	stw	zero,0(r16)
    79b0:	000da840 	call	da84 <sbrk>
    79b4:	00ffffc4 	movi	r3,-1
    79b8:	10c00526 	beq	r2,r3,79d0 <_sbrk_r+0x44>
    79bc:	dfc00217 	ldw	ra,8(sp)
    79c0:	dc400117 	ldw	r17,4(sp)
    79c4:	dc000017 	ldw	r16,0(sp)
    79c8:	dec00304 	addi	sp,sp,12
    79cc:	f800283a 	ret
    79d0:	80c00017 	ldw	r3,0(r16)
    79d4:	183ff926 	beq	r3,zero,79bc <__alt_data_end+0xfffbe5dc>
    79d8:	88c00015 	stw	r3,0(r17)
    79dc:	003ff706 	br	79bc <__alt_data_end+0xfffbe5dc>

000079e0 <__sread>:
    79e0:	defffe04 	addi	sp,sp,-8
    79e4:	dc000015 	stw	r16,0(sp)
    79e8:	2821883a 	mov	r16,r5
    79ec:	2940038f 	ldh	r5,14(r5)
    79f0:	dfc00115 	stw	ra,4(sp)
    79f4:	000989c0 	call	989c <_read_r>
    79f8:	10000716 	blt	r2,zero,7a18 <__sread+0x38>
    79fc:	80c01417 	ldw	r3,80(r16)
    7a00:	1887883a 	add	r3,r3,r2
    7a04:	80c01415 	stw	r3,80(r16)
    7a08:	dfc00117 	ldw	ra,4(sp)
    7a0c:	dc000017 	ldw	r16,0(sp)
    7a10:	dec00204 	addi	sp,sp,8
    7a14:	f800283a 	ret
    7a18:	80c0030b 	ldhu	r3,12(r16)
    7a1c:	18fbffcc 	andi	r3,r3,61439
    7a20:	80c0030d 	sth	r3,12(r16)
    7a24:	dfc00117 	ldw	ra,4(sp)
    7a28:	dc000017 	ldw	r16,0(sp)
    7a2c:	dec00204 	addi	sp,sp,8
    7a30:	f800283a 	ret

00007a34 <__seofread>:
    7a34:	0005883a 	mov	r2,zero
    7a38:	f800283a 	ret

00007a3c <__swrite>:
    7a3c:	2880030b 	ldhu	r2,12(r5)
    7a40:	defffb04 	addi	sp,sp,-20
    7a44:	dcc00315 	stw	r19,12(sp)
    7a48:	dc800215 	stw	r18,8(sp)
    7a4c:	dc400115 	stw	r17,4(sp)
    7a50:	dc000015 	stw	r16,0(sp)
    7a54:	dfc00415 	stw	ra,16(sp)
    7a58:	10c0400c 	andi	r3,r2,256
    7a5c:	2821883a 	mov	r16,r5
    7a60:	2023883a 	mov	r17,r4
    7a64:	3025883a 	mov	r18,r6
    7a68:	3827883a 	mov	r19,r7
    7a6c:	18000526 	beq	r3,zero,7a84 <__swrite+0x48>
    7a70:	2940038f 	ldh	r5,14(r5)
    7a74:	01c00084 	movi	r7,2
    7a78:	000d883a 	mov	r6,zero
    7a7c:	000983c0 	call	983c <_lseek_r>
    7a80:	8080030b 	ldhu	r2,12(r16)
    7a84:	8140038f 	ldh	r5,14(r16)
    7a88:	10bbffcc 	andi	r2,r2,61439
    7a8c:	980f883a 	mov	r7,r19
    7a90:	900d883a 	mov	r6,r18
    7a94:	8809883a 	mov	r4,r17
    7a98:	8080030d 	sth	r2,12(r16)
    7a9c:	dfc00417 	ldw	ra,16(sp)
    7aa0:	dcc00317 	ldw	r19,12(sp)
    7aa4:	dc800217 	ldw	r18,8(sp)
    7aa8:	dc400117 	ldw	r17,4(sp)
    7aac:	dc000017 	ldw	r16,0(sp)
    7ab0:	dec00504 	addi	sp,sp,20
    7ab4:	00092f01 	jmpi	92f0 <_write_r>

00007ab8 <__sseek>:
    7ab8:	defffe04 	addi	sp,sp,-8
    7abc:	dc000015 	stw	r16,0(sp)
    7ac0:	2821883a 	mov	r16,r5
    7ac4:	2940038f 	ldh	r5,14(r5)
    7ac8:	dfc00115 	stw	ra,4(sp)
    7acc:	000983c0 	call	983c <_lseek_r>
    7ad0:	00ffffc4 	movi	r3,-1
    7ad4:	10c00826 	beq	r2,r3,7af8 <__sseek+0x40>
    7ad8:	80c0030b 	ldhu	r3,12(r16)
    7adc:	80801415 	stw	r2,80(r16)
    7ae0:	18c40014 	ori	r3,r3,4096
    7ae4:	80c0030d 	sth	r3,12(r16)
    7ae8:	dfc00117 	ldw	ra,4(sp)
    7aec:	dc000017 	ldw	r16,0(sp)
    7af0:	dec00204 	addi	sp,sp,8
    7af4:	f800283a 	ret
    7af8:	80c0030b 	ldhu	r3,12(r16)
    7afc:	18fbffcc 	andi	r3,r3,61439
    7b00:	80c0030d 	sth	r3,12(r16)
    7b04:	dfc00117 	ldw	ra,4(sp)
    7b08:	dc000017 	ldw	r16,0(sp)
    7b0c:	dec00204 	addi	sp,sp,8
    7b10:	f800283a 	ret

00007b14 <__sclose>:
    7b14:	2940038f 	ldh	r5,14(r5)
    7b18:	00093501 	jmpi	9350 <_close_r>

00007b1c <strcmp>:
    7b1c:	2144b03a 	or	r2,r4,r5
    7b20:	108000cc 	andi	r2,r2,3
    7b24:	1000171e 	bne	r2,zero,7b84 <strcmp+0x68>
    7b28:	20800017 	ldw	r2,0(r4)
    7b2c:	28c00017 	ldw	r3,0(r5)
    7b30:	10c0141e 	bne	r2,r3,7b84 <strcmp+0x68>
    7b34:	027fbff4 	movhi	r9,65279
    7b38:	4a7fbfc4 	addi	r9,r9,-257
    7b3c:	0086303a 	nor	r3,zero,r2
    7b40:	02202074 	movhi	r8,32897
    7b44:	1245883a 	add	r2,r2,r9
    7b48:	42202004 	addi	r8,r8,-32640
    7b4c:	10c4703a 	and	r2,r2,r3
    7b50:	1204703a 	and	r2,r2,r8
    7b54:	10000226 	beq	r2,zero,7b60 <strcmp+0x44>
    7b58:	00002306 	br	7be8 <strcmp+0xcc>
    7b5c:	1000221e 	bne	r2,zero,7be8 <strcmp+0xcc>
    7b60:	21000104 	addi	r4,r4,4
    7b64:	20c00017 	ldw	r3,0(r4)
    7b68:	29400104 	addi	r5,r5,4
    7b6c:	29800017 	ldw	r6,0(r5)
    7b70:	1a4f883a 	add	r7,r3,r9
    7b74:	00c4303a 	nor	r2,zero,r3
    7b78:	3884703a 	and	r2,r7,r2
    7b7c:	1204703a 	and	r2,r2,r8
    7b80:	19bff626 	beq	r3,r6,7b5c <__alt_data_end+0xfffbe77c>
    7b84:	20800003 	ldbu	r2,0(r4)
    7b88:	10c03fcc 	andi	r3,r2,255
    7b8c:	18c0201c 	xori	r3,r3,128
    7b90:	18ffe004 	addi	r3,r3,-128
    7b94:	18000c26 	beq	r3,zero,7bc8 <strcmp+0xac>
    7b98:	29800007 	ldb	r6,0(r5)
    7b9c:	19800326 	beq	r3,r6,7bac <strcmp+0x90>
    7ba0:	00001306 	br	7bf0 <strcmp+0xd4>
    7ba4:	29800007 	ldb	r6,0(r5)
    7ba8:	11800b1e 	bne	r2,r6,7bd8 <strcmp+0xbc>
    7bac:	21000044 	addi	r4,r4,1
    7bb0:	20c00003 	ldbu	r3,0(r4)
    7bb4:	29400044 	addi	r5,r5,1
    7bb8:	18803fcc 	andi	r2,r3,255
    7bbc:	1080201c 	xori	r2,r2,128
    7bc0:	10bfe004 	addi	r2,r2,-128
    7bc4:	103ff71e 	bne	r2,zero,7ba4 <__alt_data_end+0xfffbe7c4>
    7bc8:	0007883a 	mov	r3,zero
    7bcc:	28800003 	ldbu	r2,0(r5)
    7bd0:	1885c83a 	sub	r2,r3,r2
    7bd4:	f800283a 	ret
    7bd8:	28800003 	ldbu	r2,0(r5)
    7bdc:	18c03fcc 	andi	r3,r3,255
    7be0:	1885c83a 	sub	r2,r3,r2
    7be4:	f800283a 	ret
    7be8:	0005883a 	mov	r2,zero
    7bec:	f800283a 	ret
    7bf0:	10c03fcc 	andi	r3,r2,255
    7bf4:	003ff506 	br	7bcc <__alt_data_end+0xfffbe7ec>

00007bf8 <__sprint_r.part.0>:
    7bf8:	28801917 	ldw	r2,100(r5)
    7bfc:	defff604 	addi	sp,sp,-40
    7c00:	dd400515 	stw	r21,20(sp)
    7c04:	dfc00915 	stw	ra,36(sp)
    7c08:	df000815 	stw	fp,32(sp)
    7c0c:	ddc00715 	stw	r23,28(sp)
    7c10:	dd800615 	stw	r22,24(sp)
    7c14:	dd000415 	stw	r20,16(sp)
    7c18:	dcc00315 	stw	r19,12(sp)
    7c1c:	dc800215 	stw	r18,8(sp)
    7c20:	dc400115 	stw	r17,4(sp)
    7c24:	dc000015 	stw	r16,0(sp)
    7c28:	1088000c 	andi	r2,r2,8192
    7c2c:	302b883a 	mov	r21,r6
    7c30:	10002e26 	beq	r2,zero,7cec <__sprint_r.part.0+0xf4>
    7c34:	30800217 	ldw	r2,8(r6)
    7c38:	35800017 	ldw	r22,0(r6)
    7c3c:	10002926 	beq	r2,zero,7ce4 <__sprint_r.part.0+0xec>
    7c40:	2827883a 	mov	r19,r5
    7c44:	2029883a 	mov	r20,r4
    7c48:	b5c00104 	addi	r23,r22,4
    7c4c:	04bfffc4 	movi	r18,-1
    7c50:	bc400017 	ldw	r17,0(r23)
    7c54:	b4000017 	ldw	r16,0(r22)
    7c58:	0039883a 	mov	fp,zero
    7c5c:	8822d0ba 	srli	r17,r17,2
    7c60:	8800031e 	bne	r17,zero,7c70 <__sprint_r.part.0+0x78>
    7c64:	00001806 	br	7cc8 <__sprint_r.part.0+0xd0>
    7c68:	84000104 	addi	r16,r16,4
    7c6c:	8f001526 	beq	r17,fp,7cc4 <__sprint_r.part.0+0xcc>
    7c70:	81400017 	ldw	r5,0(r16)
    7c74:	980d883a 	mov	r6,r19
    7c78:	a009883a 	mov	r4,r20
    7c7c:	00096e80 	call	96e8 <_fputwc_r>
    7c80:	e7000044 	addi	fp,fp,1
    7c84:	14bff81e 	bne	r2,r18,7c68 <__alt_data_end+0xfffbe888>
    7c88:	9005883a 	mov	r2,r18
    7c8c:	a8000215 	stw	zero,8(r21)
    7c90:	a8000115 	stw	zero,4(r21)
    7c94:	dfc00917 	ldw	ra,36(sp)
    7c98:	df000817 	ldw	fp,32(sp)
    7c9c:	ddc00717 	ldw	r23,28(sp)
    7ca0:	dd800617 	ldw	r22,24(sp)
    7ca4:	dd400517 	ldw	r21,20(sp)
    7ca8:	dd000417 	ldw	r20,16(sp)
    7cac:	dcc00317 	ldw	r19,12(sp)
    7cb0:	dc800217 	ldw	r18,8(sp)
    7cb4:	dc400117 	ldw	r17,4(sp)
    7cb8:	dc000017 	ldw	r16,0(sp)
    7cbc:	dec00a04 	addi	sp,sp,40
    7cc0:	f800283a 	ret
    7cc4:	a8800217 	ldw	r2,8(r21)
    7cc8:	8c63883a 	add	r17,r17,r17
    7ccc:	8c63883a 	add	r17,r17,r17
    7cd0:	1445c83a 	sub	r2,r2,r17
    7cd4:	a8800215 	stw	r2,8(r21)
    7cd8:	b5800204 	addi	r22,r22,8
    7cdc:	bdc00204 	addi	r23,r23,8
    7ce0:	103fdb1e 	bne	r2,zero,7c50 <__alt_data_end+0xfffbe870>
    7ce4:	0005883a 	mov	r2,zero
    7ce8:	003fe806 	br	7c8c <__alt_data_end+0xfffbe8ac>
    7cec:	0004d580 	call	4d58 <__sfvwrite_r>
    7cf0:	003fe606 	br	7c8c <__alt_data_end+0xfffbe8ac>

00007cf4 <__sprint_r>:
    7cf4:	30c00217 	ldw	r3,8(r6)
    7cf8:	18000126 	beq	r3,zero,7d00 <__sprint_r+0xc>
    7cfc:	0007bf81 	jmpi	7bf8 <__sprint_r.part.0>
    7d00:	30000115 	stw	zero,4(r6)
    7d04:	0005883a 	mov	r2,zero
    7d08:	f800283a 	ret

00007d0c <___vfiprintf_internal_r>:
    7d0c:	deffca04 	addi	sp,sp,-216
    7d10:	dd403115 	stw	r21,196(sp)
    7d14:	dfc03515 	stw	ra,212(sp)
    7d18:	df003415 	stw	fp,208(sp)
    7d1c:	ddc03315 	stw	r23,204(sp)
    7d20:	dd803215 	stw	r22,200(sp)
    7d24:	dd003015 	stw	r20,192(sp)
    7d28:	dcc02f15 	stw	r19,188(sp)
    7d2c:	dc802e15 	stw	r18,184(sp)
    7d30:	dc402d15 	stw	r17,180(sp)
    7d34:	dc002c15 	stw	r16,176(sp)
    7d38:	d9002115 	stw	r4,132(sp)
    7d3c:	d9402015 	stw	r5,128(sp)
    7d40:	d9c02215 	stw	r7,136(sp)
    7d44:	302b883a 	mov	r21,r6
    7d48:	20000226 	beq	r4,zero,7d54 <___vfiprintf_internal_r+0x48>
    7d4c:	20800e17 	ldw	r2,56(r4)
    7d50:	1000cf26 	beq	r2,zero,8090 <___vfiprintf_internal_r+0x384>
    7d54:	d8c02017 	ldw	r3,128(sp)
    7d58:	1880030b 	ldhu	r2,12(r3)
    7d5c:	10c8000c 	andi	r3,r2,8192
    7d60:	1800071e 	bne	r3,zero,7d80 <___vfiprintf_internal_r+0x74>
    7d64:	d9402017 	ldw	r5,128(sp)
    7d68:	00f7ffc4 	movi	r3,-8193
    7d6c:	10880014 	ori	r2,r2,8192
    7d70:	29001917 	ldw	r4,100(r5)
    7d74:	2880030d 	sth	r2,12(r5)
    7d78:	20c6703a 	and	r3,r4,r3
    7d7c:	28c01915 	stw	r3,100(r5)
    7d80:	10c0020c 	andi	r3,r2,8
    7d84:	1800a526 	beq	r3,zero,801c <___vfiprintf_internal_r+0x310>
    7d88:	d9002017 	ldw	r4,128(sp)
    7d8c:	20c00417 	ldw	r3,16(r4)
    7d90:	1800a226 	beq	r3,zero,801c <___vfiprintf_internal_r+0x310>
    7d94:	1080068c 	andi	r2,r2,26
    7d98:	00c00284 	movi	r3,10
    7d9c:	10c0a826 	beq	r2,r3,8040 <___vfiprintf_internal_r+0x334>
    7da0:	d9001a04 	addi	r4,sp,104
    7da4:	d94019c4 	addi	r5,sp,103
    7da8:	04800074 	movhi	r18,1
    7dac:	2145c83a 	sub	r2,r4,r5
    7db0:	94bf0a04 	addi	r18,r18,-984
    7db4:	d9001e15 	stw	r4,120(sp)
    7db8:	d9401f15 	stw	r5,124(sp)
    7dbc:	dec01a15 	stw	sp,104(sp)
    7dc0:	d8001c15 	stw	zero,112(sp)
    7dc4:	d8001b15 	stw	zero,108(sp)
    7dc8:	d811883a 	mov	r8,sp
    7dcc:	d8002615 	stw	zero,152(sp)
    7dd0:	d8002415 	stw	zero,144(sp)
    7dd4:	d8802815 	stw	r2,160(sp)
    7dd8:	a82d883a 	mov	r22,r21
    7ddc:	b0800007 	ldb	r2,0(r22)
    7de0:	10040d26 	beq	r2,zero,8e18 <___vfiprintf_internal_r+0x110c>
    7de4:	00c00944 	movi	r3,37
    7de8:	b029883a 	mov	r20,r22
    7dec:	10c0021e 	bne	r2,r3,7df8 <___vfiprintf_internal_r+0xec>
    7df0:	00001606 	br	7e4c <___vfiprintf_internal_r+0x140>
    7df4:	10c00326 	beq	r2,r3,7e04 <___vfiprintf_internal_r+0xf8>
    7df8:	a5000044 	addi	r20,r20,1
    7dfc:	a0800007 	ldb	r2,0(r20)
    7e00:	103ffc1e 	bne	r2,zero,7df4 <__alt_data_end+0xfffbea14>
    7e04:	a5a1c83a 	sub	r16,r20,r22
    7e08:	80001026 	beq	r16,zero,7e4c <___vfiprintf_internal_r+0x140>
    7e0c:	d8c01c17 	ldw	r3,112(sp)
    7e10:	d8801b17 	ldw	r2,108(sp)
    7e14:	45800015 	stw	r22,0(r8)
    7e18:	80c7883a 	add	r3,r16,r3
    7e1c:	10800044 	addi	r2,r2,1
    7e20:	44000115 	stw	r16,4(r8)
    7e24:	d8c01c15 	stw	r3,112(sp)
    7e28:	d8801b15 	stw	r2,108(sp)
    7e2c:	010001c4 	movi	r4,7
    7e30:	2080750e 	bge	r4,r2,8008 <___vfiprintf_internal_r+0x2fc>
    7e34:	1803951e 	bne	r3,zero,8c8c <___vfiprintf_internal_r+0xf80>
    7e38:	d8c02417 	ldw	r3,144(sp)
    7e3c:	d8001b15 	stw	zero,108(sp)
    7e40:	d811883a 	mov	r8,sp
    7e44:	1c07883a 	add	r3,r3,r16
    7e48:	d8c02415 	stw	r3,144(sp)
    7e4c:	a0800007 	ldb	r2,0(r20)
    7e50:	1002e026 	beq	r2,zero,89d4 <___vfiprintf_internal_r+0xcc8>
    7e54:	a5800044 	addi	r22,r20,1
    7e58:	a0c00047 	ldb	r3,1(r20)
    7e5c:	d8001d85 	stb	zero,118(sp)
    7e60:	0027883a 	mov	r19,zero
    7e64:	d8002305 	stb	zero,140(sp)
    7e68:	043fffc4 	movi	r16,-1
    7e6c:	d8002515 	stw	zero,148(sp)
    7e70:	0023883a 	mov	r17,zero
    7e74:	05001604 	movi	r20,88
    7e78:	05400244 	movi	r21,9
    7e7c:	402f883a 	mov	r23,r8
    7e80:	b5800044 	addi	r22,r22,1
    7e84:	18bff804 	addi	r2,r3,-32
    7e88:	a0827736 	bltu	r20,r2,8868 <___vfiprintf_internal_r+0xb5c>
    7e8c:	100490ba 	slli	r2,r2,2
    7e90:	01000034 	movhi	r4,0
    7e94:	211fa904 	addi	r4,r4,32420
    7e98:	1105883a 	add	r2,r2,r4
    7e9c:	10800017 	ldw	r2,0(r2)
    7ea0:	1000683a 	jmp	r2
    7ea4:	00008568 	cmpgeui	zero,zero,533
    7ea8:	00008868 	cmpgeui	zero,zero,545
    7eac:	00008868 	cmpgeui	zero,zero,545
    7eb0:	00008584 	movi	zero,534
    7eb4:	00008868 	cmpgeui	zero,zero,545
    7eb8:	00008868 	cmpgeui	zero,zero,545
    7ebc:	00008868 	cmpgeui	zero,zero,545
    7ec0:	00008868 	cmpgeui	zero,zero,545
    7ec4:	00008868 	cmpgeui	zero,zero,545
    7ec8:	00008868 	cmpgeui	zero,zero,545
    7ecc:	0000878c 	andi	zero,zero,542
    7ed0:	000087b0 	cmpltui	zero,zero,542
    7ed4:	00008868 	cmpgeui	zero,zero,545
    7ed8:	000080a8 	cmpgeui	zero,zero,514
    7edc:	000087c4 	movi	zero,543
    7ee0:	00008868 	cmpgeui	zero,zero,545
    7ee4:	00008590 	cmplti	zero,zero,534
    7ee8:	0000859c 	xori	zero,zero,534
    7eec:	0000859c 	xori	zero,zero,534
    7ef0:	0000859c 	xori	zero,zero,534
    7ef4:	0000859c 	xori	zero,zero,534
    7ef8:	0000859c 	xori	zero,zero,534
    7efc:	0000859c 	xori	zero,zero,534
    7f00:	0000859c 	xori	zero,zero,534
    7f04:	0000859c 	xori	zero,zero,534
    7f08:	0000859c 	xori	zero,zero,534
    7f0c:	00008868 	cmpgeui	zero,zero,545
    7f10:	00008868 	cmpgeui	zero,zero,545
    7f14:	00008868 	cmpgeui	zero,zero,545
    7f18:	00008868 	cmpgeui	zero,zero,545
    7f1c:	00008868 	cmpgeui	zero,zero,545
    7f20:	00008868 	cmpgeui	zero,zero,545
    7f24:	00008868 	cmpgeui	zero,zero,545
    7f28:	00008868 	cmpgeui	zero,zero,545
    7f2c:	00008868 	cmpgeui	zero,zero,545
    7f30:	00008868 	cmpgeui	zero,zero,545
    7f34:	000085dc 	xori	zero,zero,535
    7f38:	00008868 	cmpgeui	zero,zero,545
    7f3c:	00008868 	cmpgeui	zero,zero,545
    7f40:	00008868 	cmpgeui	zero,zero,545
    7f44:	00008868 	cmpgeui	zero,zero,545
    7f48:	00008868 	cmpgeui	zero,zero,545
    7f4c:	00008868 	cmpgeui	zero,zero,545
    7f50:	00008868 	cmpgeui	zero,zero,545
    7f54:	00008868 	cmpgeui	zero,zero,545
    7f58:	00008868 	cmpgeui	zero,zero,545
    7f5c:	00008868 	cmpgeui	zero,zero,545
    7f60:	00008618 	cmpnei	zero,zero,536
    7f64:	00008868 	cmpgeui	zero,zero,545
    7f68:	00008868 	cmpgeui	zero,zero,545
    7f6c:	00008868 	cmpgeui	zero,zero,545
    7f70:	00008868 	cmpgeui	zero,zero,545
    7f74:	00008868 	cmpgeui	zero,zero,545
    7f78:	00008674 	movhi	zero,537
    7f7c:	00008868 	cmpgeui	zero,zero,545
    7f80:	00008868 	cmpgeui	zero,zero,545
    7f84:	000086e8 	cmpgeui	zero,zero,539
    7f88:	00008868 	cmpgeui	zero,zero,545
    7f8c:	00008868 	cmpgeui	zero,zero,545
    7f90:	00008868 	cmpgeui	zero,zero,545
    7f94:	00008868 	cmpgeui	zero,zero,545
    7f98:	00008868 	cmpgeui	zero,zero,545
    7f9c:	00008868 	cmpgeui	zero,zero,545
    7fa0:	00008868 	cmpgeui	zero,zero,545
    7fa4:	00008868 	cmpgeui	zero,zero,545
    7fa8:	00008868 	cmpgeui	zero,zero,545
    7fac:	00008868 	cmpgeui	zero,zero,545
    7fb0:	00008490 	cmplti	zero,zero,530
    7fb4:	000084c0 	call	84c <___vfprintf_internal_r+0x338>
    7fb8:	00008868 	cmpgeui	zero,zero,545
    7fbc:	00008868 	cmpgeui	zero,zero,545
    7fc0:	00008868 	cmpgeui	zero,zero,545
    7fc4:	00008810 	cmplti	zero,zero,544
    7fc8:	000084c0 	call	84c <___vfprintf_internal_r+0x338>
    7fcc:	00008868 	cmpgeui	zero,zero,545
    7fd0:	00008868 	cmpgeui	zero,zero,545
    7fd4:	00008368 	cmpgeui	zero,zero,525
    7fd8:	00008868 	cmpgeui	zero,zero,545
    7fdc:	0000837c 	xorhi	zero,zero,525
    7fe0:	000083b4 	movhi	zero,526
    7fe4:	000080b4 	movhi	zero,514
    7fe8:	0000835c 	xori	zero,zero,525
    7fec:	00008868 	cmpgeui	zero,zero,545
    7ff0:	00008728 	cmpgeui	zero,zero,540
    7ff4:	00008868 	cmpgeui	zero,zero,545
    7ff8:	00008774 	movhi	zero,541
    7ffc:	00008868 	cmpgeui	zero,zero,545
    8000:	00008868 	cmpgeui	zero,zero,545
    8004:	00008438 	rdprs	zero,zero,528
    8008:	42000204 	addi	r8,r8,8
    800c:	d8c02417 	ldw	r3,144(sp)
    8010:	1c07883a 	add	r3,r3,r16
    8014:	d8c02415 	stw	r3,144(sp)
    8018:	003f8c06 	br	7e4c <__alt_data_end+0xfffbea6c>
    801c:	d9402017 	ldw	r5,128(sp)
    8020:	d9002117 	ldw	r4,132(sp)
    8024:	00028c80 	call	28c8 <__swsetup_r>
    8028:	1003c11e 	bne	r2,zero,8f30 <___vfiprintf_internal_r+0x1224>
    802c:	d9402017 	ldw	r5,128(sp)
    8030:	00c00284 	movi	r3,10
    8034:	2880030b 	ldhu	r2,12(r5)
    8038:	1080068c 	andi	r2,r2,26
    803c:	10ff581e 	bne	r2,r3,7da0 <__alt_data_end+0xfffbe9c0>
    8040:	d8c02017 	ldw	r3,128(sp)
    8044:	1880038f 	ldh	r2,14(r3)
    8048:	103f5516 	blt	r2,zero,7da0 <__alt_data_end+0xfffbe9c0>
    804c:	d9c02217 	ldw	r7,136(sp)
    8050:	d9002117 	ldw	r4,132(sp)
    8054:	a80d883a 	mov	r6,r21
    8058:	180b883a 	mov	r5,r3
    805c:	00092340 	call	9234 <__sbprintf>
    8060:	dfc03517 	ldw	ra,212(sp)
    8064:	df003417 	ldw	fp,208(sp)
    8068:	ddc03317 	ldw	r23,204(sp)
    806c:	dd803217 	ldw	r22,200(sp)
    8070:	dd403117 	ldw	r21,196(sp)
    8074:	dd003017 	ldw	r20,192(sp)
    8078:	dcc02f17 	ldw	r19,188(sp)
    807c:	dc802e17 	ldw	r18,184(sp)
    8080:	dc402d17 	ldw	r17,180(sp)
    8084:	dc002c17 	ldw	r16,176(sp)
    8088:	dec03604 	addi	sp,sp,216
    808c:	f800283a 	ret
    8090:	00048d40 	call	48d4 <__sinit>
    8094:	003f2f06 	br	7d54 <__alt_data_end+0xfffbe974>
    8098:	d8c02517 	ldw	r3,148(sp)
    809c:	d8802215 	stw	r2,136(sp)
    80a0:	00c7c83a 	sub	r3,zero,r3
    80a4:	d8c02515 	stw	r3,148(sp)
    80a8:	8c400114 	ori	r17,r17,4
    80ac:	b0c00007 	ldb	r3,0(r22)
    80b0:	003f7306 	br	7e80 <__alt_data_end+0xfffbeaa0>
    80b4:	00800c04 	movi	r2,48
    80b8:	d9402217 	ldw	r5,136(sp)
    80bc:	d8801d05 	stb	r2,116(sp)
    80c0:	00801e04 	movi	r2,120
    80c4:	d8801d45 	stb	r2,117(sp)
    80c8:	d8001d85 	stb	zero,118(sp)
    80cc:	b811883a 	mov	r8,r23
    80d0:	28c00104 	addi	r3,r5,4
    80d4:	2cc00017 	ldw	r19,0(r5)
    80d8:	0029883a 	mov	r20,zero
    80dc:	88800094 	ori	r2,r17,2
    80e0:	80032516 	blt	r16,zero,8d78 <___vfiprintf_internal_r+0x106c>
    80e4:	00bfdfc4 	movi	r2,-129
    80e8:	88a2703a 	and	r17,r17,r2
    80ec:	d8c02215 	stw	r3,136(sp)
    80f0:	8c400094 	ori	r17,r17,2
    80f4:	98032a1e 	bne	r19,zero,8da0 <___vfiprintf_internal_r+0x1094>
    80f8:	00800074 	movhi	r2,1
    80fc:	10bea904 	addi	r2,r2,-1372
    8100:	d8802615 	stw	r2,152(sp)
    8104:	002b883a 	mov	r21,zero
    8108:	8001741e 	bne	r16,zero,86dc <___vfiprintf_internal_r+0x9d0>
    810c:	0021883a 	mov	r16,zero
    8110:	0029883a 	mov	r20,zero
    8114:	ddc01a04 	addi	r23,sp,104
    8118:	8027883a 	mov	r19,r16
    811c:	8500010e 	bge	r16,r20,8124 <___vfiprintf_internal_r+0x418>
    8120:	a027883a 	mov	r19,r20
    8124:	ad403fcc 	andi	r21,r21,255
    8128:	ad40201c 	xori	r21,r21,128
    812c:	ad7fe004 	addi	r21,r21,-128
    8130:	a8000126 	beq	r21,zero,8138 <___vfiprintf_internal_r+0x42c>
    8134:	9cc00044 	addi	r19,r19,1
    8138:	89c0008c 	andi	r7,r17,2
    813c:	38000126 	beq	r7,zero,8144 <___vfiprintf_internal_r+0x438>
    8140:	9cc00084 	addi	r19,r19,2
    8144:	88c0210c 	andi	r3,r17,132
    8148:	1801dd1e 	bne	r3,zero,88c0 <___vfiprintf_internal_r+0xbb4>
    814c:	d9402517 	ldw	r5,148(sp)
    8150:	2cebc83a 	sub	r21,r5,r19
    8154:	0541da0e 	bge	zero,r21,88c0 <___vfiprintf_internal_r+0xbb4>
    8158:	07000404 	movi	fp,16
    815c:	d8801c17 	ldw	r2,112(sp)
    8160:	e543be0e 	bge	fp,r21,905c <___vfiprintf_internal_r+0x1350>
    8164:	01400074 	movhi	r5,1
    8168:	297f0e04 	addi	r5,r5,-968
    816c:	dc002715 	stw	r16,156(sp)
    8170:	d9801b17 	ldw	r6,108(sp)
    8174:	a821883a 	mov	r16,r21
    8178:	d9402315 	stw	r5,140(sp)
    817c:	028001c4 	movi	r10,7
    8180:	d9c02915 	stw	r7,164(sp)
    8184:	182b883a 	mov	r21,r3
    8188:	00000506 	br	81a0 <___vfiprintf_internal_r+0x494>
    818c:	31000084 	addi	r4,r6,2
    8190:	42000204 	addi	r8,r8,8
    8194:	180d883a 	mov	r6,r3
    8198:	843ffc04 	addi	r16,r16,-16
    819c:	e4000f0e 	bge	fp,r16,81dc <___vfiprintf_internal_r+0x4d0>
    81a0:	01000074 	movhi	r4,1
    81a4:	10800404 	addi	r2,r2,16
    81a8:	30c00044 	addi	r3,r6,1
    81ac:	213f0e04 	addi	r4,r4,-968
    81b0:	41000015 	stw	r4,0(r8)
    81b4:	47000115 	stw	fp,4(r8)
    81b8:	d8801c15 	stw	r2,112(sp)
    81bc:	d8c01b15 	stw	r3,108(sp)
    81c0:	50fff20e 	bge	r10,r3,818c <__alt_data_end+0xfffbedac>
    81c4:	1001b21e 	bne	r2,zero,8890 <___vfiprintf_internal_r+0xb84>
    81c8:	843ffc04 	addi	r16,r16,-16
    81cc:	000d883a 	mov	r6,zero
    81d0:	01000044 	movi	r4,1
    81d4:	d811883a 	mov	r8,sp
    81d8:	e43ff116 	blt	fp,r16,81a0 <__alt_data_end+0xfffbedc0>
    81dc:	a807883a 	mov	r3,r21
    81e0:	d9c02917 	ldw	r7,164(sp)
    81e4:	802b883a 	mov	r21,r16
    81e8:	dc002717 	ldw	r16,156(sp)
    81ec:	d9402317 	ldw	r5,140(sp)
    81f0:	a885883a 	add	r2,r21,r2
    81f4:	45400115 	stw	r21,4(r8)
    81f8:	41400015 	stw	r5,0(r8)
    81fc:	d8801c15 	stw	r2,112(sp)
    8200:	d9001b15 	stw	r4,108(sp)
    8204:	014001c4 	movi	r5,7
    8208:	29026216 	blt	r5,r4,8b94 <___vfiprintf_internal_r+0xe88>
    820c:	d9801d87 	ldb	r6,118(sp)
    8210:	42000204 	addi	r8,r8,8
    8214:	21400044 	addi	r5,r4,1
    8218:	3001ae1e 	bne	r6,zero,88d4 <___vfiprintf_internal_r+0xbc8>
    821c:	3801bb26 	beq	r7,zero,890c <___vfiprintf_internal_r+0xc00>
    8220:	d9001d04 	addi	r4,sp,116
    8224:	10800084 	addi	r2,r2,2
    8228:	41000015 	stw	r4,0(r8)
    822c:	01000084 	movi	r4,2
    8230:	41000115 	stw	r4,4(r8)
    8234:	d8801c15 	stw	r2,112(sp)
    8238:	d9401b15 	stw	r5,108(sp)
    823c:	010001c4 	movi	r4,7
    8240:	2142680e 	bge	r4,r5,8be4 <___vfiprintf_internal_r+0xed8>
    8244:	1002b11e 	bne	r2,zero,8d0c <___vfiprintf_internal_r+0x1000>
    8248:	01802004 	movi	r6,128
    824c:	01400044 	movi	r5,1
    8250:	0009883a 	mov	r4,zero
    8254:	d811883a 	mov	r8,sp
    8258:	1981ae1e 	bne	r3,r6,8914 <___vfiprintf_internal_r+0xc08>
    825c:	d8c02517 	ldw	r3,148(sp)
    8260:	1cf9c83a 	sub	fp,r3,r19
    8264:	0701ab0e 	bge	zero,fp,8914 <___vfiprintf_internal_r+0xc08>
    8268:	05400404 	movi	r21,16
    826c:	af03a90e 	bge	r21,fp,9114 <___vfiprintf_internal_r+0x1408>
    8270:	01400074 	movhi	r5,1
    8274:	297f0a04 	addi	r5,r5,-984
    8278:	d9402315 	stw	r5,140(sp)
    827c:	01c001c4 	movi	r7,7
    8280:	00000506 	br	8298 <___vfiprintf_internal_r+0x58c>
    8284:	21800084 	addi	r6,r4,2
    8288:	42000204 	addi	r8,r8,8
    828c:	1809883a 	mov	r4,r3
    8290:	e73ffc04 	addi	fp,fp,-16
    8294:	af000d0e 	bge	r21,fp,82cc <___vfiprintf_internal_r+0x5c0>
    8298:	10800404 	addi	r2,r2,16
    829c:	20c00044 	addi	r3,r4,1
    82a0:	44800015 	stw	r18,0(r8)
    82a4:	45400115 	stw	r21,4(r8)
    82a8:	d8801c15 	stw	r2,112(sp)
    82ac:	d8c01b15 	stw	r3,108(sp)
    82b0:	38fff40e 	bge	r7,r3,8284 <__alt_data_end+0xfffbeea4>
    82b4:	10022b1e 	bne	r2,zero,8b64 <___vfiprintf_internal_r+0xe58>
    82b8:	e73ffc04 	addi	fp,fp,-16
    82bc:	01800044 	movi	r6,1
    82c0:	0009883a 	mov	r4,zero
    82c4:	d811883a 	mov	r8,sp
    82c8:	af3ff316 	blt	r21,fp,8298 <__alt_data_end+0xfffbeeb8>
    82cc:	d8c02317 	ldw	r3,140(sp)
    82d0:	1705883a 	add	r2,r2,fp
    82d4:	47000115 	stw	fp,4(r8)
    82d8:	40c00015 	stw	r3,0(r8)
    82dc:	d8801c15 	stw	r2,112(sp)
    82e0:	d9801b15 	stw	r6,108(sp)
    82e4:	00c001c4 	movi	r3,7
    82e8:	19829416 	blt	r3,r6,8d3c <___vfiprintf_internal_r+0x1030>
    82ec:	8521c83a 	sub	r16,r16,r20
    82f0:	42000204 	addi	r8,r8,8
    82f4:	31400044 	addi	r5,r6,1
    82f8:	3009883a 	mov	r4,r6
    82fc:	04018716 	blt	zero,r16,891c <___vfiprintf_internal_r+0xc10>
    8300:	a085883a 	add	r2,r20,r2
    8304:	45c00015 	stw	r23,0(r8)
    8308:	45000115 	stw	r20,4(r8)
    830c:	d8801c15 	stw	r2,112(sp)
    8310:	d9401b15 	stw	r5,108(sp)
    8314:	00c001c4 	movi	r3,7
    8318:	1941c20e 	bge	r3,r5,8a24 <___vfiprintf_internal_r+0xd18>
    831c:	1002531e 	bne	r2,zero,8c6c <___vfiprintf_internal_r+0xf60>
    8320:	d8001b15 	stw	zero,108(sp)
    8324:	8c40010c 	andi	r17,r17,4
    8328:	88023226 	beq	r17,zero,8bf4 <___vfiprintf_internal_r+0xee8>
    832c:	d9002517 	ldw	r4,148(sp)
    8330:	24e3c83a 	sub	r17,r4,r19
    8334:	04432916 	blt	zero,r17,8fdc <___vfiprintf_internal_r+0x12d0>
    8338:	d8802517 	ldw	r2,148(sp)
    833c:	14c0010e 	bge	r2,r19,8344 <___vfiprintf_internal_r+0x638>
    8340:	9805883a 	mov	r2,r19
    8344:	d8c02417 	ldw	r3,144(sp)
    8348:	1887883a 	add	r3,r3,r2
    834c:	d8c02415 	stw	r3,144(sp)
    8350:	d8001b15 	stw	zero,108(sp)
    8354:	d811883a 	mov	r8,sp
    8358:	003ea006 	br	7ddc <__alt_data_end+0xfffbe9fc>
    835c:	8c400814 	ori	r17,r17,32
    8360:	b0c00007 	ldb	r3,0(r22)
    8364:	003ec606 	br	7e80 <__alt_data_end+0xfffbeaa0>
    8368:	b0c00007 	ldb	r3,0(r22)
    836c:	00801b04 	movi	r2,108
    8370:	18832026 	beq	r3,r2,8ff4 <___vfiprintf_internal_r+0x12e8>
    8374:	8c400414 	ori	r17,r17,16
    8378:	003ec106 	br	7e80 <__alt_data_end+0xfffbeaa0>
    837c:	9cc03fcc 	andi	r19,r19,255
    8380:	b811883a 	mov	r8,r23
    8384:	9803981e 	bne	r19,zero,91e8 <___vfiprintf_internal_r+0x14dc>
    8388:	8880080c 	andi	r2,r17,32
    838c:	1002be26 	beq	r2,zero,8e88 <___vfiprintf_internal_r+0x117c>
    8390:	d9002217 	ldw	r4,136(sp)
    8394:	d9402417 	ldw	r5,144(sp)
    8398:	20800017 	ldw	r2,0(r4)
    839c:	2807d7fa 	srai	r3,r5,31
    83a0:	21000104 	addi	r4,r4,4
    83a4:	d9002215 	stw	r4,136(sp)
    83a8:	11400015 	stw	r5,0(r2)
    83ac:	10c00115 	stw	r3,4(r2)
    83b0:	003e8a06 	br	7ddc <__alt_data_end+0xfffbe9fc>
    83b4:	9cc03fcc 	andi	r19,r19,255
    83b8:	b811883a 	mov	r8,r23
    83bc:	9803871e 	bne	r19,zero,91dc <___vfiprintf_internal_r+0x14d0>
    83c0:	8880080c 	andi	r2,r17,32
    83c4:	10009a26 	beq	r2,zero,8630 <___vfiprintf_internal_r+0x924>
    83c8:	d9002217 	ldw	r4,136(sp)
    83cc:	d8001d85 	stb	zero,118(sp)
    83d0:	20800204 	addi	r2,r4,8
    83d4:	24c00017 	ldw	r19,0(r4)
    83d8:	25000117 	ldw	r20,4(r4)
    83dc:	8002a416 	blt	r16,zero,8e70 <___vfiprintf_internal_r+0x1164>
    83e0:	013fdfc4 	movi	r4,-129
    83e4:	9d06b03a 	or	r3,r19,r20
    83e8:	d8802215 	stw	r2,136(sp)
    83ec:	8922703a 	and	r17,r17,r4
    83f0:	18009b26 	beq	r3,zero,8660 <___vfiprintf_internal_r+0x954>
    83f4:	002b883a 	mov	r21,zero
    83f8:	ddc01a04 	addi	r23,sp,104
    83fc:	9806d0fa 	srli	r3,r19,3
    8400:	a008977a 	slli	r4,r20,29
    8404:	a028d0fa 	srli	r20,r20,3
    8408:	9cc001cc 	andi	r19,r19,7
    840c:	98800c04 	addi	r2,r19,48
    8410:	bdffffc4 	addi	r23,r23,-1
    8414:	20e6b03a 	or	r19,r4,r3
    8418:	b8800005 	stb	r2,0(r23)
    841c:	9d06b03a 	or	r3,r19,r20
    8420:	183ff61e 	bne	r3,zero,83fc <__alt_data_end+0xfffbf01c>
    8424:	88c0004c 	andi	r3,r17,1
    8428:	18021f1e 	bne	r3,zero,8ca8 <___vfiprintf_internal_r+0xf9c>
    842c:	d9401e17 	ldw	r5,120(sp)
    8430:	2de9c83a 	sub	r20,r5,r23
    8434:	003f3806 	br	8118 <__alt_data_end+0xfffbed38>
    8438:	9cc03fcc 	andi	r19,r19,255
    843c:	b811883a 	mov	r8,r23
    8440:	98034f1e 	bne	r19,zero,9180 <___vfiprintf_internal_r+0x1474>
    8444:	00800074 	movhi	r2,1
    8448:	10bea904 	addi	r2,r2,-1372
    844c:	d8802615 	stw	r2,152(sp)
    8450:	8880080c 	andi	r2,r17,32
    8454:	1000ac26 	beq	r2,zero,8708 <___vfiprintf_internal_r+0x9fc>
    8458:	d9002217 	ldw	r4,136(sp)
    845c:	24c00017 	ldw	r19,0(r4)
    8460:	25000117 	ldw	r20,4(r4)
    8464:	21000204 	addi	r4,r4,8
    8468:	d9002215 	stw	r4,136(sp)
    846c:	8880004c 	andi	r2,r17,1
    8470:	1001e726 	beq	r2,zero,8c10 <___vfiprintf_internal_r+0xf04>
    8474:	9d04b03a 	or	r2,r19,r20
    8478:	10025c1e 	bne	r2,zero,8dec <___vfiprintf_internal_r+0x10e0>
    847c:	d8001d85 	stb	zero,118(sp)
    8480:	80024416 	blt	r16,zero,8d94 <___vfiprintf_internal_r+0x1088>
    8484:	00bfdfc4 	movi	r2,-129
    8488:	88a2703a 	and	r17,r17,r2
    848c:	003f1d06 	br	8104 <__alt_data_end+0xfffbed24>
    8490:	d8c02217 	ldw	r3,136(sp)
    8494:	04c00044 	movi	r19,1
    8498:	b811883a 	mov	r8,r23
    849c:	18800017 	ldw	r2,0(r3)
    84a0:	18c00104 	addi	r3,r3,4
    84a4:	d8001d85 	stb	zero,118(sp)
    84a8:	d8801005 	stb	r2,64(sp)
    84ac:	d8c02215 	stw	r3,136(sp)
    84b0:	9829883a 	mov	r20,r19
    84b4:	ddc01004 	addi	r23,sp,64
    84b8:	0021883a 	mov	r16,zero
    84bc:	003f1e06 	br	8138 <__alt_data_end+0xfffbed58>
    84c0:	9cc03fcc 	andi	r19,r19,255
    84c4:	b811883a 	mov	r8,r23
    84c8:	9803331e 	bne	r19,zero,9198 <___vfiprintf_internal_r+0x148c>
    84cc:	8880080c 	andi	r2,r17,32
    84d0:	10004826 	beq	r2,zero,85f4 <___vfiprintf_internal_r+0x8e8>
    84d4:	d9002217 	ldw	r4,136(sp)
    84d8:	20800117 	ldw	r2,4(r4)
    84dc:	24c00017 	ldw	r19,0(r4)
    84e0:	21000204 	addi	r4,r4,8
    84e4:	d9002215 	stw	r4,136(sp)
    84e8:	1029883a 	mov	r20,r2
    84ec:	10024c16 	blt	r2,zero,8e20 <___vfiprintf_internal_r+0x1114>
    84f0:	dd401d83 	ldbu	r21,118(sp)
    84f4:	80007116 	blt	r16,zero,86bc <___vfiprintf_internal_r+0x9b0>
    84f8:	00ffdfc4 	movi	r3,-129
    84fc:	9d04b03a 	or	r2,r19,r20
    8500:	88e2703a 	and	r17,r17,r3
    8504:	1000d126 	beq	r2,zero,884c <___vfiprintf_internal_r+0xb40>
    8508:	a0023526 	beq	r20,zero,8de0 <___vfiprintf_internal_r+0x10d4>
    850c:	ddc01a04 	addi	r23,sp,104
    8510:	4039883a 	mov	fp,r8
    8514:	9809883a 	mov	r4,r19
    8518:	a00b883a 	mov	r5,r20
    851c:	01800284 	movi	r6,10
    8520:	000f883a 	mov	r7,zero
    8524:	000a2380 	call	a238 <__umoddi3>
    8528:	10800c04 	addi	r2,r2,48
    852c:	bdffffc4 	addi	r23,r23,-1
    8530:	9809883a 	mov	r4,r19
    8534:	a00b883a 	mov	r5,r20
    8538:	b8800005 	stb	r2,0(r23)
    853c:	01800284 	movi	r6,10
    8540:	000f883a 	mov	r7,zero
    8544:	0009c3c0 	call	9c3c <__udivdi3>
    8548:	1027883a 	mov	r19,r2
    854c:	10c4b03a 	or	r2,r2,r3
    8550:	1829883a 	mov	r20,r3
    8554:	103fef1e 	bne	r2,zero,8514 <__alt_data_end+0xfffbf134>
    8558:	d9001e17 	ldw	r4,120(sp)
    855c:	e011883a 	mov	r8,fp
    8560:	25e9c83a 	sub	r20,r4,r23
    8564:	003eec06 	br	8118 <__alt_data_end+0xfffbed38>
    8568:	d8802307 	ldb	r2,140(sp)
    856c:	1002361e 	bne	r2,zero,8e48 <___vfiprintf_internal_r+0x113c>
    8570:	00c00804 	movi	r3,32
    8574:	d8c02305 	stb	r3,140(sp)
    8578:	04c00044 	movi	r19,1
    857c:	b0c00007 	ldb	r3,0(r22)
    8580:	003e3f06 	br	7e80 <__alt_data_end+0xfffbeaa0>
    8584:	8c400054 	ori	r17,r17,1
    8588:	b0c00007 	ldb	r3,0(r22)
    858c:	003e3c06 	br	7e80 <__alt_data_end+0xfffbeaa0>
    8590:	8c402014 	ori	r17,r17,128
    8594:	b0c00007 	ldb	r3,0(r22)
    8598:	003e3906 	br	7e80 <__alt_data_end+0xfffbeaa0>
    859c:	dc002715 	stw	r16,156(sp)
    85a0:	d8002515 	stw	zero,148(sp)
    85a4:	1f3ff404 	addi	fp,r3,-48
    85a8:	0009883a 	mov	r4,zero
    85ac:	b021883a 	mov	r16,r22
    85b0:	01400284 	movi	r5,10
    85b4:	000a9b00 	call	a9b0 <__mulsi3>
    85b8:	80c00007 	ldb	r3,0(r16)
    85bc:	e089883a 	add	r4,fp,r2
    85c0:	b5800044 	addi	r22,r22,1
    85c4:	1f3ff404 	addi	fp,r3,-48
    85c8:	b021883a 	mov	r16,r22
    85cc:	af3ff82e 	bgeu	r21,fp,85b0 <__alt_data_end+0xfffbf1d0>
    85d0:	d9002515 	stw	r4,148(sp)
    85d4:	dc002717 	ldw	r16,156(sp)
    85d8:	003e2a06 	br	7e84 <__alt_data_end+0xfffbeaa4>
    85dc:	9cc03fcc 	andi	r19,r19,255
    85e0:	b811883a 	mov	r8,r23
    85e4:	9802e91e 	bne	r19,zero,918c <___vfiprintf_internal_r+0x1480>
    85e8:	8c400414 	ori	r17,r17,16
    85ec:	8880080c 	andi	r2,r17,32
    85f0:	103fb81e 	bne	r2,zero,84d4 <__alt_data_end+0xfffbf0f4>
    85f4:	8880040c 	andi	r2,r17,16
    85f8:	10022e26 	beq	r2,zero,8eb4 <___vfiprintf_internal_r+0x11a8>
    85fc:	d9402217 	ldw	r5,136(sp)
    8600:	2cc00017 	ldw	r19,0(r5)
    8604:	29400104 	addi	r5,r5,4
    8608:	d9402215 	stw	r5,136(sp)
    860c:	9829d7fa 	srai	r20,r19,31
    8610:	a005883a 	mov	r2,r20
    8614:	003fb506 	br	84ec <__alt_data_end+0xfffbf10c>
    8618:	9cc03fcc 	andi	r19,r19,255
    861c:	b811883a 	mov	r8,r23
    8620:	9802fa1e 	bne	r19,zero,920c <___vfiprintf_internal_r+0x1500>
    8624:	8c400414 	ori	r17,r17,16
    8628:	8880080c 	andi	r2,r17,32
    862c:	103f661e 	bne	r2,zero,83c8 <__alt_data_end+0xfffbefe8>
    8630:	8880040c 	andi	r2,r17,16
    8634:	10020626 	beq	r2,zero,8e50 <___vfiprintf_internal_r+0x1144>
    8638:	d9402217 	ldw	r5,136(sp)
    863c:	d8001d85 	stb	zero,118(sp)
    8640:	0029883a 	mov	r20,zero
    8644:	28800104 	addi	r2,r5,4
    8648:	2cc00017 	ldw	r19,0(r5)
    864c:	80020816 	blt	r16,zero,8e70 <___vfiprintf_internal_r+0x1164>
    8650:	00ffdfc4 	movi	r3,-129
    8654:	d8802215 	stw	r2,136(sp)
    8658:	88e2703a 	and	r17,r17,r3
    865c:	983f651e 	bne	r19,zero,83f4 <__alt_data_end+0xfffbf014>
    8660:	002b883a 	mov	r21,zero
    8664:	8002cf26 	beq	r16,zero,91a4 <___vfiprintf_internal_r+0x1498>
    8668:	0027883a 	mov	r19,zero
    866c:	0029883a 	mov	r20,zero
    8670:	003f6106 	br	83f8 <__alt_data_end+0xfffbf018>
    8674:	9cc03fcc 	andi	r19,r19,255
    8678:	b811883a 	mov	r8,r23
    867c:	9802e01e 	bne	r19,zero,9200 <___vfiprintf_internal_r+0x14f4>
    8680:	8c400414 	ori	r17,r17,16
    8684:	8880080c 	andi	r2,r17,32
    8688:	1000641e 	bne	r2,zero,881c <___vfiprintf_internal_r+0xb10>
    868c:	8880040c 	andi	r2,r17,16
    8690:	1001c81e 	bne	r2,zero,8db4 <___vfiprintf_internal_r+0x10a8>
    8694:	8880100c 	andi	r2,r17,64
    8698:	d8001d85 	stb	zero,118(sp)
    869c:	1002281e 	bne	r2,zero,8f40 <___vfiprintf_internal_r+0x1234>
    86a0:	d9002217 	ldw	r4,136(sp)
    86a4:	0029883a 	mov	r20,zero
    86a8:	20800104 	addi	r2,r4,4
    86ac:	24c00017 	ldw	r19,0(r4)
    86b0:	8001c60e 	bge	r16,zero,8dcc <___vfiprintf_internal_r+0x10c0>
    86b4:	d8802215 	stw	r2,136(sp)
    86b8:	002b883a 	mov	r21,zero
    86bc:	9d04b03a 	or	r2,r19,r20
    86c0:	103f911e 	bne	r2,zero,8508 <__alt_data_end+0xfffbf128>
    86c4:	00800044 	movi	r2,1
    86c8:	10803fcc 	andi	r2,r2,255
    86cc:	00c00044 	movi	r3,1
    86d0:	10c05f26 	beq	r2,r3,8850 <___vfiprintf_internal_r+0xb44>
    86d4:	00c00084 	movi	r3,2
    86d8:	10ffe31e 	bne	r2,r3,8668 <__alt_data_end+0xfffbf288>
    86dc:	0027883a 	mov	r19,zero
    86e0:	0029883a 	mov	r20,zero
    86e4:	00015106 	br	8c2c <___vfiprintf_internal_r+0xf20>
    86e8:	9cc03fcc 	andi	r19,r19,255
    86ec:	b811883a 	mov	r8,r23
    86f0:	9802c01e 	bne	r19,zero,91f4 <___vfiprintf_internal_r+0x14e8>
    86f4:	01400074 	movhi	r5,1
    86f8:	297ea404 	addi	r5,r5,-1392
    86fc:	d9402615 	stw	r5,152(sp)
    8700:	8880080c 	andi	r2,r17,32
    8704:	103f541e 	bne	r2,zero,8458 <__alt_data_end+0xfffbf078>
    8708:	8880040c 	andi	r2,r17,16
    870c:	1001f226 	beq	r2,zero,8ed8 <___vfiprintf_internal_r+0x11cc>
    8710:	d9402217 	ldw	r5,136(sp)
    8714:	0029883a 	mov	r20,zero
    8718:	2cc00017 	ldw	r19,0(r5)
    871c:	29400104 	addi	r5,r5,4
    8720:	d9402215 	stw	r5,136(sp)
    8724:	003f5106 	br	846c <__alt_data_end+0xfffbf08c>
    8728:	d8c02217 	ldw	r3,136(sp)
    872c:	b811883a 	mov	r8,r23
    8730:	d8001d85 	stb	zero,118(sp)
    8734:	1dc00017 	ldw	r23,0(r3)
    8738:	1f000104 	addi	fp,r3,4
    873c:	b8025926 	beq	r23,zero,90a4 <___vfiprintf_internal_r+0x1398>
    8740:	80023316 	blt	r16,zero,9010 <___vfiprintf_internal_r+0x1304>
    8744:	800d883a 	mov	r6,r16
    8748:	000b883a 	mov	r5,zero
    874c:	b809883a 	mov	r4,r23
    8750:	da002a15 	stw	r8,168(sp)
    8754:	0005e4c0 	call	5e4c <memchr>
    8758:	da002a17 	ldw	r8,168(sp)
    875c:	10026826 	beq	r2,zero,9100 <___vfiprintf_internal_r+0x13f4>
    8760:	15e9c83a 	sub	r20,r2,r23
    8764:	dd401d83 	ldbu	r21,118(sp)
    8768:	df002215 	stw	fp,136(sp)
    876c:	0021883a 	mov	r16,zero
    8770:	003e6906 	br	8118 <__alt_data_end+0xfffbed38>
    8774:	9cc03fcc 	andi	r19,r19,255
    8778:	b811883a 	mov	r8,r23
    877c:	983fc126 	beq	r19,zero,8684 <__alt_data_end+0xfffbf2a4>
    8780:	d8c02303 	ldbu	r3,140(sp)
    8784:	d8c01d85 	stb	r3,118(sp)
    8788:	003fbe06 	br	8684 <__alt_data_end+0xfffbf2a4>
    878c:	d9002217 	ldw	r4,136(sp)
    8790:	d9402217 	ldw	r5,136(sp)
    8794:	21000017 	ldw	r4,0(r4)
    8798:	28800104 	addi	r2,r5,4
    879c:	d9002515 	stw	r4,148(sp)
    87a0:	203e3d16 	blt	r4,zero,8098 <__alt_data_end+0xfffbecb8>
    87a4:	d8802215 	stw	r2,136(sp)
    87a8:	b0c00007 	ldb	r3,0(r22)
    87ac:	003db406 	br	7e80 <__alt_data_end+0xfffbeaa0>
    87b0:	00c00ac4 	movi	r3,43
    87b4:	d8c02305 	stb	r3,140(sp)
    87b8:	04c00044 	movi	r19,1
    87bc:	b0c00007 	ldb	r3,0(r22)
    87c0:	003daf06 	br	7e80 <__alt_data_end+0xfffbeaa0>
    87c4:	b0c00007 	ldb	r3,0(r22)
    87c8:	01000a84 	movi	r4,42
    87cc:	b4000044 	addi	r16,r22,1
    87d0:	19025e26 	beq	r3,r4,914c <___vfiprintf_internal_r+0x1440>
    87d4:	1f3ff404 	addi	fp,r3,-48
    87d8:	0009883a 	mov	r4,zero
    87dc:	af025236 	bltu	r21,fp,9128 <___vfiprintf_internal_r+0x141c>
    87e0:	01400284 	movi	r5,10
    87e4:	000a9b00 	call	a9b0 <__mulsi3>
    87e8:	80c00007 	ldb	r3,0(r16)
    87ec:	1709883a 	add	r4,r2,fp
    87f0:	85800044 	addi	r22,r16,1
    87f4:	1f3ff404 	addi	fp,r3,-48
    87f8:	b021883a 	mov	r16,r22
    87fc:	af3ff82e 	bgeu	r21,fp,87e0 <__alt_data_end+0xfffbf400>
    8800:	2021883a 	mov	r16,r4
    8804:	203d9f0e 	bge	r4,zero,7e84 <__alt_data_end+0xfffbeaa4>
    8808:	043fffc4 	movi	r16,-1
    880c:	003d9d06 	br	7e84 <__alt_data_end+0xfffbeaa4>
    8810:	8c401014 	ori	r17,r17,64
    8814:	b0c00007 	ldb	r3,0(r22)
    8818:	003d9906 	br	7e80 <__alt_data_end+0xfffbeaa0>
    881c:	d9002217 	ldw	r4,136(sp)
    8820:	d8001d85 	stb	zero,118(sp)
    8824:	20c00204 	addi	r3,r4,8
    8828:	24c00017 	ldw	r19,0(r4)
    882c:	25000117 	ldw	r20,4(r4)
    8830:	8001e716 	blt	r16,zero,8fd0 <___vfiprintf_internal_r+0x12c4>
    8834:	013fdfc4 	movi	r4,-129
    8838:	9d04b03a 	or	r2,r19,r20
    883c:	d8c02215 	stw	r3,136(sp)
    8840:	8922703a 	and	r17,r17,r4
    8844:	002b883a 	mov	r21,zero
    8848:	103f2f1e 	bne	r2,zero,8508 <__alt_data_end+0xfffbf128>
    884c:	803e2f26 	beq	r16,zero,810c <__alt_data_end+0xfffbed2c>
    8850:	0027883a 	mov	r19,zero
    8854:	9cc00c04 	addi	r19,r19,48
    8858:	dcc019c5 	stb	r19,103(sp)
    885c:	dd002817 	ldw	r20,160(sp)
    8860:	ddc019c4 	addi	r23,sp,103
    8864:	003e2c06 	br	8118 <__alt_data_end+0xfffbed38>
    8868:	9cc03fcc 	andi	r19,r19,255
    886c:	b811883a 	mov	r8,r23
    8870:	9802571e 	bne	r19,zero,91d0 <___vfiprintf_internal_r+0x14c4>
    8874:	18005726 	beq	r3,zero,89d4 <___vfiprintf_internal_r+0xcc8>
    8878:	04c00044 	movi	r19,1
    887c:	d8c01005 	stb	r3,64(sp)
    8880:	d8001d85 	stb	zero,118(sp)
    8884:	9829883a 	mov	r20,r19
    8888:	ddc01004 	addi	r23,sp,64
    888c:	003f0a06 	br	84b8 <__alt_data_end+0xfffbf0d8>
    8890:	d9402017 	ldw	r5,128(sp)
    8894:	d9002117 	ldw	r4,132(sp)
    8898:	d9801a04 	addi	r6,sp,104
    889c:	da802a15 	stw	r10,168(sp)
    88a0:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    88a4:	da802a17 	ldw	r10,168(sp)
    88a8:	1000501e 	bne	r2,zero,89ec <___vfiprintf_internal_r+0xce0>
    88ac:	d9801b17 	ldw	r6,108(sp)
    88b0:	d8801c17 	ldw	r2,112(sp)
    88b4:	d811883a 	mov	r8,sp
    88b8:	31000044 	addi	r4,r6,1
    88bc:	003e3606 	br	8198 <__alt_data_end+0xfffbedb8>
    88c0:	d9001b17 	ldw	r4,108(sp)
    88c4:	d8801c17 	ldw	r2,112(sp)
    88c8:	21400044 	addi	r5,r4,1
    88cc:	d9801d87 	ldb	r6,118(sp)
    88d0:	303e5226 	beq	r6,zero,821c <__alt_data_end+0xfffbee3c>
    88d4:	01800044 	movi	r6,1
    88d8:	d9001d84 	addi	r4,sp,118
    88dc:	1185883a 	add	r2,r2,r6
    88e0:	41000015 	stw	r4,0(r8)
    88e4:	41800115 	stw	r6,4(r8)
    88e8:	d8801c15 	stw	r2,112(sp)
    88ec:	d9401b15 	stw	r5,108(sp)
    88f0:	010001c4 	movi	r4,7
    88f4:	2140b00e 	bge	r4,r5,8bb8 <___vfiprintf_internal_r+0xeac>
    88f8:	1000f61e 	bne	r2,zero,8cd4 <___vfiprintf_internal_r+0xfc8>
    88fc:	3800b31e 	bne	r7,zero,8bcc <___vfiprintf_internal_r+0xec0>
    8900:	0009883a 	mov	r4,zero
    8904:	300b883a 	mov	r5,r6
    8908:	d811883a 	mov	r8,sp
    890c:	01802004 	movi	r6,128
    8910:	19be5226 	beq	r3,r6,825c <__alt_data_end+0xfffbee7c>
    8914:	8521c83a 	sub	r16,r16,r20
    8918:	043e790e 	bge	zero,r16,8300 <__alt_data_end+0xfffbef20>
    891c:	05400404 	movi	r21,16
    8920:	ac01b00e 	bge	r21,r16,8fe4 <___vfiprintf_internal_r+0x12d8>
    8924:	01400074 	movhi	r5,1
    8928:	297f0a04 	addi	r5,r5,-984
    892c:	d9402315 	stw	r5,140(sp)
    8930:	070001c4 	movi	fp,7
    8934:	00000506 	br	894c <___vfiprintf_internal_r+0xc40>
    8938:	21400084 	addi	r5,r4,2
    893c:	42000204 	addi	r8,r8,8
    8940:	1809883a 	mov	r4,r3
    8944:	843ffc04 	addi	r16,r16,-16
    8948:	ac000d0e 	bge	r21,r16,8980 <___vfiprintf_internal_r+0xc74>
    894c:	10800404 	addi	r2,r2,16
    8950:	20c00044 	addi	r3,r4,1
    8954:	44800015 	stw	r18,0(r8)
    8958:	45400115 	stw	r21,4(r8)
    895c:	d8801c15 	stw	r2,112(sp)
    8960:	d8c01b15 	stw	r3,108(sp)
    8964:	e0fff40e 	bge	fp,r3,8938 <__alt_data_end+0xfffbf558>
    8968:	1000101e 	bne	r2,zero,89ac <___vfiprintf_internal_r+0xca0>
    896c:	843ffc04 	addi	r16,r16,-16
    8970:	01400044 	movi	r5,1
    8974:	0009883a 	mov	r4,zero
    8978:	d811883a 	mov	r8,sp
    897c:	ac3ff316 	blt	r21,r16,894c <__alt_data_end+0xfffbf56c>
    8980:	d8c02317 	ldw	r3,140(sp)
    8984:	1405883a 	add	r2,r2,r16
    8988:	44000115 	stw	r16,4(r8)
    898c:	40c00015 	stw	r3,0(r8)
    8990:	d8801c15 	stw	r2,112(sp)
    8994:	d9401b15 	stw	r5,108(sp)
    8998:	00c001c4 	movi	r3,7
    899c:	19401916 	blt	r3,r5,8a04 <___vfiprintf_internal_r+0xcf8>
    89a0:	42000204 	addi	r8,r8,8
    89a4:	29400044 	addi	r5,r5,1
    89a8:	003e5506 	br	8300 <__alt_data_end+0xfffbef20>
    89ac:	d9402017 	ldw	r5,128(sp)
    89b0:	d9002117 	ldw	r4,132(sp)
    89b4:	d9801a04 	addi	r6,sp,104
    89b8:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    89bc:	10000b1e 	bne	r2,zero,89ec <___vfiprintf_internal_r+0xce0>
    89c0:	d9001b17 	ldw	r4,108(sp)
    89c4:	d8801c17 	ldw	r2,112(sp)
    89c8:	d811883a 	mov	r8,sp
    89cc:	21400044 	addi	r5,r4,1
    89d0:	003fdc06 	br	8944 <__alt_data_end+0xfffbf564>
    89d4:	d8801c17 	ldw	r2,112(sp)
    89d8:	10000426 	beq	r2,zero,89ec <___vfiprintf_internal_r+0xce0>
    89dc:	d9402017 	ldw	r5,128(sp)
    89e0:	d9002117 	ldw	r4,132(sp)
    89e4:	d9801a04 	addi	r6,sp,104
    89e8:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    89ec:	d9402017 	ldw	r5,128(sp)
    89f0:	2880030b 	ldhu	r2,12(r5)
    89f4:	1080100c 	andi	r2,r2,64
    89f8:	10014d1e 	bne	r2,zero,8f30 <___vfiprintf_internal_r+0x1224>
    89fc:	d8802417 	ldw	r2,144(sp)
    8a00:	003d9706 	br	8060 <__alt_data_end+0xfffbec80>
    8a04:	1000d21e 	bne	r2,zero,8d50 <___vfiprintf_internal_r+0x1044>
    8a08:	00c00044 	movi	r3,1
    8a0c:	a005883a 	mov	r2,r20
    8a10:	ddc00015 	stw	r23,0(sp)
    8a14:	dd000115 	stw	r20,4(sp)
    8a18:	dd001c15 	stw	r20,112(sp)
    8a1c:	d8c01b15 	stw	r3,108(sp)
    8a20:	d811883a 	mov	r8,sp
    8a24:	42000204 	addi	r8,r8,8
    8a28:	8c40010c 	andi	r17,r17,4
    8a2c:	88004026 	beq	r17,zero,8b30 <___vfiprintf_internal_r+0xe24>
    8a30:	d9002517 	ldw	r4,148(sp)
    8a34:	24e3c83a 	sub	r17,r4,r19
    8a38:	04403d0e 	bge	zero,r17,8b30 <___vfiprintf_internal_r+0xe24>
    8a3c:	04000404 	movi	r16,16
    8a40:	8441a90e 	bge	r16,r17,90e8 <___vfiprintf_internal_r+0x13dc>
    8a44:	00c00074 	movhi	r3,1
    8a48:	18ff0e04 	addi	r3,r3,-968
    8a4c:	d9001b17 	ldw	r4,108(sp)
    8a50:	d8c02315 	stw	r3,140(sp)
    8a54:	050001c4 	movi	r20,7
    8a58:	dd402117 	ldw	r21,132(sp)
    8a5c:	ddc02017 	ldw	r23,128(sp)
    8a60:	00000506 	br	8a78 <___vfiprintf_internal_r+0xd6c>
    8a64:	21400084 	addi	r5,r4,2
    8a68:	42000204 	addi	r8,r8,8
    8a6c:	1809883a 	mov	r4,r3
    8a70:	8c7ffc04 	addi	r17,r17,-16
    8a74:	84400f0e 	bge	r16,r17,8ab4 <___vfiprintf_internal_r+0xda8>
    8a78:	01400074 	movhi	r5,1
    8a7c:	10800404 	addi	r2,r2,16
    8a80:	20c00044 	addi	r3,r4,1
    8a84:	297f0e04 	addi	r5,r5,-968
    8a88:	41400015 	stw	r5,0(r8)
    8a8c:	44000115 	stw	r16,4(r8)
    8a90:	d8801c15 	stw	r2,112(sp)
    8a94:	d8c01b15 	stw	r3,108(sp)
    8a98:	a0fff20e 	bge	r20,r3,8a64 <__alt_data_end+0xfffbf684>
    8a9c:	1000141e 	bne	r2,zero,8af0 <___vfiprintf_internal_r+0xde4>
    8aa0:	8c7ffc04 	addi	r17,r17,-16
    8aa4:	01400044 	movi	r5,1
    8aa8:	0009883a 	mov	r4,zero
    8aac:	d811883a 	mov	r8,sp
    8ab0:	847ff116 	blt	r16,r17,8a78 <__alt_data_end+0xfffbf698>
    8ab4:	d8c02317 	ldw	r3,140(sp)
    8ab8:	1445883a 	add	r2,r2,r17
    8abc:	44400115 	stw	r17,4(r8)
    8ac0:	40c00015 	stw	r3,0(r8)
    8ac4:	d8801c15 	stw	r2,112(sp)
    8ac8:	d9401b15 	stw	r5,108(sp)
    8acc:	00c001c4 	movi	r3,7
    8ad0:	1940170e 	bge	r3,r5,8b30 <___vfiprintf_internal_r+0xe24>
    8ad4:	1000101e 	bne	r2,zero,8b18 <___vfiprintf_internal_r+0xe0c>
    8ad8:	d8802517 	ldw	r2,148(sp)
    8adc:	14c11616 	blt	r2,r19,8f38 <___vfiprintf_internal_r+0x122c>
    8ae0:	d9002417 	ldw	r4,144(sp)
    8ae4:	2089883a 	add	r4,r4,r2
    8ae8:	d9002415 	stw	r4,144(sp)
    8aec:	003e1806 	br	8350 <__alt_data_end+0xfffbef70>
    8af0:	d9801a04 	addi	r6,sp,104
    8af4:	b80b883a 	mov	r5,r23
    8af8:	a809883a 	mov	r4,r21
    8afc:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8b00:	103fba1e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8b04:	d9001b17 	ldw	r4,108(sp)
    8b08:	d8801c17 	ldw	r2,112(sp)
    8b0c:	d811883a 	mov	r8,sp
    8b10:	21400044 	addi	r5,r4,1
    8b14:	003fd606 	br	8a70 <__alt_data_end+0xfffbf690>
    8b18:	d9402017 	ldw	r5,128(sp)
    8b1c:	d9002117 	ldw	r4,132(sp)
    8b20:	d9801a04 	addi	r6,sp,104
    8b24:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8b28:	103fb01e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8b2c:	d8801c17 	ldw	r2,112(sp)
    8b30:	d8c02517 	ldw	r3,148(sp)
    8b34:	1cc0010e 	bge	r3,r19,8b3c <___vfiprintf_internal_r+0xe30>
    8b38:	9807883a 	mov	r3,r19
    8b3c:	d9002417 	ldw	r4,144(sp)
    8b40:	20c9883a 	add	r4,r4,r3
    8b44:	d9002415 	stw	r4,144(sp)
    8b48:	103e0126 	beq	r2,zero,8350 <__alt_data_end+0xfffbef70>
    8b4c:	d9402017 	ldw	r5,128(sp)
    8b50:	d9002117 	ldw	r4,132(sp)
    8b54:	d9801a04 	addi	r6,sp,104
    8b58:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8b5c:	103dfc26 	beq	r2,zero,8350 <__alt_data_end+0xfffbef70>
    8b60:	003fa206 	br	89ec <__alt_data_end+0xfffbf60c>
    8b64:	d9402017 	ldw	r5,128(sp)
    8b68:	d9002117 	ldw	r4,132(sp)
    8b6c:	d9801a04 	addi	r6,sp,104
    8b70:	d9c02b15 	stw	r7,172(sp)
    8b74:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8b78:	d9c02b17 	ldw	r7,172(sp)
    8b7c:	103f9b1e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8b80:	d9001b17 	ldw	r4,108(sp)
    8b84:	d8801c17 	ldw	r2,112(sp)
    8b88:	d811883a 	mov	r8,sp
    8b8c:	21800044 	addi	r6,r4,1
    8b90:	003dbf06 	br	8290 <__alt_data_end+0xfffbeeb0>
    8b94:	1000d81e 	bne	r2,zero,8ef8 <___vfiprintf_internal_r+0x11ec>
    8b98:	d9001d87 	ldb	r4,118(sp)
    8b9c:	20000a26 	beq	r4,zero,8bc8 <___vfiprintf_internal_r+0xebc>
    8ba0:	00800044 	movi	r2,1
    8ba4:	d9001d84 	addi	r4,sp,118
    8ba8:	100b883a 	mov	r5,r2
    8bac:	d9000015 	stw	r4,0(sp)
    8bb0:	d8800115 	stw	r2,4(sp)
    8bb4:	d811883a 	mov	r8,sp
    8bb8:	2809883a 	mov	r4,r5
    8bbc:	42000204 	addi	r8,r8,8
    8bc0:	29400044 	addi	r5,r5,1
    8bc4:	003d9506 	br	821c <__alt_data_end+0xfffbee3c>
    8bc8:	3800fd26 	beq	r7,zero,8fc0 <___vfiprintf_internal_r+0x12b4>
    8bcc:	00800084 	movi	r2,2
    8bd0:	d9001d04 	addi	r4,sp,116
    8bd4:	d9000015 	stw	r4,0(sp)
    8bd8:	d8800115 	stw	r2,4(sp)
    8bdc:	01400044 	movi	r5,1
    8be0:	d811883a 	mov	r8,sp
    8be4:	2809883a 	mov	r4,r5
    8be8:	42000204 	addi	r8,r8,8
    8bec:	29400044 	addi	r5,r5,1
    8bf0:	003f4606 	br	890c <__alt_data_end+0xfffbf52c>
    8bf4:	d8802517 	ldw	r2,148(sp)
    8bf8:	14c0010e 	bge	r2,r19,8c00 <___vfiprintf_internal_r+0xef4>
    8bfc:	9805883a 	mov	r2,r19
    8c00:	d9402417 	ldw	r5,144(sp)
    8c04:	288b883a 	add	r5,r5,r2
    8c08:	d9402415 	stw	r5,144(sp)
    8c0c:	003dd006 	br	8350 <__alt_data_end+0xfffbef70>
    8c10:	d8001d85 	stb	zero,118(sp)
    8c14:	80005d16 	blt	r16,zero,8d8c <___vfiprintf_internal_r+0x1080>
    8c18:	00ffdfc4 	movi	r3,-129
    8c1c:	9d04b03a 	or	r2,r19,r20
    8c20:	88e2703a 	and	r17,r17,r3
    8c24:	103d3726 	beq	r2,zero,8104 <__alt_data_end+0xfffbed24>
    8c28:	002b883a 	mov	r21,zero
    8c2c:	d9002617 	ldw	r4,152(sp)
    8c30:	ddc01a04 	addi	r23,sp,104
    8c34:	988003cc 	andi	r2,r19,15
    8c38:	a006973a 	slli	r3,r20,28
    8c3c:	2085883a 	add	r2,r4,r2
    8c40:	9826d13a 	srli	r19,r19,4
    8c44:	10800003 	ldbu	r2,0(r2)
    8c48:	a028d13a 	srli	r20,r20,4
    8c4c:	bdffffc4 	addi	r23,r23,-1
    8c50:	1ce6b03a 	or	r19,r3,r19
    8c54:	b8800005 	stb	r2,0(r23)
    8c58:	9d04b03a 	or	r2,r19,r20
    8c5c:	103ff51e 	bne	r2,zero,8c34 <__alt_data_end+0xfffbf854>
    8c60:	d8801e17 	ldw	r2,120(sp)
    8c64:	15e9c83a 	sub	r20,r2,r23
    8c68:	003d2b06 	br	8118 <__alt_data_end+0xfffbed38>
    8c6c:	d9402017 	ldw	r5,128(sp)
    8c70:	d9002117 	ldw	r4,132(sp)
    8c74:	d9801a04 	addi	r6,sp,104
    8c78:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8c7c:	103f5b1e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8c80:	d8801c17 	ldw	r2,112(sp)
    8c84:	d811883a 	mov	r8,sp
    8c88:	003f6706 	br	8a28 <__alt_data_end+0xfffbf648>
    8c8c:	d9402017 	ldw	r5,128(sp)
    8c90:	d9002117 	ldw	r4,132(sp)
    8c94:	d9801a04 	addi	r6,sp,104
    8c98:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8c9c:	103f531e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8ca0:	d811883a 	mov	r8,sp
    8ca4:	003cd906 	br	800c <__alt_data_end+0xfffbec2c>
    8ca8:	10803fcc 	andi	r2,r2,255
    8cac:	1080201c 	xori	r2,r2,128
    8cb0:	10bfe004 	addi	r2,r2,-128
    8cb4:	00c00c04 	movi	r3,48
    8cb8:	10ffe926 	beq	r2,r3,8c60 <__alt_data_end+0xfffbf880>
    8cbc:	b8ffffc5 	stb	r3,-1(r23)
    8cc0:	d8c01e17 	ldw	r3,120(sp)
    8cc4:	b8bfffc4 	addi	r2,r23,-1
    8cc8:	102f883a 	mov	r23,r2
    8ccc:	18a9c83a 	sub	r20,r3,r2
    8cd0:	003d1106 	br	8118 <__alt_data_end+0xfffbed38>
    8cd4:	d9402017 	ldw	r5,128(sp)
    8cd8:	d9002117 	ldw	r4,132(sp)
    8cdc:	d9801a04 	addi	r6,sp,104
    8ce0:	d8c02a15 	stw	r3,168(sp)
    8ce4:	d9c02b15 	stw	r7,172(sp)
    8ce8:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8cec:	d8c02a17 	ldw	r3,168(sp)
    8cf0:	d9c02b17 	ldw	r7,172(sp)
    8cf4:	103f3d1e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8cf8:	d9001b17 	ldw	r4,108(sp)
    8cfc:	d8801c17 	ldw	r2,112(sp)
    8d00:	d811883a 	mov	r8,sp
    8d04:	21400044 	addi	r5,r4,1
    8d08:	003d4406 	br	821c <__alt_data_end+0xfffbee3c>
    8d0c:	d9402017 	ldw	r5,128(sp)
    8d10:	d9002117 	ldw	r4,132(sp)
    8d14:	d9801a04 	addi	r6,sp,104
    8d18:	d8c02a15 	stw	r3,168(sp)
    8d1c:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8d20:	d8c02a17 	ldw	r3,168(sp)
    8d24:	103f311e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8d28:	d9001b17 	ldw	r4,108(sp)
    8d2c:	d8801c17 	ldw	r2,112(sp)
    8d30:	d811883a 	mov	r8,sp
    8d34:	21400044 	addi	r5,r4,1
    8d38:	003ef406 	br	890c <__alt_data_end+0xfffbf52c>
    8d3c:	1000bd1e 	bne	r2,zero,9034 <___vfiprintf_internal_r+0x1328>
    8d40:	01400044 	movi	r5,1
    8d44:	0009883a 	mov	r4,zero
    8d48:	d811883a 	mov	r8,sp
    8d4c:	003ef106 	br	8914 <__alt_data_end+0xfffbf534>
    8d50:	d9402017 	ldw	r5,128(sp)
    8d54:	d9002117 	ldw	r4,132(sp)
    8d58:	d9801a04 	addi	r6,sp,104
    8d5c:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8d60:	103f221e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8d64:	d9401b17 	ldw	r5,108(sp)
    8d68:	d8801c17 	ldw	r2,112(sp)
    8d6c:	d811883a 	mov	r8,sp
    8d70:	29400044 	addi	r5,r5,1
    8d74:	003d6206 	br	8300 <__alt_data_end+0xfffbef20>
    8d78:	01400074 	movhi	r5,1
    8d7c:	297ea904 	addi	r5,r5,-1372
    8d80:	d9402615 	stw	r5,152(sp)
    8d84:	d8c02215 	stw	r3,136(sp)
    8d88:	1023883a 	mov	r17,r2
    8d8c:	9d04b03a 	or	r2,r19,r20
    8d90:	103fa51e 	bne	r2,zero,8c28 <__alt_data_end+0xfffbf848>
    8d94:	002b883a 	mov	r21,zero
    8d98:	00800084 	movi	r2,2
    8d9c:	003e4a06 	br	86c8 <__alt_data_end+0xfffbf2e8>
    8da0:	01400074 	movhi	r5,1
    8da4:	297ea904 	addi	r5,r5,-1372
    8da8:	002b883a 	mov	r21,zero
    8dac:	d9402615 	stw	r5,152(sp)
    8db0:	003f9e06 	br	8c2c <__alt_data_end+0xfffbf84c>
    8db4:	d9402217 	ldw	r5,136(sp)
    8db8:	d8001d85 	stb	zero,118(sp)
    8dbc:	0029883a 	mov	r20,zero
    8dc0:	28800104 	addi	r2,r5,4
    8dc4:	2cc00017 	ldw	r19,0(r5)
    8dc8:	803e3a16 	blt	r16,zero,86b4 <__alt_data_end+0xfffbf2d4>
    8dcc:	00ffdfc4 	movi	r3,-129
    8dd0:	d8802215 	stw	r2,136(sp)
    8dd4:	88e2703a 	and	r17,r17,r3
    8dd8:	002b883a 	mov	r21,zero
    8ddc:	983e9b26 	beq	r19,zero,884c <__alt_data_end+0xfffbf46c>
    8de0:	00800244 	movi	r2,9
    8de4:	14fdc936 	bltu	r2,r19,850c <__alt_data_end+0xfffbf12c>
    8de8:	003e9a06 	br	8854 <__alt_data_end+0xfffbf474>
    8dec:	00800c04 	movi	r2,48
    8df0:	d8c01d45 	stb	r3,117(sp)
    8df4:	d8801d05 	stb	r2,116(sp)
    8df8:	d8001d85 	stb	zero,118(sp)
    8dfc:	88c00094 	ori	r3,r17,2
    8e00:	80009c16 	blt	r16,zero,9074 <___vfiprintf_internal_r+0x1368>
    8e04:	00bfdfc4 	movi	r2,-129
    8e08:	88a2703a 	and	r17,r17,r2
    8e0c:	8c400094 	ori	r17,r17,2
    8e10:	002b883a 	mov	r21,zero
    8e14:	003f8506 	br	8c2c <__alt_data_end+0xfffbf84c>
    8e18:	b029883a 	mov	r20,r22
    8e1c:	003c0b06 	br	7e4c <__alt_data_end+0xfffbea6c>
    8e20:	04e7c83a 	sub	r19,zero,r19
    8e24:	05400b44 	movi	r21,45
    8e28:	9804c03a 	cmpne	r2,r19,zero
    8e2c:	0529c83a 	sub	r20,zero,r20
    8e30:	dd401d85 	stb	r21,118(sp)
    8e34:	a0a9c83a 	sub	r20,r20,r2
    8e38:	80009716 	blt	r16,zero,9098 <___vfiprintf_internal_r+0x138c>
    8e3c:	00bfdfc4 	movi	r2,-129
    8e40:	88a2703a 	and	r17,r17,r2
    8e44:	003db006 	br	8508 <__alt_data_end+0xfffbf128>
    8e48:	b0c00007 	ldb	r3,0(r22)
    8e4c:	003c0c06 	br	7e80 <__alt_data_end+0xfffbeaa0>
    8e50:	8880100c 	andi	r2,r17,64
    8e54:	d8001d85 	stb	zero,118(sp)
    8e58:	1000461e 	bne	r2,zero,8f74 <___vfiprintf_internal_r+0x1268>
    8e5c:	d9002217 	ldw	r4,136(sp)
    8e60:	0029883a 	mov	r20,zero
    8e64:	20800104 	addi	r2,r4,4
    8e68:	24c00017 	ldw	r19,0(r4)
    8e6c:	803df80e 	bge	r16,zero,8650 <__alt_data_end+0xfffbf270>
    8e70:	9d06b03a 	or	r3,r19,r20
    8e74:	d8802215 	stw	r2,136(sp)
    8e78:	183d5e1e 	bne	r3,zero,83f4 <__alt_data_end+0xfffbf014>
    8e7c:	002b883a 	mov	r21,zero
    8e80:	0005883a 	mov	r2,zero
    8e84:	003e1006 	br	86c8 <__alt_data_end+0xfffbf2e8>
    8e88:	8880040c 	andi	r2,r17,16
    8e8c:	1000321e 	bne	r2,zero,8f58 <___vfiprintf_internal_r+0x124c>
    8e90:	8c40100c 	andi	r17,r17,64
    8e94:	88008d26 	beq	r17,zero,90cc <___vfiprintf_internal_r+0x13c0>
    8e98:	d9402217 	ldw	r5,136(sp)
    8e9c:	d8c02417 	ldw	r3,144(sp)
    8ea0:	28800017 	ldw	r2,0(r5)
    8ea4:	29400104 	addi	r5,r5,4
    8ea8:	d9402215 	stw	r5,136(sp)
    8eac:	10c0000d 	sth	r3,0(r2)
    8eb0:	003bca06 	br	7ddc <__alt_data_end+0xfffbe9fc>
    8eb4:	8880100c 	andi	r2,r17,64
    8eb8:	10003a26 	beq	r2,zero,8fa4 <___vfiprintf_internal_r+0x1298>
    8ebc:	d8802217 	ldw	r2,136(sp)
    8ec0:	14c0000f 	ldh	r19,0(r2)
    8ec4:	10800104 	addi	r2,r2,4
    8ec8:	d8802215 	stw	r2,136(sp)
    8ecc:	9829d7fa 	srai	r20,r19,31
    8ed0:	a005883a 	mov	r2,r20
    8ed4:	003d8506 	br	84ec <__alt_data_end+0xfffbf10c>
    8ed8:	8880100c 	andi	r2,r17,64
    8edc:	10002b26 	beq	r2,zero,8f8c <___vfiprintf_internal_r+0x1280>
    8ee0:	d8802217 	ldw	r2,136(sp)
    8ee4:	0029883a 	mov	r20,zero
    8ee8:	14c0000b 	ldhu	r19,0(r2)
    8eec:	10800104 	addi	r2,r2,4
    8ef0:	d8802215 	stw	r2,136(sp)
    8ef4:	003d5d06 	br	846c <__alt_data_end+0xfffbf08c>
    8ef8:	d9402017 	ldw	r5,128(sp)
    8efc:	d9002117 	ldw	r4,132(sp)
    8f00:	d9801a04 	addi	r6,sp,104
    8f04:	d8c02a15 	stw	r3,168(sp)
    8f08:	d9c02b15 	stw	r7,172(sp)
    8f0c:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    8f10:	d8c02a17 	ldw	r3,168(sp)
    8f14:	d9c02b17 	ldw	r7,172(sp)
    8f18:	103eb41e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    8f1c:	d9001b17 	ldw	r4,108(sp)
    8f20:	d8801c17 	ldw	r2,112(sp)
    8f24:	d811883a 	mov	r8,sp
    8f28:	21400044 	addi	r5,r4,1
    8f2c:	003e6706 	br	88cc <__alt_data_end+0xfffbf4ec>
    8f30:	00bfffc4 	movi	r2,-1
    8f34:	003c4a06 	br	8060 <__alt_data_end+0xfffbec80>
    8f38:	9805883a 	mov	r2,r19
    8f3c:	003ee806 	br	8ae0 <__alt_data_end+0xfffbf700>
    8f40:	d8c02217 	ldw	r3,136(sp)
    8f44:	0029883a 	mov	r20,zero
    8f48:	18800104 	addi	r2,r3,4
    8f4c:	1cc0000b 	ldhu	r19,0(r3)
    8f50:	803f9e0e 	bge	r16,zero,8dcc <__alt_data_end+0xfffbf9ec>
    8f54:	003dd706 	br	86b4 <__alt_data_end+0xfffbf2d4>
    8f58:	d8c02217 	ldw	r3,136(sp)
    8f5c:	d9002417 	ldw	r4,144(sp)
    8f60:	18800017 	ldw	r2,0(r3)
    8f64:	18c00104 	addi	r3,r3,4
    8f68:	d8c02215 	stw	r3,136(sp)
    8f6c:	11000015 	stw	r4,0(r2)
    8f70:	003b9a06 	br	7ddc <__alt_data_end+0xfffbe9fc>
    8f74:	d8c02217 	ldw	r3,136(sp)
    8f78:	0029883a 	mov	r20,zero
    8f7c:	18800104 	addi	r2,r3,4
    8f80:	1cc0000b 	ldhu	r19,0(r3)
    8f84:	803db20e 	bge	r16,zero,8650 <__alt_data_end+0xfffbf270>
    8f88:	003fb906 	br	8e70 <__alt_data_end+0xfffbfa90>
    8f8c:	d9002217 	ldw	r4,136(sp)
    8f90:	0029883a 	mov	r20,zero
    8f94:	24c00017 	ldw	r19,0(r4)
    8f98:	21000104 	addi	r4,r4,4
    8f9c:	d9002215 	stw	r4,136(sp)
    8fa0:	003d3206 	br	846c <__alt_data_end+0xfffbf08c>
    8fa4:	d8c02217 	ldw	r3,136(sp)
    8fa8:	1cc00017 	ldw	r19,0(r3)
    8fac:	18c00104 	addi	r3,r3,4
    8fb0:	d8c02215 	stw	r3,136(sp)
    8fb4:	9829d7fa 	srai	r20,r19,31
    8fb8:	a005883a 	mov	r2,r20
    8fbc:	003d4b06 	br	84ec <__alt_data_end+0xfffbf10c>
    8fc0:	0009883a 	mov	r4,zero
    8fc4:	01400044 	movi	r5,1
    8fc8:	d811883a 	mov	r8,sp
    8fcc:	003e4f06 	br	890c <__alt_data_end+0xfffbf52c>
    8fd0:	d8c02215 	stw	r3,136(sp)
    8fd4:	002b883a 	mov	r21,zero
    8fd8:	003db806 	br	86bc <__alt_data_end+0xfffbf2dc>
    8fdc:	d811883a 	mov	r8,sp
    8fe0:	003e9606 	br	8a3c <__alt_data_end+0xfffbf65c>
    8fe4:	01000074 	movhi	r4,1
    8fe8:	213f0a04 	addi	r4,r4,-984
    8fec:	d9002315 	stw	r4,140(sp)
    8ff0:	003e6306 	br	8980 <__alt_data_end+0xfffbf5a0>
    8ff4:	b0c00043 	ldbu	r3,1(r22)
    8ff8:	8c400814 	ori	r17,r17,32
    8ffc:	b5800044 	addi	r22,r22,1
    9000:	18c03fcc 	andi	r3,r3,255
    9004:	18c0201c 	xori	r3,r3,128
    9008:	18ffe004 	addi	r3,r3,-128
    900c:	003b9c06 	br	7e80 <__alt_data_end+0xfffbeaa0>
    9010:	b809883a 	mov	r4,r23
    9014:	da002a15 	stw	r8,168(sp)
    9018:	000047c0 	call	47c <strlen>
    901c:	1029883a 	mov	r20,r2
    9020:	dd401d83 	ldbu	r21,118(sp)
    9024:	df002215 	stw	fp,136(sp)
    9028:	0021883a 	mov	r16,zero
    902c:	da002a17 	ldw	r8,168(sp)
    9030:	003c3906 	br	8118 <__alt_data_end+0xfffbed38>
    9034:	d9402017 	ldw	r5,128(sp)
    9038:	d9002117 	ldw	r4,132(sp)
    903c:	d9801a04 	addi	r6,sp,104
    9040:	0007bf80 	call	7bf8 <__sprint_r.part.0>
    9044:	103e691e 	bne	r2,zero,89ec <__alt_data_end+0xfffbf60c>
    9048:	d9001b17 	ldw	r4,108(sp)
    904c:	d8801c17 	ldw	r2,112(sp)
    9050:	d811883a 	mov	r8,sp
    9054:	21400044 	addi	r5,r4,1
    9058:	003e2e06 	br	8914 <__alt_data_end+0xfffbf534>
    905c:	01000074 	movhi	r4,1
    9060:	213f0e04 	addi	r4,r4,-968
    9064:	d9002315 	stw	r4,140(sp)
    9068:	d9001b17 	ldw	r4,108(sp)
    906c:	21000044 	addi	r4,r4,1
    9070:	003c5e06 	br	81ec <__alt_data_end+0xfffbee0c>
    9074:	002b883a 	mov	r21,zero
    9078:	00800084 	movi	r2,2
    907c:	10803fcc 	andi	r2,r2,255
    9080:	01000044 	movi	r4,1
    9084:	11002b26 	beq	r2,r4,9134 <___vfiprintf_internal_r+0x1428>
    9088:	01000084 	movi	r4,2
    908c:	11002b1e 	bne	r2,r4,913c <___vfiprintf_internal_r+0x1430>
    9090:	1823883a 	mov	r17,r3
    9094:	003ee506 	br	8c2c <__alt_data_end+0xfffbf84c>
    9098:	8807883a 	mov	r3,r17
    909c:	00800044 	movi	r2,1
    90a0:	003ff606 	br	907c <__alt_data_end+0xfffbfc9c>
    90a4:	00800184 	movi	r2,6
    90a8:	1400012e 	bgeu	r2,r16,90b0 <___vfiprintf_internal_r+0x13a4>
    90ac:	1021883a 	mov	r16,r2
    90b0:	8029883a 	mov	r20,r16
    90b4:	8027883a 	mov	r19,r16
    90b8:	80002216 	blt	r16,zero,9144 <___vfiprintf_internal_r+0x1438>
    90bc:	05c00074 	movhi	r23,1
    90c0:	df002215 	stw	fp,136(sp)
    90c4:	bdfeae04 	addi	r23,r23,-1352
    90c8:	003cfb06 	br	84b8 <__alt_data_end+0xfffbf0d8>
    90cc:	d9002217 	ldw	r4,136(sp)
    90d0:	d9402417 	ldw	r5,144(sp)
    90d4:	20800017 	ldw	r2,0(r4)
    90d8:	21000104 	addi	r4,r4,4
    90dc:	d9002215 	stw	r4,136(sp)
    90e0:	11400015 	stw	r5,0(r2)
    90e4:	003b3d06 	br	7ddc <__alt_data_end+0xfffbe9fc>
    90e8:	01400074 	movhi	r5,1
    90ec:	297f0e04 	addi	r5,r5,-968
    90f0:	d9402315 	stw	r5,140(sp)
    90f4:	d9401b17 	ldw	r5,108(sp)
    90f8:	29400044 	addi	r5,r5,1
    90fc:	003e6d06 	br	8ab4 <__alt_data_end+0xfffbf6d4>
    9100:	8029883a 	mov	r20,r16
    9104:	dd401d83 	ldbu	r21,118(sp)
    9108:	df002215 	stw	fp,136(sp)
    910c:	0021883a 	mov	r16,zero
    9110:	003c0106 	br	8118 <__alt_data_end+0xfffbed38>
    9114:	00c00074 	movhi	r3,1
    9118:	18ff0a04 	addi	r3,r3,-984
    911c:	d8c02315 	stw	r3,140(sp)
    9120:	280d883a 	mov	r6,r5
    9124:	003c6906 	br	82cc <__alt_data_end+0xfffbeeec>
    9128:	802d883a 	mov	r22,r16
    912c:	0021883a 	mov	r16,zero
    9130:	003b5406 	br	7e84 <__alt_data_end+0xfffbeaa4>
    9134:	1823883a 	mov	r17,r3
    9138:	003cf306 	br	8508 <__alt_data_end+0xfffbf128>
    913c:	1823883a 	mov	r17,r3
    9140:	003cad06 	br	83f8 <__alt_data_end+0xfffbf018>
    9144:	0027883a 	mov	r19,zero
    9148:	003fdc06 	br	90bc <__alt_data_end+0xfffbfcdc>
    914c:	d9402217 	ldw	r5,136(sp)
    9150:	8005883a 	mov	r2,r16
    9154:	b0c00043 	ldbu	r3,1(r22)
    9158:	2c000017 	ldw	r16,0(r5)
    915c:	29000104 	addi	r4,r5,4
    9160:	d9002215 	stw	r4,136(sp)
    9164:	102d883a 	mov	r22,r2
    9168:	803fa50e 	bge	r16,zero,9000 <__alt_data_end+0xfffbfc20>
    916c:	18c03fcc 	andi	r3,r3,255
    9170:	18c0201c 	xori	r3,r3,128
    9174:	043fffc4 	movi	r16,-1
    9178:	18ffe004 	addi	r3,r3,-128
    917c:	003b4006 	br	7e80 <__alt_data_end+0xfffbeaa0>
    9180:	d9402303 	ldbu	r5,140(sp)
    9184:	d9401d85 	stb	r5,118(sp)
    9188:	003cae06 	br	8444 <__alt_data_end+0xfffbf064>
    918c:	d8c02303 	ldbu	r3,140(sp)
    9190:	d8c01d85 	stb	r3,118(sp)
    9194:	003d1406 	br	85e8 <__alt_data_end+0xfffbf208>
    9198:	d8c02303 	ldbu	r3,140(sp)
    919c:	d8c01d85 	stb	r3,118(sp)
    91a0:	003cca06 	br	84cc <__alt_data_end+0xfffbf0ec>
    91a4:	8880004c 	andi	r2,r17,1
    91a8:	002b883a 	mov	r21,zero
    91ac:	10000526 	beq	r2,zero,91c4 <___vfiprintf_internal_r+0x14b8>
    91b0:	00800c04 	movi	r2,48
    91b4:	d88019c5 	stb	r2,103(sp)
    91b8:	dd002817 	ldw	r20,160(sp)
    91bc:	ddc019c4 	addi	r23,sp,103
    91c0:	003bd506 	br	8118 <__alt_data_end+0xfffbed38>
    91c4:	0029883a 	mov	r20,zero
    91c8:	ddc01a04 	addi	r23,sp,104
    91cc:	003bd206 	br	8118 <__alt_data_end+0xfffbed38>
    91d0:	d9002303 	ldbu	r4,140(sp)
    91d4:	d9001d85 	stb	r4,118(sp)
    91d8:	003da606 	br	8874 <__alt_data_end+0xfffbf494>
    91dc:	d8c02303 	ldbu	r3,140(sp)
    91e0:	d8c01d85 	stb	r3,118(sp)
    91e4:	003c7606 	br	83c0 <__alt_data_end+0xfffbefe0>
    91e8:	d8c02303 	ldbu	r3,140(sp)
    91ec:	d8c01d85 	stb	r3,118(sp)
    91f0:	003c6506 	br	8388 <__alt_data_end+0xfffbefa8>
    91f4:	d9002303 	ldbu	r4,140(sp)
    91f8:	d9001d85 	stb	r4,118(sp)
    91fc:	003d3d06 	br	86f4 <__alt_data_end+0xfffbf314>
    9200:	d8c02303 	ldbu	r3,140(sp)
    9204:	d8c01d85 	stb	r3,118(sp)
    9208:	003d1d06 	br	8680 <__alt_data_end+0xfffbf2a0>
    920c:	d8c02303 	ldbu	r3,140(sp)
    9210:	d8c01d85 	stb	r3,118(sp)
    9214:	003d0306 	br	8624 <__alt_data_end+0xfffbf244>

00009218 <__vfiprintf_internal>:
    9218:	00800074 	movhi	r2,1
    921c:	10860b04 	addi	r2,r2,6188
    9220:	300f883a 	mov	r7,r6
    9224:	280d883a 	mov	r6,r5
    9228:	200b883a 	mov	r5,r4
    922c:	11000017 	ldw	r4,0(r2)
    9230:	0007d0c1 	jmpi	7d0c <___vfiprintf_internal_r>

00009234 <__sbprintf>:
    9234:	2880030b 	ldhu	r2,12(r5)
    9238:	2ac01917 	ldw	r11,100(r5)
    923c:	2a80038b 	ldhu	r10,14(r5)
    9240:	2a400717 	ldw	r9,28(r5)
    9244:	2a000917 	ldw	r8,36(r5)
    9248:	defee204 	addi	sp,sp,-1144
    924c:	00c10004 	movi	r3,1024
    9250:	dc011a15 	stw	r16,1128(sp)
    9254:	10bfff4c 	andi	r2,r2,65533
    9258:	2821883a 	mov	r16,r5
    925c:	d8cb883a 	add	r5,sp,r3
    9260:	dc811c15 	stw	r18,1136(sp)
    9264:	dc411b15 	stw	r17,1132(sp)
    9268:	dfc11d15 	stw	ra,1140(sp)
    926c:	2025883a 	mov	r18,r4
    9270:	d881030d 	sth	r2,1036(sp)
    9274:	dac11915 	stw	r11,1124(sp)
    9278:	da81038d 	sth	r10,1038(sp)
    927c:	da410715 	stw	r9,1052(sp)
    9280:	da010915 	stw	r8,1060(sp)
    9284:	dec10015 	stw	sp,1024(sp)
    9288:	dec10415 	stw	sp,1040(sp)
    928c:	d8c10215 	stw	r3,1032(sp)
    9290:	d8c10515 	stw	r3,1044(sp)
    9294:	d8010615 	stw	zero,1048(sp)
    9298:	0007d0c0 	call	7d0c <___vfiprintf_internal_r>
    929c:	1023883a 	mov	r17,r2
    92a0:	10000416 	blt	r2,zero,92b4 <__sbprintf+0x80>
    92a4:	d9410004 	addi	r5,sp,1024
    92a8:	9009883a 	mov	r4,r18
    92ac:	00044e80 	call	44e8 <_fflush_r>
    92b0:	10000d1e 	bne	r2,zero,92e8 <__sbprintf+0xb4>
    92b4:	d881030b 	ldhu	r2,1036(sp)
    92b8:	1080100c 	andi	r2,r2,64
    92bc:	10000326 	beq	r2,zero,92cc <__sbprintf+0x98>
    92c0:	8080030b 	ldhu	r2,12(r16)
    92c4:	10801014 	ori	r2,r2,64
    92c8:	8080030d 	sth	r2,12(r16)
    92cc:	8805883a 	mov	r2,r17
    92d0:	dfc11d17 	ldw	ra,1140(sp)
    92d4:	dc811c17 	ldw	r18,1136(sp)
    92d8:	dc411b17 	ldw	r17,1132(sp)
    92dc:	dc011a17 	ldw	r16,1128(sp)
    92e0:	dec11e04 	addi	sp,sp,1144
    92e4:	f800283a 	ret
    92e8:	047fffc4 	movi	r17,-1
    92ec:	003ff106 	br	92b4 <__alt_data_end+0xfffbfed4>

000092f0 <_write_r>:
    92f0:	defffd04 	addi	sp,sp,-12
    92f4:	2805883a 	mov	r2,r5
    92f8:	dc000015 	stw	r16,0(sp)
    92fc:	04000074 	movhi	r16,1
    9300:	dc400115 	stw	r17,4(sp)
    9304:	300b883a 	mov	r5,r6
    9308:	840cdb04 	addi	r16,r16,13164
    930c:	2023883a 	mov	r17,r4
    9310:	380d883a 	mov	r6,r7
    9314:	1009883a 	mov	r4,r2
    9318:	dfc00215 	stw	ra,8(sp)
    931c:	80000015 	stw	zero,0(r16)
    9320:	000db840 	call	db84 <write>
    9324:	00ffffc4 	movi	r3,-1
    9328:	10c00526 	beq	r2,r3,9340 <_write_r+0x50>
    932c:	dfc00217 	ldw	ra,8(sp)
    9330:	dc400117 	ldw	r17,4(sp)
    9334:	dc000017 	ldw	r16,0(sp)
    9338:	dec00304 	addi	sp,sp,12
    933c:	f800283a 	ret
    9340:	80c00017 	ldw	r3,0(r16)
    9344:	183ff926 	beq	r3,zero,932c <__alt_data_end+0xfffbff4c>
    9348:	88c00015 	stw	r3,0(r17)
    934c:	003ff706 	br	932c <__alt_data_end+0xfffbff4c>

00009350 <_close_r>:
    9350:	defffd04 	addi	sp,sp,-12
    9354:	dc000015 	stw	r16,0(sp)
    9358:	04000074 	movhi	r16,1
    935c:	dc400115 	stw	r17,4(sp)
    9360:	840cdb04 	addi	r16,r16,13164
    9364:	2023883a 	mov	r17,r4
    9368:	2809883a 	mov	r4,r5
    936c:	dfc00215 	stw	ra,8(sp)
    9370:	80000015 	stw	zero,0(r16)
    9374:	000d2c80 	call	d2c8 <close>
    9378:	00ffffc4 	movi	r3,-1
    937c:	10c00526 	beq	r2,r3,9394 <_close_r+0x44>
    9380:	dfc00217 	ldw	ra,8(sp)
    9384:	dc400117 	ldw	r17,4(sp)
    9388:	dc000017 	ldw	r16,0(sp)
    938c:	dec00304 	addi	sp,sp,12
    9390:	f800283a 	ret
    9394:	80c00017 	ldw	r3,0(r16)
    9398:	183ff926 	beq	r3,zero,9380 <__alt_data_end+0xfffbffa0>
    939c:	88c00015 	stw	r3,0(r17)
    93a0:	003ff706 	br	9380 <__alt_data_end+0xfffbffa0>

000093a4 <_calloc_r>:
    93a4:	defffe04 	addi	sp,sp,-8
    93a8:	2805883a 	mov	r2,r5
    93ac:	dc000015 	stw	r16,0(sp)
    93b0:	300b883a 	mov	r5,r6
    93b4:	2021883a 	mov	r16,r4
    93b8:	1009883a 	mov	r4,r2
    93bc:	dfc00115 	stw	ra,4(sp)
    93c0:	000a9b00 	call	a9b0 <__mulsi3>
    93c4:	100b883a 	mov	r5,r2
    93c8:	8009883a 	mov	r4,r16
    93cc:	00056400 	call	5640 <_malloc_r>
    93d0:	10002926 	beq	r2,zero,9478 <_calloc_r+0xd4>
    93d4:	11bfff17 	ldw	r6,-4(r2)
    93d8:	1021883a 	mov	r16,r2
    93dc:	00bfff04 	movi	r2,-4
    93e0:	308c703a 	and	r6,r6,r2
    93e4:	00c00904 	movi	r3,36
    93e8:	308d883a 	add	r6,r6,r2
    93ec:	19801636 	bltu	r3,r6,9448 <_calloc_r+0xa4>
    93f0:	008004c4 	movi	r2,19
    93f4:	11800b2e 	bgeu	r2,r6,9424 <_calloc_r+0x80>
    93f8:	80000015 	stw	zero,0(r16)
    93fc:	80000115 	stw	zero,4(r16)
    9400:	008006c4 	movi	r2,27
    9404:	11801a2e 	bgeu	r2,r6,9470 <_calloc_r+0xcc>
    9408:	80000215 	stw	zero,8(r16)
    940c:	80000315 	stw	zero,12(r16)
    9410:	30c0151e 	bne	r6,r3,9468 <_calloc_r+0xc4>
    9414:	80000415 	stw	zero,16(r16)
    9418:	80800604 	addi	r2,r16,24
    941c:	80000515 	stw	zero,20(r16)
    9420:	00000106 	br	9428 <_calloc_r+0x84>
    9424:	8005883a 	mov	r2,r16
    9428:	10000015 	stw	zero,0(r2)
    942c:	10000115 	stw	zero,4(r2)
    9430:	10000215 	stw	zero,8(r2)
    9434:	8005883a 	mov	r2,r16
    9438:	dfc00117 	ldw	ra,4(sp)
    943c:	dc000017 	ldw	r16,0(sp)
    9440:	dec00204 	addi	sp,sp,8
    9444:	f800283a 	ret
    9448:	000b883a 	mov	r5,zero
    944c:	8009883a 	mov	r4,r16
    9450:	00061d40 	call	61d4 <memset>
    9454:	8005883a 	mov	r2,r16
    9458:	dfc00117 	ldw	ra,4(sp)
    945c:	dc000017 	ldw	r16,0(sp)
    9460:	dec00204 	addi	sp,sp,8
    9464:	f800283a 	ret
    9468:	80800404 	addi	r2,r16,16
    946c:	003fee06 	br	9428 <__alt_data_end+0xfffc0048>
    9470:	80800204 	addi	r2,r16,8
    9474:	003fec06 	br	9428 <__alt_data_end+0xfffc0048>
    9478:	0005883a 	mov	r2,zero
    947c:	003fee06 	br	9438 <__alt_data_end+0xfffc0058>

00009480 <_fclose_r>:
    9480:	28003926 	beq	r5,zero,9568 <_fclose_r+0xe8>
    9484:	defffc04 	addi	sp,sp,-16
    9488:	dc400115 	stw	r17,4(sp)
    948c:	dc000015 	stw	r16,0(sp)
    9490:	dfc00315 	stw	ra,12(sp)
    9494:	dc800215 	stw	r18,8(sp)
    9498:	2023883a 	mov	r17,r4
    949c:	2821883a 	mov	r16,r5
    94a0:	20000226 	beq	r4,zero,94ac <_fclose_r+0x2c>
    94a4:	20800e17 	ldw	r2,56(r4)
    94a8:	10002726 	beq	r2,zero,9548 <_fclose_r+0xc8>
    94ac:	8080030f 	ldh	r2,12(r16)
    94b0:	1000071e 	bne	r2,zero,94d0 <_fclose_r+0x50>
    94b4:	0005883a 	mov	r2,zero
    94b8:	dfc00317 	ldw	ra,12(sp)
    94bc:	dc800217 	ldw	r18,8(sp)
    94c0:	dc400117 	ldw	r17,4(sp)
    94c4:	dc000017 	ldw	r16,0(sp)
    94c8:	dec00404 	addi	sp,sp,16
    94cc:	f800283a 	ret
    94d0:	800b883a 	mov	r5,r16
    94d4:	8809883a 	mov	r4,r17
    94d8:	00042cc0 	call	42cc <__sflush_r>
    94dc:	1025883a 	mov	r18,r2
    94e0:	80800b17 	ldw	r2,44(r16)
    94e4:	10000426 	beq	r2,zero,94f8 <_fclose_r+0x78>
    94e8:	81400717 	ldw	r5,28(r16)
    94ec:	8809883a 	mov	r4,r17
    94f0:	103ee83a 	callr	r2
    94f4:	10001616 	blt	r2,zero,9550 <_fclose_r+0xd0>
    94f8:	8080030b 	ldhu	r2,12(r16)
    94fc:	1080200c 	andi	r2,r2,128
    9500:	1000151e 	bne	r2,zero,9558 <_fclose_r+0xd8>
    9504:	81400c17 	ldw	r5,48(r16)
    9508:	28000526 	beq	r5,zero,9520 <_fclose_r+0xa0>
    950c:	80801004 	addi	r2,r16,64
    9510:	28800226 	beq	r5,r2,951c <_fclose_r+0x9c>
    9514:	8809883a 	mov	r4,r17
    9518:	0004a480 	call	4a48 <_free_r>
    951c:	80000c15 	stw	zero,48(r16)
    9520:	81401117 	ldw	r5,68(r16)
    9524:	28000326 	beq	r5,zero,9534 <_fclose_r+0xb4>
    9528:	8809883a 	mov	r4,r17
    952c:	0004a480 	call	4a48 <_free_r>
    9530:	80001115 	stw	zero,68(r16)
    9534:	00048e40 	call	48e4 <__sfp_lock_acquire>
    9538:	8000030d 	sth	zero,12(r16)
    953c:	00048e80 	call	48e8 <__sfp_lock_release>
    9540:	9005883a 	mov	r2,r18
    9544:	003fdc06 	br	94b8 <__alt_data_end+0xfffc00d8>
    9548:	00048d40 	call	48d4 <__sinit>
    954c:	003fd706 	br	94ac <__alt_data_end+0xfffc00cc>
    9550:	04bfffc4 	movi	r18,-1
    9554:	003fe806 	br	94f8 <__alt_data_end+0xfffc0118>
    9558:	81400417 	ldw	r5,16(r16)
    955c:	8809883a 	mov	r4,r17
    9560:	0004a480 	call	4a48 <_free_r>
    9564:	003fe706 	br	9504 <__alt_data_end+0xfffc0124>
    9568:	0005883a 	mov	r2,zero
    956c:	f800283a 	ret

00009570 <fclose>:
    9570:	00800074 	movhi	r2,1
    9574:	10860b04 	addi	r2,r2,6188
    9578:	200b883a 	mov	r5,r4
    957c:	11000017 	ldw	r4,0(r2)
    9580:	00094801 	jmpi	9480 <_fclose_r>

00009584 <__fputwc>:
    9584:	defff804 	addi	sp,sp,-32
    9588:	dcc00415 	stw	r19,16(sp)
    958c:	dc800315 	stw	r18,12(sp)
    9590:	dc000115 	stw	r16,4(sp)
    9594:	dfc00715 	stw	ra,28(sp)
    9598:	dd400615 	stw	r21,24(sp)
    959c:	dd000515 	stw	r20,20(sp)
    95a0:	dc400215 	stw	r17,8(sp)
    95a4:	2027883a 	mov	r19,r4
    95a8:	2825883a 	mov	r18,r5
    95ac:	3021883a 	mov	r16,r6
    95b0:	00054300 	call	5430 <__locale_mb_cur_max>
    95b4:	00c00044 	movi	r3,1
    95b8:	10c03e26 	beq	r2,r3,96b4 <__fputwc+0x130>
    95bc:	81c01704 	addi	r7,r16,92
    95c0:	900d883a 	mov	r6,r18
    95c4:	d80b883a 	mov	r5,sp
    95c8:	9809883a 	mov	r4,r19
    95cc:	0009a540 	call	9a54 <_wcrtomb_r>
    95d0:	1029883a 	mov	r20,r2
    95d4:	00bfffc4 	movi	r2,-1
    95d8:	a0802026 	beq	r20,r2,965c <__fputwc+0xd8>
    95dc:	d9400003 	ldbu	r5,0(sp)
    95e0:	a0001c26 	beq	r20,zero,9654 <__fputwc+0xd0>
    95e4:	0023883a 	mov	r17,zero
    95e8:	05400284 	movi	r21,10
    95ec:	00000906 	br	9614 <__fputwc+0x90>
    95f0:	80800017 	ldw	r2,0(r16)
    95f4:	11400005 	stb	r5,0(r2)
    95f8:	80c00017 	ldw	r3,0(r16)
    95fc:	18c00044 	addi	r3,r3,1
    9600:	80c00015 	stw	r3,0(r16)
    9604:	8c400044 	addi	r17,r17,1
    9608:	dc45883a 	add	r2,sp,r17
    960c:	8d00112e 	bgeu	r17,r20,9654 <__fputwc+0xd0>
    9610:	11400003 	ldbu	r5,0(r2)
    9614:	80c00217 	ldw	r3,8(r16)
    9618:	18ffffc4 	addi	r3,r3,-1
    961c:	80c00215 	stw	r3,8(r16)
    9620:	183ff30e 	bge	r3,zero,95f0 <__alt_data_end+0xfffc0210>
    9624:	80800617 	ldw	r2,24(r16)
    9628:	18801916 	blt	r3,r2,9690 <__fputwc+0x10c>
    962c:	80800017 	ldw	r2,0(r16)
    9630:	11400005 	stb	r5,0(r2)
    9634:	80800017 	ldw	r2,0(r16)
    9638:	10c00003 	ldbu	r3,0(r2)
    963c:	10800044 	addi	r2,r2,1
    9640:	1d402326 	beq	r3,r21,96d0 <__fputwc+0x14c>
    9644:	80800015 	stw	r2,0(r16)
    9648:	8c400044 	addi	r17,r17,1
    964c:	dc45883a 	add	r2,sp,r17
    9650:	8d3fef36 	bltu	r17,r20,9610 <__alt_data_end+0xfffc0230>
    9654:	9005883a 	mov	r2,r18
    9658:	00000406 	br	966c <__fputwc+0xe8>
    965c:	80c0030b 	ldhu	r3,12(r16)
    9660:	a005883a 	mov	r2,r20
    9664:	18c01014 	ori	r3,r3,64
    9668:	80c0030d 	sth	r3,12(r16)
    966c:	dfc00717 	ldw	ra,28(sp)
    9670:	dd400617 	ldw	r21,24(sp)
    9674:	dd000517 	ldw	r20,20(sp)
    9678:	dcc00417 	ldw	r19,16(sp)
    967c:	dc800317 	ldw	r18,12(sp)
    9680:	dc400217 	ldw	r17,8(sp)
    9684:	dc000117 	ldw	r16,4(sp)
    9688:	dec00804 	addi	sp,sp,32
    968c:	f800283a 	ret
    9690:	800d883a 	mov	r6,r16
    9694:	29403fcc 	andi	r5,r5,255
    9698:	9809883a 	mov	r4,r19
    969c:	00098fc0 	call	98fc <__swbuf_r>
    96a0:	10bfffe0 	cmpeqi	r2,r2,-1
    96a4:	10803fcc 	andi	r2,r2,255
    96a8:	103fd626 	beq	r2,zero,9604 <__alt_data_end+0xfffc0224>
    96ac:	00bfffc4 	movi	r2,-1
    96b0:	003fee06 	br	966c <__alt_data_end+0xfffc028c>
    96b4:	90ffffc4 	addi	r3,r18,-1
    96b8:	01003f84 	movi	r4,254
    96bc:	20ffbf36 	bltu	r4,r3,95bc <__alt_data_end+0xfffc01dc>
    96c0:	900b883a 	mov	r5,r18
    96c4:	dc800005 	stb	r18,0(sp)
    96c8:	1029883a 	mov	r20,r2
    96cc:	003fc506 	br	95e4 <__alt_data_end+0xfffc0204>
    96d0:	800d883a 	mov	r6,r16
    96d4:	a80b883a 	mov	r5,r21
    96d8:	9809883a 	mov	r4,r19
    96dc:	00098fc0 	call	98fc <__swbuf_r>
    96e0:	10bfffe0 	cmpeqi	r2,r2,-1
    96e4:	003fef06 	br	96a4 <__alt_data_end+0xfffc02c4>

000096e8 <_fputwc_r>:
    96e8:	3080030b 	ldhu	r2,12(r6)
    96ec:	10c8000c 	andi	r3,r2,8192
    96f0:	1800051e 	bne	r3,zero,9708 <_fputwc_r+0x20>
    96f4:	30c01917 	ldw	r3,100(r6)
    96f8:	10880014 	ori	r2,r2,8192
    96fc:	3080030d 	sth	r2,12(r6)
    9700:	18880014 	ori	r2,r3,8192
    9704:	30801915 	stw	r2,100(r6)
    9708:	00095841 	jmpi	9584 <__fputwc>

0000970c <fputwc>:
    970c:	00800074 	movhi	r2,1
    9710:	defffc04 	addi	sp,sp,-16
    9714:	10860b04 	addi	r2,r2,6188
    9718:	dc000115 	stw	r16,4(sp)
    971c:	14000017 	ldw	r16,0(r2)
    9720:	dc400215 	stw	r17,8(sp)
    9724:	dfc00315 	stw	ra,12(sp)
    9728:	2023883a 	mov	r17,r4
    972c:	80000226 	beq	r16,zero,9738 <fputwc+0x2c>
    9730:	80800e17 	ldw	r2,56(r16)
    9734:	10001026 	beq	r2,zero,9778 <fputwc+0x6c>
    9738:	2880030b 	ldhu	r2,12(r5)
    973c:	10c8000c 	andi	r3,r2,8192
    9740:	1800051e 	bne	r3,zero,9758 <fputwc+0x4c>
    9744:	28c01917 	ldw	r3,100(r5)
    9748:	10880014 	ori	r2,r2,8192
    974c:	2880030d 	sth	r2,12(r5)
    9750:	18880014 	ori	r2,r3,8192
    9754:	28801915 	stw	r2,100(r5)
    9758:	280d883a 	mov	r6,r5
    975c:	8009883a 	mov	r4,r16
    9760:	880b883a 	mov	r5,r17
    9764:	dfc00317 	ldw	ra,12(sp)
    9768:	dc400217 	ldw	r17,8(sp)
    976c:	dc000117 	ldw	r16,4(sp)
    9770:	dec00404 	addi	sp,sp,16
    9774:	00095841 	jmpi	9584 <__fputwc>
    9778:	8009883a 	mov	r4,r16
    977c:	d9400015 	stw	r5,0(sp)
    9780:	00048d40 	call	48d4 <__sinit>
    9784:	d9400017 	ldw	r5,0(sp)
    9788:	003feb06 	br	9738 <__alt_data_end+0xfffc0358>

0000978c <_fstat_r>:
    978c:	defffd04 	addi	sp,sp,-12
    9790:	2805883a 	mov	r2,r5
    9794:	dc000015 	stw	r16,0(sp)
    9798:	04000074 	movhi	r16,1
    979c:	dc400115 	stw	r17,4(sp)
    97a0:	840cdb04 	addi	r16,r16,13164
    97a4:	2023883a 	mov	r17,r4
    97a8:	300b883a 	mov	r5,r6
    97ac:	1009883a 	mov	r4,r2
    97b0:	dfc00215 	stw	ra,8(sp)
    97b4:	80000015 	stw	zero,0(r16)
    97b8:	000d41c0 	call	d41c <fstat>
    97bc:	00ffffc4 	movi	r3,-1
    97c0:	10c00526 	beq	r2,r3,97d8 <_fstat_r+0x4c>
    97c4:	dfc00217 	ldw	ra,8(sp)
    97c8:	dc400117 	ldw	r17,4(sp)
    97cc:	dc000017 	ldw	r16,0(sp)
    97d0:	dec00304 	addi	sp,sp,12
    97d4:	f800283a 	ret
    97d8:	80c00017 	ldw	r3,0(r16)
    97dc:	183ff926 	beq	r3,zero,97c4 <__alt_data_end+0xfffc03e4>
    97e0:	88c00015 	stw	r3,0(r17)
    97e4:	003ff706 	br	97c4 <__alt_data_end+0xfffc03e4>

000097e8 <_isatty_r>:
    97e8:	defffd04 	addi	sp,sp,-12
    97ec:	dc000015 	stw	r16,0(sp)
    97f0:	04000074 	movhi	r16,1
    97f4:	dc400115 	stw	r17,4(sp)
    97f8:	840cdb04 	addi	r16,r16,13164
    97fc:	2023883a 	mov	r17,r4
    9800:	2809883a 	mov	r4,r5
    9804:	dfc00215 	stw	ra,8(sp)
    9808:	80000015 	stw	zero,0(r16)
    980c:	000d5240 	call	d524 <isatty>
    9810:	00ffffc4 	movi	r3,-1
    9814:	10c00526 	beq	r2,r3,982c <_isatty_r+0x44>
    9818:	dfc00217 	ldw	ra,8(sp)
    981c:	dc400117 	ldw	r17,4(sp)
    9820:	dc000017 	ldw	r16,0(sp)
    9824:	dec00304 	addi	sp,sp,12
    9828:	f800283a 	ret
    982c:	80c00017 	ldw	r3,0(r16)
    9830:	183ff926 	beq	r3,zero,9818 <__alt_data_end+0xfffc0438>
    9834:	88c00015 	stw	r3,0(r17)
    9838:	003ff706 	br	9818 <__alt_data_end+0xfffc0438>

0000983c <_lseek_r>:
    983c:	defffd04 	addi	sp,sp,-12
    9840:	2805883a 	mov	r2,r5
    9844:	dc000015 	stw	r16,0(sp)
    9848:	04000074 	movhi	r16,1
    984c:	dc400115 	stw	r17,4(sp)
    9850:	300b883a 	mov	r5,r6
    9854:	840cdb04 	addi	r16,r16,13164
    9858:	2023883a 	mov	r17,r4
    985c:	380d883a 	mov	r6,r7
    9860:	1009883a 	mov	r4,r2
    9864:	dfc00215 	stw	ra,8(sp)
    9868:	80000015 	stw	zero,0(r16)
    986c:	000d70c0 	call	d70c <lseek>
    9870:	00ffffc4 	movi	r3,-1
    9874:	10c00526 	beq	r2,r3,988c <_lseek_r+0x50>
    9878:	dfc00217 	ldw	ra,8(sp)
    987c:	dc400117 	ldw	r17,4(sp)
    9880:	dc000017 	ldw	r16,0(sp)
    9884:	dec00304 	addi	sp,sp,12
    9888:	f800283a 	ret
    988c:	80c00017 	ldw	r3,0(r16)
    9890:	183ff926 	beq	r3,zero,9878 <__alt_data_end+0xfffc0498>
    9894:	88c00015 	stw	r3,0(r17)
    9898:	003ff706 	br	9878 <__alt_data_end+0xfffc0498>

0000989c <_read_r>:
    989c:	defffd04 	addi	sp,sp,-12
    98a0:	2805883a 	mov	r2,r5
    98a4:	dc000015 	stw	r16,0(sp)
    98a8:	04000074 	movhi	r16,1
    98ac:	dc400115 	stw	r17,4(sp)
    98b0:	300b883a 	mov	r5,r6
    98b4:	840cdb04 	addi	r16,r16,13164
    98b8:	2023883a 	mov	r17,r4
    98bc:	380d883a 	mov	r6,r7
    98c0:	1009883a 	mov	r4,r2
    98c4:	dfc00215 	stw	ra,8(sp)
    98c8:	80000015 	stw	zero,0(r16)
    98cc:	000d8fc0 	call	d8fc <read>
    98d0:	00ffffc4 	movi	r3,-1
    98d4:	10c00526 	beq	r2,r3,98ec <_read_r+0x50>
    98d8:	dfc00217 	ldw	ra,8(sp)
    98dc:	dc400117 	ldw	r17,4(sp)
    98e0:	dc000017 	ldw	r16,0(sp)
    98e4:	dec00304 	addi	sp,sp,12
    98e8:	f800283a 	ret
    98ec:	80c00017 	ldw	r3,0(r16)
    98f0:	183ff926 	beq	r3,zero,98d8 <__alt_data_end+0xfffc04f8>
    98f4:	88c00015 	stw	r3,0(r17)
    98f8:	003ff706 	br	98d8 <__alt_data_end+0xfffc04f8>

000098fc <__swbuf_r>:
    98fc:	defffb04 	addi	sp,sp,-20
    9900:	dcc00315 	stw	r19,12(sp)
    9904:	dc800215 	stw	r18,8(sp)
    9908:	dc000015 	stw	r16,0(sp)
    990c:	dfc00415 	stw	ra,16(sp)
    9910:	dc400115 	stw	r17,4(sp)
    9914:	2025883a 	mov	r18,r4
    9918:	2827883a 	mov	r19,r5
    991c:	3021883a 	mov	r16,r6
    9920:	20000226 	beq	r4,zero,992c <__swbuf_r+0x30>
    9924:	20800e17 	ldw	r2,56(r4)
    9928:	10004226 	beq	r2,zero,9a34 <__swbuf_r+0x138>
    992c:	80800617 	ldw	r2,24(r16)
    9930:	8100030b 	ldhu	r4,12(r16)
    9934:	80800215 	stw	r2,8(r16)
    9938:	2080020c 	andi	r2,r4,8
    993c:	10003626 	beq	r2,zero,9a18 <__swbuf_r+0x11c>
    9940:	80c00417 	ldw	r3,16(r16)
    9944:	18003426 	beq	r3,zero,9a18 <__swbuf_r+0x11c>
    9948:	2088000c 	andi	r2,r4,8192
    994c:	9c403fcc 	andi	r17,r19,255
    9950:	10001a26 	beq	r2,zero,99bc <__swbuf_r+0xc0>
    9954:	80800017 	ldw	r2,0(r16)
    9958:	81000517 	ldw	r4,20(r16)
    995c:	10c7c83a 	sub	r3,r2,r3
    9960:	1900200e 	bge	r3,r4,99e4 <__swbuf_r+0xe8>
    9964:	18c00044 	addi	r3,r3,1
    9968:	81000217 	ldw	r4,8(r16)
    996c:	11400044 	addi	r5,r2,1
    9970:	81400015 	stw	r5,0(r16)
    9974:	213fffc4 	addi	r4,r4,-1
    9978:	81000215 	stw	r4,8(r16)
    997c:	14c00005 	stb	r19,0(r2)
    9980:	80800517 	ldw	r2,20(r16)
    9984:	10c01e26 	beq	r2,r3,9a00 <__swbuf_r+0x104>
    9988:	8080030b 	ldhu	r2,12(r16)
    998c:	1080004c 	andi	r2,r2,1
    9990:	10000226 	beq	r2,zero,999c <__swbuf_r+0xa0>
    9994:	00800284 	movi	r2,10
    9998:	88801926 	beq	r17,r2,9a00 <__swbuf_r+0x104>
    999c:	8805883a 	mov	r2,r17
    99a0:	dfc00417 	ldw	ra,16(sp)
    99a4:	dcc00317 	ldw	r19,12(sp)
    99a8:	dc800217 	ldw	r18,8(sp)
    99ac:	dc400117 	ldw	r17,4(sp)
    99b0:	dc000017 	ldw	r16,0(sp)
    99b4:	dec00504 	addi	sp,sp,20
    99b8:	f800283a 	ret
    99bc:	81401917 	ldw	r5,100(r16)
    99c0:	00b7ffc4 	movi	r2,-8193
    99c4:	21080014 	ori	r4,r4,8192
    99c8:	2884703a 	and	r2,r5,r2
    99cc:	80801915 	stw	r2,100(r16)
    99d0:	80800017 	ldw	r2,0(r16)
    99d4:	8100030d 	sth	r4,12(r16)
    99d8:	81000517 	ldw	r4,20(r16)
    99dc:	10c7c83a 	sub	r3,r2,r3
    99e0:	193fe016 	blt	r3,r4,9964 <__alt_data_end+0xfffc0584>
    99e4:	800b883a 	mov	r5,r16
    99e8:	9009883a 	mov	r4,r18
    99ec:	00044e80 	call	44e8 <_fflush_r>
    99f0:	1000071e 	bne	r2,zero,9a10 <__swbuf_r+0x114>
    99f4:	80800017 	ldw	r2,0(r16)
    99f8:	00c00044 	movi	r3,1
    99fc:	003fda06 	br	9968 <__alt_data_end+0xfffc0588>
    9a00:	800b883a 	mov	r5,r16
    9a04:	9009883a 	mov	r4,r18
    9a08:	00044e80 	call	44e8 <_fflush_r>
    9a0c:	103fe326 	beq	r2,zero,999c <__alt_data_end+0xfffc05bc>
    9a10:	00bfffc4 	movi	r2,-1
    9a14:	003fe206 	br	99a0 <__alt_data_end+0xfffc05c0>
    9a18:	800b883a 	mov	r5,r16
    9a1c:	9009883a 	mov	r4,r18
    9a20:	00028c80 	call	28c8 <__swsetup_r>
    9a24:	103ffa1e 	bne	r2,zero,9a10 <__alt_data_end+0xfffc0630>
    9a28:	8100030b 	ldhu	r4,12(r16)
    9a2c:	80c00417 	ldw	r3,16(r16)
    9a30:	003fc506 	br	9948 <__alt_data_end+0xfffc0568>
    9a34:	00048d40 	call	48d4 <__sinit>
    9a38:	003fbc06 	br	992c <__alt_data_end+0xfffc054c>

00009a3c <__swbuf>:
    9a3c:	00800074 	movhi	r2,1
    9a40:	10860b04 	addi	r2,r2,6188
    9a44:	280d883a 	mov	r6,r5
    9a48:	200b883a 	mov	r5,r4
    9a4c:	11000017 	ldw	r4,0(r2)
    9a50:	00098fc1 	jmpi	98fc <__swbuf_r>

00009a54 <_wcrtomb_r>:
    9a54:	defff604 	addi	sp,sp,-40
    9a58:	00800074 	movhi	r2,1
    9a5c:	dc800815 	stw	r18,32(sp)
    9a60:	dc400715 	stw	r17,28(sp)
    9a64:	dc000615 	stw	r16,24(sp)
    9a68:	10860f04 	addi	r2,r2,6204
    9a6c:	dfc00915 	stw	ra,36(sp)
    9a70:	2021883a 	mov	r16,r4
    9a74:	3823883a 	mov	r17,r7
    9a78:	14800017 	ldw	r18,0(r2)
    9a7c:	28001426 	beq	r5,zero,9ad0 <_wcrtomb_r+0x7c>
    9a80:	d9400415 	stw	r5,16(sp)
    9a84:	d9800515 	stw	r6,20(sp)
    9a88:	00054240 	call	5424 <__locale_charset>
    9a8c:	d9800517 	ldw	r6,20(sp)
    9a90:	d9400417 	ldw	r5,16(sp)
    9a94:	100f883a 	mov	r7,r2
    9a98:	dc400015 	stw	r17,0(sp)
    9a9c:	8009883a 	mov	r4,r16
    9aa0:	903ee83a 	callr	r18
    9aa4:	00ffffc4 	movi	r3,-1
    9aa8:	10c0031e 	bne	r2,r3,9ab8 <_wcrtomb_r+0x64>
    9aac:	88000015 	stw	zero,0(r17)
    9ab0:	00c02284 	movi	r3,138
    9ab4:	80c00015 	stw	r3,0(r16)
    9ab8:	dfc00917 	ldw	ra,36(sp)
    9abc:	dc800817 	ldw	r18,32(sp)
    9ac0:	dc400717 	ldw	r17,28(sp)
    9ac4:	dc000617 	ldw	r16,24(sp)
    9ac8:	dec00a04 	addi	sp,sp,40
    9acc:	f800283a 	ret
    9ad0:	00054240 	call	5424 <__locale_charset>
    9ad4:	100f883a 	mov	r7,r2
    9ad8:	dc400015 	stw	r17,0(sp)
    9adc:	000d883a 	mov	r6,zero
    9ae0:	d9400104 	addi	r5,sp,4
    9ae4:	8009883a 	mov	r4,r16
    9ae8:	903ee83a 	callr	r18
    9aec:	003fed06 	br	9aa4 <__alt_data_end+0xfffc06c4>

00009af0 <wcrtomb>:
    9af0:	defff604 	addi	sp,sp,-40
    9af4:	00800074 	movhi	r2,1
    9af8:	dc800615 	stw	r18,24(sp)
    9afc:	dc400515 	stw	r17,20(sp)
    9b00:	10860b04 	addi	r2,r2,6188
    9b04:	dfc00915 	stw	ra,36(sp)
    9b08:	dd000815 	stw	r20,32(sp)
    9b0c:	dcc00715 	stw	r19,28(sp)
    9b10:	dc000415 	stw	r16,16(sp)
    9b14:	3025883a 	mov	r18,r6
    9b18:	14400017 	ldw	r17,0(r2)
    9b1c:	20001926 	beq	r4,zero,9b84 <wcrtomb+0x94>
    9b20:	00800074 	movhi	r2,1
    9b24:	10860f04 	addi	r2,r2,6204
    9b28:	15000017 	ldw	r20,0(r2)
    9b2c:	2021883a 	mov	r16,r4
    9b30:	2827883a 	mov	r19,r5
    9b34:	00054240 	call	5424 <__locale_charset>
    9b38:	100f883a 	mov	r7,r2
    9b3c:	dc800015 	stw	r18,0(sp)
    9b40:	980d883a 	mov	r6,r19
    9b44:	800b883a 	mov	r5,r16
    9b48:	8809883a 	mov	r4,r17
    9b4c:	a03ee83a 	callr	r20
    9b50:	00ffffc4 	movi	r3,-1
    9b54:	10c0031e 	bne	r2,r3,9b64 <wcrtomb+0x74>
    9b58:	90000015 	stw	zero,0(r18)
    9b5c:	00c02284 	movi	r3,138
    9b60:	88c00015 	stw	r3,0(r17)
    9b64:	dfc00917 	ldw	ra,36(sp)
    9b68:	dd000817 	ldw	r20,32(sp)
    9b6c:	dcc00717 	ldw	r19,28(sp)
    9b70:	dc800617 	ldw	r18,24(sp)
    9b74:	dc400517 	ldw	r17,20(sp)
    9b78:	dc000417 	ldw	r16,16(sp)
    9b7c:	dec00a04 	addi	sp,sp,40
    9b80:	f800283a 	ret
    9b84:	00800074 	movhi	r2,1
    9b88:	10860f04 	addi	r2,r2,6204
    9b8c:	14000017 	ldw	r16,0(r2)
    9b90:	00054240 	call	5424 <__locale_charset>
    9b94:	100f883a 	mov	r7,r2
    9b98:	dc800015 	stw	r18,0(sp)
    9b9c:	000d883a 	mov	r6,zero
    9ba0:	d9400104 	addi	r5,sp,4
    9ba4:	8809883a 	mov	r4,r17
    9ba8:	803ee83a 	callr	r16
    9bac:	003fe806 	br	9b50 <__alt_data_end+0xfffc0770>

00009bb0 <__ascii_wctomb>:
    9bb0:	28000526 	beq	r5,zero,9bc8 <__ascii_wctomb+0x18>
    9bb4:	00803fc4 	movi	r2,255
    9bb8:	11800536 	bltu	r2,r6,9bd0 <__ascii_wctomb+0x20>
    9bbc:	29800005 	stb	r6,0(r5)
    9bc0:	00800044 	movi	r2,1
    9bc4:	f800283a 	ret
    9bc8:	0005883a 	mov	r2,zero
    9bcc:	f800283a 	ret
    9bd0:	00802284 	movi	r2,138
    9bd4:	20800015 	stw	r2,0(r4)
    9bd8:	00bfffc4 	movi	r2,-1
    9bdc:	f800283a 	ret

00009be0 <_wctomb_r>:
    9be0:	00800074 	movhi	r2,1
    9be4:	defff904 	addi	sp,sp,-28
    9be8:	10860f04 	addi	r2,r2,6204
    9bec:	dfc00615 	stw	ra,24(sp)
    9bf0:	dc400515 	stw	r17,20(sp)
    9bf4:	dc000415 	stw	r16,16(sp)
    9bf8:	3823883a 	mov	r17,r7
    9bfc:	14000017 	ldw	r16,0(r2)
    9c00:	d9000115 	stw	r4,4(sp)
    9c04:	d9400215 	stw	r5,8(sp)
    9c08:	d9800315 	stw	r6,12(sp)
    9c0c:	00054240 	call	5424 <__locale_charset>
    9c10:	d9800317 	ldw	r6,12(sp)
    9c14:	d9400217 	ldw	r5,8(sp)
    9c18:	d9000117 	ldw	r4,4(sp)
    9c1c:	100f883a 	mov	r7,r2
    9c20:	dc400015 	stw	r17,0(sp)
    9c24:	803ee83a 	callr	r16
    9c28:	dfc00617 	ldw	ra,24(sp)
    9c2c:	dc400517 	ldw	r17,20(sp)
    9c30:	dc000417 	ldw	r16,16(sp)
    9c34:	dec00704 	addi	sp,sp,28
    9c38:	f800283a 	ret

00009c3c <__udivdi3>:
    9c3c:	defff404 	addi	sp,sp,-48
    9c40:	dcc00515 	stw	r19,20(sp)
    9c44:	dc000215 	stw	r16,8(sp)
    9c48:	dfc00b15 	stw	ra,44(sp)
    9c4c:	df000a15 	stw	fp,40(sp)
    9c50:	ddc00915 	stw	r23,36(sp)
    9c54:	dd800815 	stw	r22,32(sp)
    9c58:	dd400715 	stw	r21,28(sp)
    9c5c:	dd000615 	stw	r20,24(sp)
    9c60:	dc800415 	stw	r18,16(sp)
    9c64:	dc400315 	stw	r17,12(sp)
    9c68:	2027883a 	mov	r19,r4
    9c6c:	2821883a 	mov	r16,r5
    9c70:	3800461e 	bne	r7,zero,9d8c <__udivdi3+0x150>
    9c74:	3023883a 	mov	r17,r6
    9c78:	2025883a 	mov	r18,r4
    9c7c:	2980572e 	bgeu	r5,r6,9ddc <__udivdi3+0x1a0>
    9c80:	00bfffd4 	movui	r2,65535
    9c84:	282d883a 	mov	r22,r5
    9c88:	1180b236 	bltu	r2,r6,9f54 <__udivdi3+0x318>
    9c8c:	00803fc4 	movi	r2,255
    9c90:	1185803a 	cmpltu	r2,r2,r6
    9c94:	100490fa 	slli	r2,r2,3
    9c98:	3086d83a 	srl	r3,r6,r2
    9c9c:	01000074 	movhi	r4,1
    9ca0:	213f1204 	addi	r4,r4,-952
    9ca4:	20c7883a 	add	r3,r4,r3
    9ca8:	18c00003 	ldbu	r3,0(r3)
    9cac:	1885883a 	add	r2,r3,r2
    9cb0:	00c00804 	movi	r3,32
    9cb4:	1887c83a 	sub	r3,r3,r2
    9cb8:	18000526 	beq	r3,zero,9cd0 <__udivdi3+0x94>
    9cbc:	80e0983a 	sll	r16,r16,r3
    9cc0:	9884d83a 	srl	r2,r19,r2
    9cc4:	30e2983a 	sll	r17,r6,r3
    9cc8:	98e4983a 	sll	r18,r19,r3
    9ccc:	142cb03a 	or	r22,r2,r16
    9cd0:	882ad43a 	srli	r21,r17,16
    9cd4:	b009883a 	mov	r4,r22
    9cd8:	8d3fffcc 	andi	r20,r17,65535
    9cdc:	a80b883a 	mov	r5,r21
    9ce0:	000a9580 	call	a958 <__umodsi3>
    9ce4:	b009883a 	mov	r4,r22
    9ce8:	a80b883a 	mov	r5,r21
    9cec:	1027883a 	mov	r19,r2
    9cf0:	000a8f40 	call	a8f4 <__udivsi3>
    9cf4:	100b883a 	mov	r5,r2
    9cf8:	a009883a 	mov	r4,r20
    9cfc:	102d883a 	mov	r22,r2
    9d00:	000a9b00 	call	a9b0 <__mulsi3>
    9d04:	9826943a 	slli	r19,r19,16
    9d08:	9006d43a 	srli	r3,r18,16
    9d0c:	1cc6b03a 	or	r3,r3,r19
    9d10:	1880052e 	bgeu	r3,r2,9d28 <__udivdi3+0xec>
    9d14:	1c47883a 	add	r3,r3,r17
    9d18:	b13fffc4 	addi	r4,r22,-1
    9d1c:	1c400136 	bltu	r3,r17,9d24 <__udivdi3+0xe8>
    9d20:	18814236 	bltu	r3,r2,a22c <__udivdi3+0x5f0>
    9d24:	202d883a 	mov	r22,r4
    9d28:	18a1c83a 	sub	r16,r3,r2
    9d2c:	8009883a 	mov	r4,r16
    9d30:	a80b883a 	mov	r5,r21
    9d34:	000a9580 	call	a958 <__umodsi3>
    9d38:	1027883a 	mov	r19,r2
    9d3c:	8009883a 	mov	r4,r16
    9d40:	a80b883a 	mov	r5,r21
    9d44:	9826943a 	slli	r19,r19,16
    9d48:	000a8f40 	call	a8f4 <__udivsi3>
    9d4c:	100b883a 	mov	r5,r2
    9d50:	a009883a 	mov	r4,r20
    9d54:	94bfffcc 	andi	r18,r18,65535
    9d58:	1021883a 	mov	r16,r2
    9d5c:	94e4b03a 	or	r18,r18,r19
    9d60:	000a9b00 	call	a9b0 <__mulsi3>
    9d64:	9080052e 	bgeu	r18,r2,9d7c <__udivdi3+0x140>
    9d68:	8ca5883a 	add	r18,r17,r18
    9d6c:	80ffffc4 	addi	r3,r16,-1
    9d70:	94410c36 	bltu	r18,r17,a1a4 <__udivdi3+0x568>
    9d74:	90810b2e 	bgeu	r18,r2,a1a4 <__udivdi3+0x568>
    9d78:	843fff84 	addi	r16,r16,-2
    9d7c:	b004943a 	slli	r2,r22,16
    9d80:	0007883a 	mov	r3,zero
    9d84:	1404b03a 	or	r2,r2,r16
    9d88:	00005e06 	br	9f04 <__udivdi3+0x2c8>
    9d8c:	29c05b36 	bltu	r5,r7,9efc <__udivdi3+0x2c0>
    9d90:	00bfffd4 	movui	r2,65535
    9d94:	11c0672e 	bgeu	r2,r7,9f34 <__udivdi3+0x2f8>
    9d98:	00804034 	movhi	r2,256
    9d9c:	10bfffc4 	addi	r2,r2,-1
    9da0:	11c10a36 	bltu	r2,r7,a1cc <__udivdi3+0x590>
    9da4:	00800404 	movi	r2,16
    9da8:	3886d83a 	srl	r3,r7,r2
    9dac:	01000074 	movhi	r4,1
    9db0:	213f1204 	addi	r4,r4,-952
    9db4:	20c7883a 	add	r3,r4,r3
    9db8:	18c00003 	ldbu	r3,0(r3)
    9dbc:	05c00804 	movi	r23,32
    9dc0:	1885883a 	add	r2,r3,r2
    9dc4:	b8afc83a 	sub	r23,r23,r2
    9dc8:	b800671e 	bne	r23,zero,9f68 <__udivdi3+0x32c>
    9dcc:	3c010536 	bltu	r7,r16,a1e4 <__udivdi3+0x5a8>
    9dd0:	9985403a 	cmpgeu	r2,r19,r6
    9dd4:	0007883a 	mov	r3,zero
    9dd8:	00004a06 	br	9f04 <__udivdi3+0x2c8>
    9ddc:	3000041e 	bne	r6,zero,9df0 <__udivdi3+0x1b4>
    9de0:	000b883a 	mov	r5,zero
    9de4:	01000044 	movi	r4,1
    9de8:	000a8f40 	call	a8f4 <__udivsi3>
    9dec:	1023883a 	mov	r17,r2
    9df0:	00bfffd4 	movui	r2,65535
    9df4:	1440532e 	bgeu	r2,r17,9f44 <__udivdi3+0x308>
    9df8:	00804034 	movhi	r2,256
    9dfc:	10bfffc4 	addi	r2,r2,-1
    9e00:	1440f436 	bltu	r2,r17,a1d4 <__udivdi3+0x598>
    9e04:	00800404 	movi	r2,16
    9e08:	8886d83a 	srl	r3,r17,r2
    9e0c:	01000074 	movhi	r4,1
    9e10:	213f1204 	addi	r4,r4,-952
    9e14:	20c7883a 	add	r3,r4,r3
    9e18:	18c00003 	ldbu	r3,0(r3)
    9e1c:	1885883a 	add	r2,r3,r2
    9e20:	00c00804 	movi	r3,32
    9e24:	1887c83a 	sub	r3,r3,r2
    9e28:	1800a51e 	bne	r3,zero,a0c0 <__udivdi3+0x484>
    9e2c:	882ad43a 	srli	r21,r17,16
    9e30:	8461c83a 	sub	r16,r16,r17
    9e34:	8d3fffcc 	andi	r20,r17,65535
    9e38:	00c00044 	movi	r3,1
    9e3c:	a80b883a 	mov	r5,r21
    9e40:	8009883a 	mov	r4,r16
    9e44:	d8c00115 	stw	r3,4(sp)
    9e48:	000a9580 	call	a958 <__umodsi3>
    9e4c:	a80b883a 	mov	r5,r21
    9e50:	8009883a 	mov	r4,r16
    9e54:	1027883a 	mov	r19,r2
    9e58:	000a8f40 	call	a8f4 <__udivsi3>
    9e5c:	a00b883a 	mov	r5,r20
    9e60:	1009883a 	mov	r4,r2
    9e64:	102d883a 	mov	r22,r2
    9e68:	000a9b00 	call	a9b0 <__mulsi3>
    9e6c:	9826943a 	slli	r19,r19,16
    9e70:	900ed43a 	srli	r7,r18,16
    9e74:	d8c00117 	ldw	r3,4(sp)
    9e78:	3cceb03a 	or	r7,r7,r19
    9e7c:	3880052e 	bgeu	r7,r2,9e94 <__udivdi3+0x258>
    9e80:	3c4f883a 	add	r7,r7,r17
    9e84:	b13fffc4 	addi	r4,r22,-1
    9e88:	3c400136 	bltu	r7,r17,9e90 <__udivdi3+0x254>
    9e8c:	3880e436 	bltu	r7,r2,a220 <__udivdi3+0x5e4>
    9e90:	202d883a 	mov	r22,r4
    9e94:	38a1c83a 	sub	r16,r7,r2
    9e98:	8009883a 	mov	r4,r16
    9e9c:	a80b883a 	mov	r5,r21
    9ea0:	d8c00115 	stw	r3,4(sp)
    9ea4:	000a9580 	call	a958 <__umodsi3>
    9ea8:	1027883a 	mov	r19,r2
    9eac:	8009883a 	mov	r4,r16
    9eb0:	a80b883a 	mov	r5,r21
    9eb4:	9826943a 	slli	r19,r19,16
    9eb8:	000a8f40 	call	a8f4 <__udivsi3>
    9ebc:	a00b883a 	mov	r5,r20
    9ec0:	1009883a 	mov	r4,r2
    9ec4:	94bfffcc 	andi	r18,r18,65535
    9ec8:	1021883a 	mov	r16,r2
    9ecc:	94e4b03a 	or	r18,r18,r19
    9ed0:	000a9b00 	call	a9b0 <__mulsi3>
    9ed4:	d8c00117 	ldw	r3,4(sp)
    9ed8:	9080052e 	bgeu	r18,r2,9ef0 <__udivdi3+0x2b4>
    9edc:	8ca5883a 	add	r18,r17,r18
    9ee0:	813fffc4 	addi	r4,r16,-1
    9ee4:	9440ad36 	bltu	r18,r17,a19c <__udivdi3+0x560>
    9ee8:	9080ac2e 	bgeu	r18,r2,a19c <__udivdi3+0x560>
    9eec:	843fff84 	addi	r16,r16,-2
    9ef0:	b004943a 	slli	r2,r22,16
    9ef4:	1404b03a 	or	r2,r2,r16
    9ef8:	00000206 	br	9f04 <__udivdi3+0x2c8>
    9efc:	0007883a 	mov	r3,zero
    9f00:	0005883a 	mov	r2,zero
    9f04:	dfc00b17 	ldw	ra,44(sp)
    9f08:	df000a17 	ldw	fp,40(sp)
    9f0c:	ddc00917 	ldw	r23,36(sp)
    9f10:	dd800817 	ldw	r22,32(sp)
    9f14:	dd400717 	ldw	r21,28(sp)
    9f18:	dd000617 	ldw	r20,24(sp)
    9f1c:	dcc00517 	ldw	r19,20(sp)
    9f20:	dc800417 	ldw	r18,16(sp)
    9f24:	dc400317 	ldw	r17,12(sp)
    9f28:	dc000217 	ldw	r16,8(sp)
    9f2c:	dec00c04 	addi	sp,sp,48
    9f30:	f800283a 	ret
    9f34:	00803fc4 	movi	r2,255
    9f38:	11c5803a 	cmpltu	r2,r2,r7
    9f3c:	100490fa 	slli	r2,r2,3
    9f40:	003f9906 	br	9da8 <__alt_data_end+0xfffc09c8>
    9f44:	00803fc4 	movi	r2,255
    9f48:	1445803a 	cmpltu	r2,r2,r17
    9f4c:	100490fa 	slli	r2,r2,3
    9f50:	003fad06 	br	9e08 <__alt_data_end+0xfffc0a28>
    9f54:	00804034 	movhi	r2,256
    9f58:	10bfffc4 	addi	r2,r2,-1
    9f5c:	11809f36 	bltu	r2,r6,a1dc <__udivdi3+0x5a0>
    9f60:	00800404 	movi	r2,16
    9f64:	003f4c06 	br	9c98 <__alt_data_end+0xfffc08b8>
    9f68:	3dce983a 	sll	r7,r7,r23
    9f6c:	30b8d83a 	srl	fp,r6,r2
    9f70:	80a2d83a 	srl	r17,r16,r2
    9f74:	35cc983a 	sll	r6,r6,r23
    9f78:	3f38b03a 	or	fp,r7,fp
    9f7c:	e024d43a 	srli	r18,fp,16
    9f80:	9884d83a 	srl	r2,r19,r2
    9f84:	85e0983a 	sll	r16,r16,r23
    9f88:	8809883a 	mov	r4,r17
    9f8c:	900b883a 	mov	r5,r18
    9f90:	d9800015 	stw	r6,0(sp)
    9f94:	1420b03a 	or	r16,r2,r16
    9f98:	000a9580 	call	a958 <__umodsi3>
    9f9c:	900b883a 	mov	r5,r18
    9fa0:	8809883a 	mov	r4,r17
    9fa4:	1029883a 	mov	r20,r2
    9fa8:	e5bfffcc 	andi	r22,fp,65535
    9fac:	000a8f40 	call	a8f4 <__udivsi3>
    9fb0:	100b883a 	mov	r5,r2
    9fb4:	b009883a 	mov	r4,r22
    9fb8:	102b883a 	mov	r21,r2
    9fbc:	000a9b00 	call	a9b0 <__mulsi3>
    9fc0:	a028943a 	slli	r20,r20,16
    9fc4:	8006d43a 	srli	r3,r16,16
    9fc8:	1d06b03a 	or	r3,r3,r20
    9fcc:	1880042e 	bgeu	r3,r2,9fe0 <__udivdi3+0x3a4>
    9fd0:	1f07883a 	add	r3,r3,fp
    9fd4:	a93fffc4 	addi	r4,r21,-1
    9fd8:	1f00892e 	bgeu	r3,fp,a200 <__udivdi3+0x5c4>
    9fdc:	202b883a 	mov	r21,r4
    9fe0:	18a3c83a 	sub	r17,r3,r2
    9fe4:	8809883a 	mov	r4,r17
    9fe8:	900b883a 	mov	r5,r18
    9fec:	000a9580 	call	a958 <__umodsi3>
    9ff0:	1029883a 	mov	r20,r2
    9ff4:	8809883a 	mov	r4,r17
    9ff8:	900b883a 	mov	r5,r18
    9ffc:	a028943a 	slli	r20,r20,16
    a000:	000a8f40 	call	a8f4 <__udivsi3>
    a004:	100b883a 	mov	r5,r2
    a008:	b009883a 	mov	r4,r22
    a00c:	843fffcc 	andi	r16,r16,65535
    a010:	1023883a 	mov	r17,r2
    a014:	8520b03a 	or	r16,r16,r20
    a018:	000a9b00 	call	a9b0 <__mulsi3>
    a01c:	8080042e 	bgeu	r16,r2,a030 <__udivdi3+0x3f4>
    a020:	8721883a 	add	r16,r16,fp
    a024:	88ffffc4 	addi	r3,r17,-1
    a028:	8700712e 	bgeu	r16,fp,a1f0 <__udivdi3+0x5b4>
    a02c:	1823883a 	mov	r17,r3
    a030:	a80e943a 	slli	r7,r21,16
    a034:	d8c00017 	ldw	r3,0(sp)
    a038:	80a1c83a 	sub	r16,r16,r2
    a03c:	3c64b03a 	or	r18,r7,r17
    a040:	1d3fffcc 	andi	r20,r3,65535
    a044:	9022d43a 	srli	r17,r18,16
    a048:	95bfffcc 	andi	r22,r18,65535
    a04c:	a00b883a 	mov	r5,r20
    a050:	b009883a 	mov	r4,r22
    a054:	182ad43a 	srli	r21,r3,16
    a058:	000a9b00 	call	a9b0 <__mulsi3>
    a05c:	a00b883a 	mov	r5,r20
    a060:	8809883a 	mov	r4,r17
    a064:	1039883a 	mov	fp,r2
    a068:	000a9b00 	call	a9b0 <__mulsi3>
    a06c:	8809883a 	mov	r4,r17
    a070:	a80b883a 	mov	r5,r21
    a074:	1029883a 	mov	r20,r2
    a078:	000a9b00 	call	a9b0 <__mulsi3>
    a07c:	a80b883a 	mov	r5,r21
    a080:	b009883a 	mov	r4,r22
    a084:	1023883a 	mov	r17,r2
    a088:	000a9b00 	call	a9b0 <__mulsi3>
    a08c:	e006d43a 	srli	r3,fp,16
    a090:	1505883a 	add	r2,r2,r20
    a094:	1887883a 	add	r3,r3,r2
    a098:	1d00022e 	bgeu	r3,r20,a0a4 <__udivdi3+0x468>
    a09c:	00800074 	movhi	r2,1
    a0a0:	88a3883a 	add	r17,r17,r2
    a0a4:	1804d43a 	srli	r2,r3,16
    a0a8:	1463883a 	add	r17,r2,r17
    a0ac:	84404436 	bltu	r16,r17,a1c0 <__udivdi3+0x584>
    a0b0:	84403e26 	beq	r16,r17,a1ac <__udivdi3+0x570>
    a0b4:	9005883a 	mov	r2,r18
    a0b8:	0007883a 	mov	r3,zero
    a0bc:	003f9106 	br	9f04 <__alt_data_end+0xfffc0b24>
    a0c0:	88e2983a 	sll	r17,r17,r3
    a0c4:	80aed83a 	srl	r23,r16,r2
    a0c8:	80e0983a 	sll	r16,r16,r3
    a0cc:	882ad43a 	srli	r21,r17,16
    a0d0:	9884d83a 	srl	r2,r19,r2
    a0d4:	b809883a 	mov	r4,r23
    a0d8:	a80b883a 	mov	r5,r21
    a0dc:	98e4983a 	sll	r18,r19,r3
    a0e0:	142cb03a 	or	r22,r2,r16
    a0e4:	000a9580 	call	a958 <__umodsi3>
    a0e8:	b809883a 	mov	r4,r23
    a0ec:	a80b883a 	mov	r5,r21
    a0f0:	1027883a 	mov	r19,r2
    a0f4:	8d3fffcc 	andi	r20,r17,65535
    a0f8:	000a8f40 	call	a8f4 <__udivsi3>
    a0fc:	a009883a 	mov	r4,r20
    a100:	100b883a 	mov	r5,r2
    a104:	102f883a 	mov	r23,r2
    a108:	000a9b00 	call	a9b0 <__mulsi3>
    a10c:	9826943a 	slli	r19,r19,16
    a110:	b008d43a 	srli	r4,r22,16
    a114:	24c8b03a 	or	r4,r4,r19
    a118:	2080062e 	bgeu	r4,r2,a134 <__udivdi3+0x4f8>
    a11c:	2449883a 	add	r4,r4,r17
    a120:	b8ffffc4 	addi	r3,r23,-1
    a124:	24403c36 	bltu	r4,r17,a218 <__udivdi3+0x5dc>
    a128:	20803b2e 	bgeu	r4,r2,a218 <__udivdi3+0x5dc>
    a12c:	bdffff84 	addi	r23,r23,-2
    a130:	2449883a 	add	r4,r4,r17
    a134:	20a1c83a 	sub	r16,r4,r2
    a138:	a80b883a 	mov	r5,r21
    a13c:	8009883a 	mov	r4,r16
    a140:	000a9580 	call	a958 <__umodsi3>
    a144:	a80b883a 	mov	r5,r21
    a148:	8009883a 	mov	r4,r16
    a14c:	1027883a 	mov	r19,r2
    a150:	000a8f40 	call	a8f4 <__udivsi3>
    a154:	a009883a 	mov	r4,r20
    a158:	100b883a 	mov	r5,r2
    a15c:	9826943a 	slli	r19,r19,16
    a160:	1039883a 	mov	fp,r2
    a164:	000a9b00 	call	a9b0 <__mulsi3>
    a168:	b13fffcc 	andi	r4,r22,65535
    a16c:	24c8b03a 	or	r4,r4,r19
    a170:	2080062e 	bgeu	r4,r2,a18c <__udivdi3+0x550>
    a174:	2449883a 	add	r4,r4,r17
    a178:	e0ffffc4 	addi	r3,fp,-1
    a17c:	24402436 	bltu	r4,r17,a210 <__udivdi3+0x5d4>
    a180:	2080232e 	bgeu	r4,r2,a210 <__udivdi3+0x5d4>
    a184:	e73fff84 	addi	fp,fp,-2
    a188:	2449883a 	add	r4,r4,r17
    a18c:	b82e943a 	slli	r23,r23,16
    a190:	20a1c83a 	sub	r16,r4,r2
    a194:	bf06b03a 	or	r3,r23,fp
    a198:	003f2806 	br	9e3c <__alt_data_end+0xfffc0a5c>
    a19c:	2021883a 	mov	r16,r4
    a1a0:	003f5306 	br	9ef0 <__alt_data_end+0xfffc0b10>
    a1a4:	1821883a 	mov	r16,r3
    a1a8:	003ef406 	br	9d7c <__alt_data_end+0xfffc099c>
    a1ac:	1806943a 	slli	r3,r3,16
    a1b0:	9de6983a 	sll	r19,r19,r23
    a1b4:	e73fffcc 	andi	fp,fp,65535
    a1b8:	1f07883a 	add	r3,r3,fp
    a1bc:	98ffbd2e 	bgeu	r19,r3,a0b4 <__alt_data_end+0xfffc0cd4>
    a1c0:	90bfffc4 	addi	r2,r18,-1
    a1c4:	0007883a 	mov	r3,zero
    a1c8:	003f4e06 	br	9f04 <__alt_data_end+0xfffc0b24>
    a1cc:	00800604 	movi	r2,24
    a1d0:	003ef506 	br	9da8 <__alt_data_end+0xfffc09c8>
    a1d4:	00800604 	movi	r2,24
    a1d8:	003f0b06 	br	9e08 <__alt_data_end+0xfffc0a28>
    a1dc:	00800604 	movi	r2,24
    a1e0:	003ead06 	br	9c98 <__alt_data_end+0xfffc08b8>
    a1e4:	0007883a 	mov	r3,zero
    a1e8:	00800044 	movi	r2,1
    a1ec:	003f4506 	br	9f04 <__alt_data_end+0xfffc0b24>
    a1f0:	80bf8e2e 	bgeu	r16,r2,a02c <__alt_data_end+0xfffc0c4c>
    a1f4:	8c7fff84 	addi	r17,r17,-2
    a1f8:	8721883a 	add	r16,r16,fp
    a1fc:	003f8c06 	br	a030 <__alt_data_end+0xfffc0c50>
    a200:	18bf762e 	bgeu	r3,r2,9fdc <__alt_data_end+0xfffc0bfc>
    a204:	ad7fff84 	addi	r21,r21,-2
    a208:	1f07883a 	add	r3,r3,fp
    a20c:	003f7406 	br	9fe0 <__alt_data_end+0xfffc0c00>
    a210:	1839883a 	mov	fp,r3
    a214:	003fdd06 	br	a18c <__alt_data_end+0xfffc0dac>
    a218:	182f883a 	mov	r23,r3
    a21c:	003fc506 	br	a134 <__alt_data_end+0xfffc0d54>
    a220:	b5bfff84 	addi	r22,r22,-2
    a224:	3c4f883a 	add	r7,r7,r17
    a228:	003f1a06 	br	9e94 <__alt_data_end+0xfffc0ab4>
    a22c:	b5bfff84 	addi	r22,r22,-2
    a230:	1c47883a 	add	r3,r3,r17
    a234:	003ebc06 	br	9d28 <__alt_data_end+0xfffc0948>

0000a238 <__umoddi3>:
    a238:	defff304 	addi	sp,sp,-52
    a23c:	df000b15 	stw	fp,44(sp)
    a240:	dc400415 	stw	r17,16(sp)
    a244:	dc000315 	stw	r16,12(sp)
    a248:	dfc00c15 	stw	ra,48(sp)
    a24c:	ddc00a15 	stw	r23,40(sp)
    a250:	dd800915 	stw	r22,36(sp)
    a254:	dd400815 	stw	r21,32(sp)
    a258:	dd000715 	stw	r20,28(sp)
    a25c:	dcc00615 	stw	r19,24(sp)
    a260:	dc800515 	stw	r18,20(sp)
    a264:	2021883a 	mov	r16,r4
    a268:	2823883a 	mov	r17,r5
    a26c:	2839883a 	mov	fp,r5
    a270:	3800401e 	bne	r7,zero,a374 <__umoddi3+0x13c>
    a274:	3027883a 	mov	r19,r6
    a278:	2029883a 	mov	r20,r4
    a27c:	2980552e 	bgeu	r5,r6,a3d4 <__umoddi3+0x19c>
    a280:	00bfffd4 	movui	r2,65535
    a284:	1180a236 	bltu	r2,r6,a510 <__umoddi3+0x2d8>
    a288:	01003fc4 	movi	r4,255
    a28c:	2189803a 	cmpltu	r4,r4,r6
    a290:	200890fa 	slli	r4,r4,3
    a294:	3104d83a 	srl	r2,r6,r4
    a298:	00c00074 	movhi	r3,1
    a29c:	18ff1204 	addi	r3,r3,-952
    a2a0:	1885883a 	add	r2,r3,r2
    a2a4:	10c00003 	ldbu	r3,0(r2)
    a2a8:	00800804 	movi	r2,32
    a2ac:	1909883a 	add	r4,r3,r4
    a2b0:	1125c83a 	sub	r18,r2,r4
    a2b4:	90000526 	beq	r18,zero,a2cc <__umoddi3+0x94>
    a2b8:	8ca2983a 	sll	r17,r17,r18
    a2bc:	8108d83a 	srl	r4,r16,r4
    a2c0:	34a6983a 	sll	r19,r6,r18
    a2c4:	84a8983a 	sll	r20,r16,r18
    a2c8:	2478b03a 	or	fp,r4,r17
    a2cc:	982cd43a 	srli	r22,r19,16
    a2d0:	e009883a 	mov	r4,fp
    a2d4:	9dffffcc 	andi	r23,r19,65535
    a2d8:	b00b883a 	mov	r5,r22
    a2dc:	000a9580 	call	a958 <__umodsi3>
    a2e0:	b00b883a 	mov	r5,r22
    a2e4:	e009883a 	mov	r4,fp
    a2e8:	102b883a 	mov	r21,r2
    a2ec:	000a8f40 	call	a8f4 <__udivsi3>
    a2f0:	100b883a 	mov	r5,r2
    a2f4:	b809883a 	mov	r4,r23
    a2f8:	000a9b00 	call	a9b0 <__mulsi3>
    a2fc:	a82a943a 	slli	r21,r21,16
    a300:	a006d43a 	srli	r3,r20,16
    a304:	1d46b03a 	or	r3,r3,r21
    a308:	1880032e 	bgeu	r3,r2,a318 <__umoddi3+0xe0>
    a30c:	1cc7883a 	add	r3,r3,r19
    a310:	1cc00136 	bltu	r3,r19,a318 <__umoddi3+0xe0>
    a314:	18813136 	bltu	r3,r2,a7dc <__umoddi3+0x5a4>
    a318:	18a1c83a 	sub	r16,r3,r2
    a31c:	b00b883a 	mov	r5,r22
    a320:	8009883a 	mov	r4,r16
    a324:	000a9580 	call	a958 <__umodsi3>
    a328:	b00b883a 	mov	r5,r22
    a32c:	8009883a 	mov	r4,r16
    a330:	1023883a 	mov	r17,r2
    a334:	000a8f40 	call	a8f4 <__udivsi3>
    a338:	100b883a 	mov	r5,r2
    a33c:	b809883a 	mov	r4,r23
    a340:	8822943a 	slli	r17,r17,16
    a344:	000a9b00 	call	a9b0 <__mulsi3>
    a348:	a0ffffcc 	andi	r3,r20,65535
    a34c:	1c46b03a 	or	r3,r3,r17
    a350:	1880042e 	bgeu	r3,r2,a364 <__umoddi3+0x12c>
    a354:	1cc7883a 	add	r3,r3,r19
    a358:	1cc00236 	bltu	r3,r19,a364 <__umoddi3+0x12c>
    a35c:	1880012e 	bgeu	r3,r2,a364 <__umoddi3+0x12c>
    a360:	1cc7883a 	add	r3,r3,r19
    a364:	1885c83a 	sub	r2,r3,r2
    a368:	1484d83a 	srl	r2,r2,r18
    a36c:	0007883a 	mov	r3,zero
    a370:	00005306 	br	a4c0 <__umoddi3+0x288>
    a374:	29c05036 	bltu	r5,r7,a4b8 <__umoddi3+0x280>
    a378:	00bfffd4 	movui	r2,65535
    a37c:	11c05c2e 	bgeu	r2,r7,a4f0 <__umoddi3+0x2b8>
    a380:	00804034 	movhi	r2,256
    a384:	10bfffc4 	addi	r2,r2,-1
    a388:	11c10636 	bltu	r2,r7,a7a4 <__umoddi3+0x56c>
    a38c:	01000404 	movi	r4,16
    a390:	3904d83a 	srl	r2,r7,r4
    a394:	00c00074 	movhi	r3,1
    a398:	18ff1204 	addi	r3,r3,-952
    a39c:	1885883a 	add	r2,r3,r2
    a3a0:	14c00003 	ldbu	r19,0(r2)
    a3a4:	00c00804 	movi	r3,32
    a3a8:	9927883a 	add	r19,r19,r4
    a3ac:	1ce9c83a 	sub	r20,r3,r19
    a3b0:	a0005c1e 	bne	r20,zero,a524 <__umoddi3+0x2ec>
    a3b4:	3c400136 	bltu	r7,r17,a3bc <__umoddi3+0x184>
    a3b8:	81810a36 	bltu	r16,r6,a7e4 <__umoddi3+0x5ac>
    a3bc:	8185c83a 	sub	r2,r16,r6
    a3c0:	89e3c83a 	sub	r17,r17,r7
    a3c4:	8089803a 	cmpltu	r4,r16,r2
    a3c8:	8939c83a 	sub	fp,r17,r4
    a3cc:	e007883a 	mov	r3,fp
    a3d0:	00003b06 	br	a4c0 <__umoddi3+0x288>
    a3d4:	3000041e 	bne	r6,zero,a3e8 <__umoddi3+0x1b0>
    a3d8:	000b883a 	mov	r5,zero
    a3dc:	01000044 	movi	r4,1
    a3e0:	000a8f40 	call	a8f4 <__udivsi3>
    a3e4:	1027883a 	mov	r19,r2
    a3e8:	00bfffd4 	movui	r2,65535
    a3ec:	14c0442e 	bgeu	r2,r19,a500 <__umoddi3+0x2c8>
    a3f0:	00804034 	movhi	r2,256
    a3f4:	10bfffc4 	addi	r2,r2,-1
    a3f8:	14c0ec36 	bltu	r2,r19,a7ac <__umoddi3+0x574>
    a3fc:	00800404 	movi	r2,16
    a400:	9886d83a 	srl	r3,r19,r2
    a404:	01000074 	movhi	r4,1
    a408:	213f1204 	addi	r4,r4,-952
    a40c:	20c7883a 	add	r3,r4,r3
    a410:	18c00003 	ldbu	r3,0(r3)
    a414:	1887883a 	add	r3,r3,r2
    a418:	00800804 	movi	r2,32
    a41c:	10e5c83a 	sub	r18,r2,r3
    a420:	9000ab1e 	bne	r18,zero,a6d0 <__umoddi3+0x498>
    a424:	982cd43a 	srli	r22,r19,16
    a428:	8ce3c83a 	sub	r17,r17,r19
    a42c:	9dffffcc 	andi	r23,r19,65535
    a430:	b00b883a 	mov	r5,r22
    a434:	8809883a 	mov	r4,r17
    a438:	000a9580 	call	a958 <__umodsi3>
    a43c:	b00b883a 	mov	r5,r22
    a440:	8809883a 	mov	r4,r17
    a444:	102b883a 	mov	r21,r2
    a448:	000a8f40 	call	a8f4 <__udivsi3>
    a44c:	b80b883a 	mov	r5,r23
    a450:	1009883a 	mov	r4,r2
    a454:	000a9b00 	call	a9b0 <__mulsi3>
    a458:	a82a943a 	slli	r21,r21,16
    a45c:	a006d43a 	srli	r3,r20,16
    a460:	1d46b03a 	or	r3,r3,r21
    a464:	1880042e 	bgeu	r3,r2,a478 <__umoddi3+0x240>
    a468:	1cc7883a 	add	r3,r3,r19
    a46c:	1cc00236 	bltu	r3,r19,a478 <__umoddi3+0x240>
    a470:	1880012e 	bgeu	r3,r2,a478 <__umoddi3+0x240>
    a474:	1cc7883a 	add	r3,r3,r19
    a478:	18a1c83a 	sub	r16,r3,r2
    a47c:	b00b883a 	mov	r5,r22
    a480:	8009883a 	mov	r4,r16
    a484:	000a9580 	call	a958 <__umodsi3>
    a488:	1023883a 	mov	r17,r2
    a48c:	b00b883a 	mov	r5,r22
    a490:	8009883a 	mov	r4,r16
    a494:	000a8f40 	call	a8f4 <__udivsi3>
    a498:	8822943a 	slli	r17,r17,16
    a49c:	b80b883a 	mov	r5,r23
    a4a0:	1009883a 	mov	r4,r2
    a4a4:	000a9b00 	call	a9b0 <__mulsi3>
    a4a8:	a53fffcc 	andi	r20,r20,65535
    a4ac:	a446b03a 	or	r3,r20,r17
    a4b0:	18bfac2e 	bgeu	r3,r2,a364 <__alt_data_end+0xfffc0f84>
    a4b4:	003fa706 	br	a354 <__alt_data_end+0xfffc0f74>
    a4b8:	2005883a 	mov	r2,r4
    a4bc:	2807883a 	mov	r3,r5
    a4c0:	dfc00c17 	ldw	ra,48(sp)
    a4c4:	df000b17 	ldw	fp,44(sp)
    a4c8:	ddc00a17 	ldw	r23,40(sp)
    a4cc:	dd800917 	ldw	r22,36(sp)
    a4d0:	dd400817 	ldw	r21,32(sp)
    a4d4:	dd000717 	ldw	r20,28(sp)
    a4d8:	dcc00617 	ldw	r19,24(sp)
    a4dc:	dc800517 	ldw	r18,20(sp)
    a4e0:	dc400417 	ldw	r17,16(sp)
    a4e4:	dc000317 	ldw	r16,12(sp)
    a4e8:	dec00d04 	addi	sp,sp,52
    a4ec:	f800283a 	ret
    a4f0:	04c03fc4 	movi	r19,255
    a4f4:	99c9803a 	cmpltu	r4,r19,r7
    a4f8:	200890fa 	slli	r4,r4,3
    a4fc:	003fa406 	br	a390 <__alt_data_end+0xfffc0fb0>
    a500:	00803fc4 	movi	r2,255
    a504:	14c5803a 	cmpltu	r2,r2,r19
    a508:	100490fa 	slli	r2,r2,3
    a50c:	003fbc06 	br	a400 <__alt_data_end+0xfffc1020>
    a510:	00804034 	movhi	r2,256
    a514:	10bfffc4 	addi	r2,r2,-1
    a518:	1180a636 	bltu	r2,r6,a7b4 <__umoddi3+0x57c>
    a51c:	01000404 	movi	r4,16
    a520:	003f5c06 	br	a294 <__alt_data_end+0xfffc0eb4>
    a524:	3d0e983a 	sll	r7,r7,r20
    a528:	34ead83a 	srl	r21,r6,r19
    a52c:	8cc6d83a 	srl	r3,r17,r19
    a530:	8d10983a 	sll	r8,r17,r20
    a534:	3d6ab03a 	or	r21,r7,r21
    a538:	a82cd43a 	srli	r22,r21,16
    a53c:	84e2d83a 	srl	r17,r16,r19
    a540:	1809883a 	mov	r4,r3
    a544:	b00b883a 	mov	r5,r22
    a548:	8a22b03a 	or	r17,r17,r8
    a54c:	3524983a 	sll	r18,r6,r20
    a550:	dc400015 	stw	r17,0(sp)
    a554:	d8c00115 	stw	r3,4(sp)
    a558:	000a9580 	call	a958 <__umodsi3>
    a55c:	d8c00117 	ldw	r3,4(sp)
    a560:	b00b883a 	mov	r5,r22
    a564:	1039883a 	mov	fp,r2
    a568:	1809883a 	mov	r4,r3
    a56c:	000a8f40 	call	a8f4 <__udivsi3>
    a570:	adffffcc 	andi	r23,r21,65535
    a574:	100b883a 	mov	r5,r2
    a578:	b809883a 	mov	r4,r23
    a57c:	1023883a 	mov	r17,r2
    a580:	000a9b00 	call	a9b0 <__mulsi3>
    a584:	d9400017 	ldw	r5,0(sp)
    a588:	e008943a 	slli	r4,fp,16
    a58c:	8520983a 	sll	r16,r16,r20
    a590:	2806d43a 	srli	r3,r5,16
    a594:	1906b03a 	or	r3,r3,r4
    a598:	1880042e 	bgeu	r3,r2,a5ac <__umoddi3+0x374>
    a59c:	1d47883a 	add	r3,r3,r21
    a5a0:	893fffc4 	addi	r4,r17,-1
    a5a4:	1d40892e 	bgeu	r3,r21,a7cc <__umoddi3+0x594>
    a5a8:	2023883a 	mov	r17,r4
    a5ac:	18b9c83a 	sub	fp,r3,r2
    a5b0:	b00b883a 	mov	r5,r22
    a5b4:	e009883a 	mov	r4,fp
    a5b8:	000a9580 	call	a958 <__umodsi3>
    a5bc:	b00b883a 	mov	r5,r22
    a5c0:	e009883a 	mov	r4,fp
    a5c4:	d8800215 	stw	r2,8(sp)
    a5c8:	000a8f40 	call	a8f4 <__udivsi3>
    a5cc:	100b883a 	mov	r5,r2
    a5d0:	b809883a 	mov	r4,r23
    a5d4:	102d883a 	mov	r22,r2
    a5d8:	000a9b00 	call	a9b0 <__mulsi3>
    a5dc:	d9800217 	ldw	r6,8(sp)
    a5e0:	d8c00017 	ldw	r3,0(sp)
    a5e4:	300c943a 	slli	r6,r6,16
    a5e8:	1a3fffcc 	andi	r8,r3,65535
    a5ec:	4190b03a 	or	r8,r8,r6
    a5f0:	4080042e 	bgeu	r8,r2,a604 <__umoddi3+0x3cc>
    a5f4:	4551883a 	add	r8,r8,r21
    a5f8:	b0ffffc4 	addi	r3,r22,-1
    a5fc:	45406f2e 	bgeu	r8,r21,a7bc <__umoddi3+0x584>
    a600:	182d883a 	mov	r22,r3
    a604:	880e943a 	slli	r7,r17,16
    a608:	9006d43a 	srli	r3,r18,16
    a60c:	91bfffcc 	andi	r6,r18,65535
    a610:	3dacb03a 	or	r22,r7,r22
    a614:	b02ed43a 	srli	r23,r22,16
    a618:	b5bfffcc 	andi	r22,r22,65535
    a61c:	300b883a 	mov	r5,r6
    a620:	b009883a 	mov	r4,r22
    a624:	40a3c83a 	sub	r17,r8,r2
    a628:	d8c00115 	stw	r3,4(sp)
    a62c:	d9800215 	stw	r6,8(sp)
    a630:	000a9b00 	call	a9b0 <__mulsi3>
    a634:	d9800217 	ldw	r6,8(sp)
    a638:	b809883a 	mov	r4,r23
    a63c:	1039883a 	mov	fp,r2
    a640:	300b883a 	mov	r5,r6
    a644:	000a9b00 	call	a9b0 <__mulsi3>
    a648:	d8c00117 	ldw	r3,4(sp)
    a64c:	b809883a 	mov	r4,r23
    a650:	d8800215 	stw	r2,8(sp)
    a654:	180b883a 	mov	r5,r3
    a658:	000a9b00 	call	a9b0 <__mulsi3>
    a65c:	d8c00117 	ldw	r3,4(sp)
    a660:	b009883a 	mov	r4,r22
    a664:	102f883a 	mov	r23,r2
    a668:	180b883a 	mov	r5,r3
    a66c:	000a9b00 	call	a9b0 <__mulsi3>
    a670:	d9800217 	ldw	r6,8(sp)
    a674:	e006d43a 	srli	r3,fp,16
    a678:	1185883a 	add	r2,r2,r6
    a67c:	1885883a 	add	r2,r3,r2
    a680:	1180022e 	bgeu	r2,r6,a68c <__umoddi3+0x454>
    a684:	00c00074 	movhi	r3,1
    a688:	b8ef883a 	add	r23,r23,r3
    a68c:	1006d43a 	srli	r3,r2,16
    a690:	1004943a 	slli	r2,r2,16
    a694:	e73fffcc 	andi	fp,fp,65535
    a698:	1dc7883a 	add	r3,r3,r23
    a69c:	1739883a 	add	fp,r2,fp
    a6a0:	88c03a36 	bltu	r17,r3,a78c <__umoddi3+0x554>
    a6a4:	88c05126 	beq	r17,r3,a7ec <__umoddi3+0x5b4>
    a6a8:	88c9c83a 	sub	r4,r17,r3
    a6ac:	e00f883a 	mov	r7,fp
    a6b0:	81cfc83a 	sub	r7,r16,r7
    a6b4:	81c7803a 	cmpltu	r3,r16,r7
    a6b8:	20c7c83a 	sub	r3,r4,r3
    a6bc:	1cc4983a 	sll	r2,r3,r19
    a6c0:	3d0ed83a 	srl	r7,r7,r20
    a6c4:	1d06d83a 	srl	r3,r3,r20
    a6c8:	11c4b03a 	or	r2,r2,r7
    a6cc:	003f7c06 	br	a4c0 <__alt_data_end+0xfffc10e0>
    a6d0:	9ca6983a 	sll	r19,r19,r18
    a6d4:	88f8d83a 	srl	fp,r17,r3
    a6d8:	80c4d83a 	srl	r2,r16,r3
    a6dc:	982cd43a 	srli	r22,r19,16
    a6e0:	8ca2983a 	sll	r17,r17,r18
    a6e4:	e009883a 	mov	r4,fp
    a6e8:	b00b883a 	mov	r5,r22
    a6ec:	146ab03a 	or	r21,r2,r17
    a6f0:	000a9580 	call	a958 <__umodsi3>
    a6f4:	b00b883a 	mov	r5,r22
    a6f8:	e009883a 	mov	r4,fp
    a6fc:	1029883a 	mov	r20,r2
    a700:	9dffffcc 	andi	r23,r19,65535
    a704:	000a8f40 	call	a8f4 <__udivsi3>
    a708:	b809883a 	mov	r4,r23
    a70c:	100b883a 	mov	r5,r2
    a710:	000a9b00 	call	a9b0 <__mulsi3>
    a714:	a008943a 	slli	r4,r20,16
    a718:	a806d43a 	srli	r3,r21,16
    a71c:	84a8983a 	sll	r20,r16,r18
    a720:	1906b03a 	or	r3,r3,r4
    a724:	1880042e 	bgeu	r3,r2,a738 <__umoddi3+0x500>
    a728:	1cc7883a 	add	r3,r3,r19
    a72c:	1cc00236 	bltu	r3,r19,a738 <__umoddi3+0x500>
    a730:	1880012e 	bgeu	r3,r2,a738 <__umoddi3+0x500>
    a734:	1cc7883a 	add	r3,r3,r19
    a738:	18a3c83a 	sub	r17,r3,r2
    a73c:	b00b883a 	mov	r5,r22
    a740:	8809883a 	mov	r4,r17
    a744:	000a9580 	call	a958 <__umodsi3>
    a748:	b00b883a 	mov	r5,r22
    a74c:	8809883a 	mov	r4,r17
    a750:	1021883a 	mov	r16,r2
    a754:	000a8f40 	call	a8f4 <__udivsi3>
    a758:	100b883a 	mov	r5,r2
    a75c:	b809883a 	mov	r4,r23
    a760:	8020943a 	slli	r16,r16,16
    a764:	000a9b00 	call	a9b0 <__mulsi3>
    a768:	a8ffffcc 	andi	r3,r21,65535
    a76c:	1c06b03a 	or	r3,r3,r16
    a770:	1880042e 	bgeu	r3,r2,a784 <__umoddi3+0x54c>
    a774:	1cc7883a 	add	r3,r3,r19
    a778:	1cc00236 	bltu	r3,r19,a784 <__umoddi3+0x54c>
    a77c:	1880012e 	bgeu	r3,r2,a784 <__umoddi3+0x54c>
    a780:	1cc7883a 	add	r3,r3,r19
    a784:	18a3c83a 	sub	r17,r3,r2
    a788:	003f2906 	br	a430 <__alt_data_end+0xfffc1050>
    a78c:	e48fc83a 	sub	r7,fp,r18
    a790:	1d49c83a 	sub	r4,r3,r21
    a794:	e1f9803a 	cmpltu	fp,fp,r7
    a798:	2739c83a 	sub	fp,r4,fp
    a79c:	8f09c83a 	sub	r4,r17,fp
    a7a0:	003fc306 	br	a6b0 <__alt_data_end+0xfffc12d0>
    a7a4:	01000604 	movi	r4,24
    a7a8:	003ef906 	br	a390 <__alt_data_end+0xfffc0fb0>
    a7ac:	00800604 	movi	r2,24
    a7b0:	003f1306 	br	a400 <__alt_data_end+0xfffc1020>
    a7b4:	01000604 	movi	r4,24
    a7b8:	003eb606 	br	a294 <__alt_data_end+0xfffc0eb4>
    a7bc:	40bf902e 	bgeu	r8,r2,a600 <__alt_data_end+0xfffc1220>
    a7c0:	b5bfff84 	addi	r22,r22,-2
    a7c4:	4551883a 	add	r8,r8,r21
    a7c8:	003f8e06 	br	a604 <__alt_data_end+0xfffc1224>
    a7cc:	18bf762e 	bgeu	r3,r2,a5a8 <__alt_data_end+0xfffc11c8>
    a7d0:	8c7fff84 	addi	r17,r17,-2
    a7d4:	1d47883a 	add	r3,r3,r21
    a7d8:	003f7406 	br	a5ac <__alt_data_end+0xfffc11cc>
    a7dc:	1cc7883a 	add	r3,r3,r19
    a7e0:	003ecd06 	br	a318 <__alt_data_end+0xfffc0f38>
    a7e4:	8005883a 	mov	r2,r16
    a7e8:	003ef806 	br	a3cc <__alt_data_end+0xfffc0fec>
    a7ec:	873fe736 	bltu	r16,fp,a78c <__alt_data_end+0xfffc13ac>
    a7f0:	e00f883a 	mov	r7,fp
    a7f4:	0009883a 	mov	r4,zero
    a7f8:	003fad06 	br	a6b0 <__alt_data_end+0xfffc12d0>

0000a7fc <__divsi3>:
    a7fc:	20001b16 	blt	r4,zero,a86c <__divsi3+0x70>
    a800:	000f883a 	mov	r7,zero
    a804:	28001616 	blt	r5,zero,a860 <__divsi3+0x64>
    a808:	200d883a 	mov	r6,r4
    a80c:	29001a2e 	bgeu	r5,r4,a878 <__divsi3+0x7c>
    a810:	00800804 	movi	r2,32
    a814:	00c00044 	movi	r3,1
    a818:	00000106 	br	a820 <__divsi3+0x24>
    a81c:	10000d26 	beq	r2,zero,a854 <__divsi3+0x58>
    a820:	294b883a 	add	r5,r5,r5
    a824:	10bfffc4 	addi	r2,r2,-1
    a828:	18c7883a 	add	r3,r3,r3
    a82c:	293ffb36 	bltu	r5,r4,a81c <__alt_data_end+0xfffc143c>
    a830:	0005883a 	mov	r2,zero
    a834:	18000726 	beq	r3,zero,a854 <__divsi3+0x58>
    a838:	0005883a 	mov	r2,zero
    a83c:	31400236 	bltu	r6,r5,a848 <__divsi3+0x4c>
    a840:	314dc83a 	sub	r6,r6,r5
    a844:	10c4b03a 	or	r2,r2,r3
    a848:	1806d07a 	srli	r3,r3,1
    a84c:	280ad07a 	srli	r5,r5,1
    a850:	183ffa1e 	bne	r3,zero,a83c <__alt_data_end+0xfffc145c>
    a854:	38000126 	beq	r7,zero,a85c <__divsi3+0x60>
    a858:	0085c83a 	sub	r2,zero,r2
    a85c:	f800283a 	ret
    a860:	014bc83a 	sub	r5,zero,r5
    a864:	39c0005c 	xori	r7,r7,1
    a868:	003fe706 	br	a808 <__alt_data_end+0xfffc1428>
    a86c:	0109c83a 	sub	r4,zero,r4
    a870:	01c00044 	movi	r7,1
    a874:	003fe306 	br	a804 <__alt_data_end+0xfffc1424>
    a878:	00c00044 	movi	r3,1
    a87c:	003fee06 	br	a838 <__alt_data_end+0xfffc1458>

0000a880 <__modsi3>:
    a880:	20001716 	blt	r4,zero,a8e0 <__modsi3+0x60>
    a884:	000f883a 	mov	r7,zero
    a888:	2005883a 	mov	r2,r4
    a88c:	28001216 	blt	r5,zero,a8d8 <__modsi3+0x58>
    a890:	2900162e 	bgeu	r5,r4,a8ec <__modsi3+0x6c>
    a894:	01800804 	movi	r6,32
    a898:	00c00044 	movi	r3,1
    a89c:	00000106 	br	a8a4 <__modsi3+0x24>
    a8a0:	30000a26 	beq	r6,zero,a8cc <__modsi3+0x4c>
    a8a4:	294b883a 	add	r5,r5,r5
    a8a8:	31bfffc4 	addi	r6,r6,-1
    a8ac:	18c7883a 	add	r3,r3,r3
    a8b0:	293ffb36 	bltu	r5,r4,a8a0 <__alt_data_end+0xfffc14c0>
    a8b4:	18000526 	beq	r3,zero,a8cc <__modsi3+0x4c>
    a8b8:	1806d07a 	srli	r3,r3,1
    a8bc:	11400136 	bltu	r2,r5,a8c4 <__modsi3+0x44>
    a8c0:	1145c83a 	sub	r2,r2,r5
    a8c4:	280ad07a 	srli	r5,r5,1
    a8c8:	183ffb1e 	bne	r3,zero,a8b8 <__alt_data_end+0xfffc14d8>
    a8cc:	38000126 	beq	r7,zero,a8d4 <__modsi3+0x54>
    a8d0:	0085c83a 	sub	r2,zero,r2
    a8d4:	f800283a 	ret
    a8d8:	014bc83a 	sub	r5,zero,r5
    a8dc:	003fec06 	br	a890 <__alt_data_end+0xfffc14b0>
    a8e0:	0109c83a 	sub	r4,zero,r4
    a8e4:	01c00044 	movi	r7,1
    a8e8:	003fe706 	br	a888 <__alt_data_end+0xfffc14a8>
    a8ec:	00c00044 	movi	r3,1
    a8f0:	003ff106 	br	a8b8 <__alt_data_end+0xfffc14d8>

0000a8f4 <__udivsi3>:
    a8f4:	200d883a 	mov	r6,r4
    a8f8:	2900152e 	bgeu	r5,r4,a950 <__udivsi3+0x5c>
    a8fc:	28001416 	blt	r5,zero,a950 <__udivsi3+0x5c>
    a900:	00800804 	movi	r2,32
    a904:	00c00044 	movi	r3,1
    a908:	00000206 	br	a914 <__udivsi3+0x20>
    a90c:	10000e26 	beq	r2,zero,a948 <__udivsi3+0x54>
    a910:	28000516 	blt	r5,zero,a928 <__udivsi3+0x34>
    a914:	294b883a 	add	r5,r5,r5
    a918:	10bfffc4 	addi	r2,r2,-1
    a91c:	18c7883a 	add	r3,r3,r3
    a920:	293ffa36 	bltu	r5,r4,a90c <__alt_data_end+0xfffc152c>
    a924:	18000826 	beq	r3,zero,a948 <__udivsi3+0x54>
    a928:	0005883a 	mov	r2,zero
    a92c:	31400236 	bltu	r6,r5,a938 <__udivsi3+0x44>
    a930:	314dc83a 	sub	r6,r6,r5
    a934:	10c4b03a 	or	r2,r2,r3
    a938:	1806d07a 	srli	r3,r3,1
    a93c:	280ad07a 	srli	r5,r5,1
    a940:	183ffa1e 	bne	r3,zero,a92c <__alt_data_end+0xfffc154c>
    a944:	f800283a 	ret
    a948:	0005883a 	mov	r2,zero
    a94c:	f800283a 	ret
    a950:	00c00044 	movi	r3,1
    a954:	003ff406 	br	a928 <__alt_data_end+0xfffc1548>

0000a958 <__umodsi3>:
    a958:	2005883a 	mov	r2,r4
    a95c:	2900122e 	bgeu	r5,r4,a9a8 <__umodsi3+0x50>
    a960:	28001116 	blt	r5,zero,a9a8 <__umodsi3+0x50>
    a964:	01800804 	movi	r6,32
    a968:	00c00044 	movi	r3,1
    a96c:	00000206 	br	a978 <__umodsi3+0x20>
    a970:	30000c26 	beq	r6,zero,a9a4 <__umodsi3+0x4c>
    a974:	28000516 	blt	r5,zero,a98c <__umodsi3+0x34>
    a978:	294b883a 	add	r5,r5,r5
    a97c:	31bfffc4 	addi	r6,r6,-1
    a980:	18c7883a 	add	r3,r3,r3
    a984:	293ffa36 	bltu	r5,r4,a970 <__alt_data_end+0xfffc1590>
    a988:	18000626 	beq	r3,zero,a9a4 <__umodsi3+0x4c>
    a98c:	1806d07a 	srli	r3,r3,1
    a990:	11400136 	bltu	r2,r5,a998 <__umodsi3+0x40>
    a994:	1145c83a 	sub	r2,r2,r5
    a998:	280ad07a 	srli	r5,r5,1
    a99c:	183ffb1e 	bne	r3,zero,a98c <__alt_data_end+0xfffc15ac>
    a9a0:	f800283a 	ret
    a9a4:	f800283a 	ret
    a9a8:	00c00044 	movi	r3,1
    a9ac:	003ff706 	br	a98c <__alt_data_end+0xfffc15ac>

0000a9b0 <__mulsi3>:
    a9b0:	0005883a 	mov	r2,zero
    a9b4:	20000726 	beq	r4,zero,a9d4 <__mulsi3+0x24>
    a9b8:	20c0004c 	andi	r3,r4,1
    a9bc:	2008d07a 	srli	r4,r4,1
    a9c0:	18000126 	beq	r3,zero,a9c8 <__mulsi3+0x18>
    a9c4:	1145883a 	add	r2,r2,r5
    a9c8:	294b883a 	add	r5,r5,r5
    a9cc:	203ffa1e 	bne	r4,zero,a9b8 <__alt_data_end+0xfffc15d8>
    a9d0:	f800283a 	ret
    a9d4:	f800283a 	ret

0000a9d8 <__adddf3>:
    a9d8:	02c00434 	movhi	r11,16
    a9dc:	5affffc4 	addi	r11,r11,-1
    a9e0:	2806d7fa 	srli	r3,r5,31
    a9e4:	2ad4703a 	and	r10,r5,r11
    a9e8:	3ad2703a 	and	r9,r7,r11
    a9ec:	3804d53a 	srli	r2,r7,20
    a9f0:	3018d77a 	srli	r12,r6,29
    a9f4:	280ad53a 	srli	r5,r5,20
    a9f8:	501490fa 	slli	r10,r10,3
    a9fc:	2010d77a 	srli	r8,r4,29
    aa00:	481290fa 	slli	r9,r9,3
    aa04:	380ed7fa 	srli	r7,r7,31
    aa08:	defffb04 	addi	sp,sp,-20
    aa0c:	dc800215 	stw	r18,8(sp)
    aa10:	dc400115 	stw	r17,4(sp)
    aa14:	dc000015 	stw	r16,0(sp)
    aa18:	dfc00415 	stw	ra,16(sp)
    aa1c:	dcc00315 	stw	r19,12(sp)
    aa20:	1c803fcc 	andi	r18,r3,255
    aa24:	2c01ffcc 	andi	r16,r5,2047
    aa28:	5210b03a 	or	r8,r10,r8
    aa2c:	202290fa 	slli	r17,r4,3
    aa30:	1081ffcc 	andi	r2,r2,2047
    aa34:	4b12b03a 	or	r9,r9,r12
    aa38:	300c90fa 	slli	r6,r6,3
    aa3c:	91c07526 	beq	r18,r7,ac14 <__adddf3+0x23c>
    aa40:	8087c83a 	sub	r3,r16,r2
    aa44:	00c0ab0e 	bge	zero,r3,acf4 <__adddf3+0x31c>
    aa48:	10002a1e 	bne	r2,zero,aaf4 <__adddf3+0x11c>
    aa4c:	4984b03a 	or	r2,r9,r6
    aa50:	1000961e 	bne	r2,zero,acac <__adddf3+0x2d4>
    aa54:	888001cc 	andi	r2,r17,7
    aa58:	10000726 	beq	r2,zero,aa78 <__adddf3+0xa0>
    aa5c:	888003cc 	andi	r2,r17,15
    aa60:	00c00104 	movi	r3,4
    aa64:	10c00426 	beq	r2,r3,aa78 <__adddf3+0xa0>
    aa68:	88c7883a 	add	r3,r17,r3
    aa6c:	1c63803a 	cmpltu	r17,r3,r17
    aa70:	4451883a 	add	r8,r8,r17
    aa74:	1823883a 	mov	r17,r3
    aa78:	4080202c 	andhi	r2,r8,128
    aa7c:	10005926 	beq	r2,zero,abe4 <__adddf3+0x20c>
    aa80:	84000044 	addi	r16,r16,1
    aa84:	0081ffc4 	movi	r2,2047
    aa88:	8080ba26 	beq	r16,r2,ad74 <__adddf3+0x39c>
    aa8c:	00bfe034 	movhi	r2,65408
    aa90:	10bfffc4 	addi	r2,r2,-1
    aa94:	4090703a 	and	r8,r8,r2
    aa98:	4004977a 	slli	r2,r8,29
    aa9c:	4010927a 	slli	r8,r8,9
    aaa0:	8822d0fa 	srli	r17,r17,3
    aaa4:	8401ffcc 	andi	r16,r16,2047
    aaa8:	4010d33a 	srli	r8,r8,12
    aaac:	9007883a 	mov	r3,r18
    aab0:	1444b03a 	or	r2,r2,r17
    aab4:	8401ffcc 	andi	r16,r16,2047
    aab8:	8020953a 	slli	r16,r16,20
    aabc:	18c03fcc 	andi	r3,r3,255
    aac0:	01000434 	movhi	r4,16
    aac4:	213fffc4 	addi	r4,r4,-1
    aac8:	180697fa 	slli	r3,r3,31
    aacc:	4110703a 	and	r8,r8,r4
    aad0:	4410b03a 	or	r8,r8,r16
    aad4:	40c6b03a 	or	r3,r8,r3
    aad8:	dfc00417 	ldw	ra,16(sp)
    aadc:	dcc00317 	ldw	r19,12(sp)
    aae0:	dc800217 	ldw	r18,8(sp)
    aae4:	dc400117 	ldw	r17,4(sp)
    aae8:	dc000017 	ldw	r16,0(sp)
    aaec:	dec00504 	addi	sp,sp,20
    aaf0:	f800283a 	ret
    aaf4:	0081ffc4 	movi	r2,2047
    aaf8:	80bfd626 	beq	r16,r2,aa54 <__alt_data_end+0xfffc1674>
    aafc:	4a402034 	orhi	r9,r9,128
    ab00:	00800e04 	movi	r2,56
    ab04:	10c09f16 	blt	r2,r3,ad84 <__adddf3+0x3ac>
    ab08:	008007c4 	movi	r2,31
    ab0c:	10c0c216 	blt	r2,r3,ae18 <__adddf3+0x440>
    ab10:	00800804 	movi	r2,32
    ab14:	10c5c83a 	sub	r2,r2,r3
    ab18:	488a983a 	sll	r5,r9,r2
    ab1c:	30c8d83a 	srl	r4,r6,r3
    ab20:	3084983a 	sll	r2,r6,r2
    ab24:	48c6d83a 	srl	r3,r9,r3
    ab28:	290cb03a 	or	r6,r5,r4
    ab2c:	1004c03a 	cmpne	r2,r2,zero
    ab30:	308cb03a 	or	r6,r6,r2
    ab34:	898dc83a 	sub	r6,r17,r6
    ab38:	89a3803a 	cmpltu	r17,r17,r6
    ab3c:	40d1c83a 	sub	r8,r8,r3
    ab40:	4451c83a 	sub	r8,r8,r17
    ab44:	3023883a 	mov	r17,r6
    ab48:	4080202c 	andhi	r2,r8,128
    ab4c:	10002326 	beq	r2,zero,abdc <__adddf3+0x204>
    ab50:	04c02034 	movhi	r19,128
    ab54:	9cffffc4 	addi	r19,r19,-1
    ab58:	44e6703a 	and	r19,r8,r19
    ab5c:	98007626 	beq	r19,zero,ad38 <__adddf3+0x360>
    ab60:	9809883a 	mov	r4,r19
    ab64:	000d2140 	call	d214 <__clzsi2>
    ab68:	10fffe04 	addi	r3,r2,-8
    ab6c:	010007c4 	movi	r4,31
    ab70:	20c07716 	blt	r4,r3,ad50 <__adddf3+0x378>
    ab74:	00800804 	movi	r2,32
    ab78:	10c5c83a 	sub	r2,r2,r3
    ab7c:	8884d83a 	srl	r2,r17,r2
    ab80:	98d0983a 	sll	r8,r19,r3
    ab84:	88e2983a 	sll	r17,r17,r3
    ab88:	1204b03a 	or	r2,r2,r8
    ab8c:	1c007416 	blt	r3,r16,ad60 <__adddf3+0x388>
    ab90:	1c21c83a 	sub	r16,r3,r16
    ab94:	82000044 	addi	r8,r16,1
    ab98:	00c007c4 	movi	r3,31
    ab9c:	1a009116 	blt	r3,r8,ade4 <__adddf3+0x40c>
    aba0:	00c00804 	movi	r3,32
    aba4:	1a07c83a 	sub	r3,r3,r8
    aba8:	8a08d83a 	srl	r4,r17,r8
    abac:	88e2983a 	sll	r17,r17,r3
    abb0:	10c6983a 	sll	r3,r2,r3
    abb4:	1210d83a 	srl	r8,r2,r8
    abb8:	8804c03a 	cmpne	r2,r17,zero
    abbc:	1906b03a 	or	r3,r3,r4
    abc0:	18a2b03a 	or	r17,r3,r2
    abc4:	0021883a 	mov	r16,zero
    abc8:	003fa206 	br	aa54 <__alt_data_end+0xfffc1674>
    abcc:	1890b03a 	or	r8,r3,r2
    abd0:	40017d26 	beq	r8,zero,b1c8 <__adddf3+0x7f0>
    abd4:	1011883a 	mov	r8,r2
    abd8:	1823883a 	mov	r17,r3
    abdc:	888001cc 	andi	r2,r17,7
    abe0:	103f9e1e 	bne	r2,zero,aa5c <__alt_data_end+0xfffc167c>
    abe4:	4004977a 	slli	r2,r8,29
    abe8:	8822d0fa 	srli	r17,r17,3
    abec:	4010d0fa 	srli	r8,r8,3
    abf0:	9007883a 	mov	r3,r18
    abf4:	1444b03a 	or	r2,r2,r17
    abf8:	0101ffc4 	movi	r4,2047
    abfc:	81002426 	beq	r16,r4,ac90 <__adddf3+0x2b8>
    ac00:	8120703a 	and	r16,r16,r4
    ac04:	01000434 	movhi	r4,16
    ac08:	213fffc4 	addi	r4,r4,-1
    ac0c:	4110703a 	and	r8,r8,r4
    ac10:	003fa806 	br	aab4 <__alt_data_end+0xfffc16d4>
    ac14:	8089c83a 	sub	r4,r16,r2
    ac18:	01005e0e 	bge	zero,r4,ad94 <__adddf3+0x3bc>
    ac1c:	10002b26 	beq	r2,zero,accc <__adddf3+0x2f4>
    ac20:	0081ffc4 	movi	r2,2047
    ac24:	80bf8b26 	beq	r16,r2,aa54 <__alt_data_end+0xfffc1674>
    ac28:	4a402034 	orhi	r9,r9,128
    ac2c:	00800e04 	movi	r2,56
    ac30:	1100a40e 	bge	r2,r4,aec4 <__adddf3+0x4ec>
    ac34:	498cb03a 	or	r6,r9,r6
    ac38:	300ac03a 	cmpne	r5,r6,zero
    ac3c:	0013883a 	mov	r9,zero
    ac40:	2c4b883a 	add	r5,r5,r17
    ac44:	2c63803a 	cmpltu	r17,r5,r17
    ac48:	4a11883a 	add	r8,r9,r8
    ac4c:	8a11883a 	add	r8,r17,r8
    ac50:	2823883a 	mov	r17,r5
    ac54:	4080202c 	andhi	r2,r8,128
    ac58:	103fe026 	beq	r2,zero,abdc <__alt_data_end+0xfffc17fc>
    ac5c:	84000044 	addi	r16,r16,1
    ac60:	0081ffc4 	movi	r2,2047
    ac64:	8080d226 	beq	r16,r2,afb0 <__adddf3+0x5d8>
    ac68:	00bfe034 	movhi	r2,65408
    ac6c:	10bfffc4 	addi	r2,r2,-1
    ac70:	4090703a 	and	r8,r8,r2
    ac74:	880ad07a 	srli	r5,r17,1
    ac78:	400897fa 	slli	r4,r8,31
    ac7c:	88c0004c 	andi	r3,r17,1
    ac80:	28e2b03a 	or	r17,r5,r3
    ac84:	4010d07a 	srli	r8,r8,1
    ac88:	2462b03a 	or	r17,r4,r17
    ac8c:	003f7106 	br	aa54 <__alt_data_end+0xfffc1674>
    ac90:	4088b03a 	or	r4,r8,r2
    ac94:	20014526 	beq	r4,zero,b1ac <__adddf3+0x7d4>
    ac98:	01000434 	movhi	r4,16
    ac9c:	42000234 	orhi	r8,r8,8
    aca0:	213fffc4 	addi	r4,r4,-1
    aca4:	4110703a 	and	r8,r8,r4
    aca8:	003f8206 	br	aab4 <__alt_data_end+0xfffc16d4>
    acac:	18ffffc4 	addi	r3,r3,-1
    acb0:	1800491e 	bne	r3,zero,add8 <__adddf3+0x400>
    acb4:	898bc83a 	sub	r5,r17,r6
    acb8:	8963803a 	cmpltu	r17,r17,r5
    acbc:	4251c83a 	sub	r8,r8,r9
    acc0:	4451c83a 	sub	r8,r8,r17
    acc4:	2823883a 	mov	r17,r5
    acc8:	003f9f06 	br	ab48 <__alt_data_end+0xfffc1768>
    accc:	4984b03a 	or	r2,r9,r6
    acd0:	103f6026 	beq	r2,zero,aa54 <__alt_data_end+0xfffc1674>
    acd4:	213fffc4 	addi	r4,r4,-1
    acd8:	2000931e 	bne	r4,zero,af28 <__adddf3+0x550>
    acdc:	898d883a 	add	r6,r17,r6
    ace0:	3463803a 	cmpltu	r17,r6,r17
    ace4:	4251883a 	add	r8,r8,r9
    ace8:	8a11883a 	add	r8,r17,r8
    acec:	3023883a 	mov	r17,r6
    acf0:	003fd806 	br	ac54 <__alt_data_end+0xfffc1874>
    acf4:	1800541e 	bne	r3,zero,ae48 <__adddf3+0x470>
    acf8:	80800044 	addi	r2,r16,1
    acfc:	1081ffcc 	andi	r2,r2,2047
    ad00:	00c00044 	movi	r3,1
    ad04:	1880a00e 	bge	r3,r2,af88 <__adddf3+0x5b0>
    ad08:	8989c83a 	sub	r4,r17,r6
    ad0c:	8905803a 	cmpltu	r2,r17,r4
    ad10:	4267c83a 	sub	r19,r8,r9
    ad14:	98a7c83a 	sub	r19,r19,r2
    ad18:	9880202c 	andhi	r2,r19,128
    ad1c:	10006326 	beq	r2,zero,aeac <__adddf3+0x4d4>
    ad20:	3463c83a 	sub	r17,r6,r17
    ad24:	4a07c83a 	sub	r3,r9,r8
    ad28:	344d803a 	cmpltu	r6,r6,r17
    ad2c:	19a7c83a 	sub	r19,r3,r6
    ad30:	3825883a 	mov	r18,r7
    ad34:	983f8a1e 	bne	r19,zero,ab60 <__alt_data_end+0xfffc1780>
    ad38:	8809883a 	mov	r4,r17
    ad3c:	000d2140 	call	d214 <__clzsi2>
    ad40:	10800804 	addi	r2,r2,32
    ad44:	10fffe04 	addi	r3,r2,-8
    ad48:	010007c4 	movi	r4,31
    ad4c:	20ff890e 	bge	r4,r3,ab74 <__alt_data_end+0xfffc1794>
    ad50:	10bff604 	addi	r2,r2,-40
    ad54:	8884983a 	sll	r2,r17,r2
    ad58:	0023883a 	mov	r17,zero
    ad5c:	1c3f8c0e 	bge	r3,r16,ab90 <__alt_data_end+0xfffc17b0>
    ad60:	023fe034 	movhi	r8,65408
    ad64:	423fffc4 	addi	r8,r8,-1
    ad68:	80e1c83a 	sub	r16,r16,r3
    ad6c:	1210703a 	and	r8,r2,r8
    ad70:	003f3806 	br	aa54 <__alt_data_end+0xfffc1674>
    ad74:	9007883a 	mov	r3,r18
    ad78:	0011883a 	mov	r8,zero
    ad7c:	0005883a 	mov	r2,zero
    ad80:	003f4c06 	br	aab4 <__alt_data_end+0xfffc16d4>
    ad84:	498cb03a 	or	r6,r9,r6
    ad88:	300cc03a 	cmpne	r6,r6,zero
    ad8c:	0007883a 	mov	r3,zero
    ad90:	003f6806 	br	ab34 <__alt_data_end+0xfffc1754>
    ad94:	20009c1e 	bne	r4,zero,b008 <__adddf3+0x630>
    ad98:	80800044 	addi	r2,r16,1
    ad9c:	1141ffcc 	andi	r5,r2,2047
    ada0:	01000044 	movi	r4,1
    ada4:	2140670e 	bge	r4,r5,af44 <__adddf3+0x56c>
    ada8:	0101ffc4 	movi	r4,2047
    adac:	11007f26 	beq	r2,r4,afac <__adddf3+0x5d4>
    adb0:	898d883a 	add	r6,r17,r6
    adb4:	4247883a 	add	r3,r8,r9
    adb8:	3451803a 	cmpltu	r8,r6,r17
    adbc:	40d1883a 	add	r8,r8,r3
    adc0:	402297fa 	slli	r17,r8,31
    adc4:	300cd07a 	srli	r6,r6,1
    adc8:	4010d07a 	srli	r8,r8,1
    adcc:	1021883a 	mov	r16,r2
    add0:	89a2b03a 	or	r17,r17,r6
    add4:	003f1f06 	br	aa54 <__alt_data_end+0xfffc1674>
    add8:	0081ffc4 	movi	r2,2047
    addc:	80bf481e 	bne	r16,r2,ab00 <__alt_data_end+0xfffc1720>
    ade0:	003f1c06 	br	aa54 <__alt_data_end+0xfffc1674>
    ade4:	843ff844 	addi	r16,r16,-31
    ade8:	01000804 	movi	r4,32
    adec:	1406d83a 	srl	r3,r2,r16
    adf0:	41005026 	beq	r8,r4,af34 <__adddf3+0x55c>
    adf4:	01001004 	movi	r4,64
    adf8:	2211c83a 	sub	r8,r4,r8
    adfc:	1204983a 	sll	r2,r2,r8
    ae00:	88a2b03a 	or	r17,r17,r2
    ae04:	8822c03a 	cmpne	r17,r17,zero
    ae08:	1c62b03a 	or	r17,r3,r17
    ae0c:	0011883a 	mov	r8,zero
    ae10:	0021883a 	mov	r16,zero
    ae14:	003f7106 	br	abdc <__alt_data_end+0xfffc17fc>
    ae18:	193ff804 	addi	r4,r3,-32
    ae1c:	00800804 	movi	r2,32
    ae20:	4908d83a 	srl	r4,r9,r4
    ae24:	18804526 	beq	r3,r2,af3c <__adddf3+0x564>
    ae28:	00801004 	movi	r2,64
    ae2c:	10c5c83a 	sub	r2,r2,r3
    ae30:	4886983a 	sll	r3,r9,r2
    ae34:	198cb03a 	or	r6,r3,r6
    ae38:	300cc03a 	cmpne	r6,r6,zero
    ae3c:	218cb03a 	or	r6,r4,r6
    ae40:	0007883a 	mov	r3,zero
    ae44:	003f3b06 	br	ab34 <__alt_data_end+0xfffc1754>
    ae48:	80002a26 	beq	r16,zero,aef4 <__adddf3+0x51c>
    ae4c:	0101ffc4 	movi	r4,2047
    ae50:	11006826 	beq	r2,r4,aff4 <__adddf3+0x61c>
    ae54:	00c7c83a 	sub	r3,zero,r3
    ae58:	42002034 	orhi	r8,r8,128
    ae5c:	01000e04 	movi	r4,56
    ae60:	20c07c16 	blt	r4,r3,b054 <__adddf3+0x67c>
    ae64:	010007c4 	movi	r4,31
    ae68:	20c0da16 	blt	r4,r3,b1d4 <__adddf3+0x7fc>
    ae6c:	01000804 	movi	r4,32
    ae70:	20c9c83a 	sub	r4,r4,r3
    ae74:	4114983a 	sll	r10,r8,r4
    ae78:	88cad83a 	srl	r5,r17,r3
    ae7c:	8908983a 	sll	r4,r17,r4
    ae80:	40c6d83a 	srl	r3,r8,r3
    ae84:	5162b03a 	or	r17,r10,r5
    ae88:	2008c03a 	cmpne	r4,r4,zero
    ae8c:	8922b03a 	or	r17,r17,r4
    ae90:	3463c83a 	sub	r17,r6,r17
    ae94:	48c7c83a 	sub	r3,r9,r3
    ae98:	344d803a 	cmpltu	r6,r6,r17
    ae9c:	1991c83a 	sub	r8,r3,r6
    aea0:	1021883a 	mov	r16,r2
    aea4:	3825883a 	mov	r18,r7
    aea8:	003f2706 	br	ab48 <__alt_data_end+0xfffc1768>
    aeac:	24d0b03a 	or	r8,r4,r19
    aeb0:	40001b1e 	bne	r8,zero,af20 <__adddf3+0x548>
    aeb4:	0005883a 	mov	r2,zero
    aeb8:	0007883a 	mov	r3,zero
    aebc:	0021883a 	mov	r16,zero
    aec0:	003f4d06 	br	abf8 <__alt_data_end+0xfffc1818>
    aec4:	008007c4 	movi	r2,31
    aec8:	11003c16 	blt	r2,r4,afbc <__adddf3+0x5e4>
    aecc:	00800804 	movi	r2,32
    aed0:	1105c83a 	sub	r2,r2,r4
    aed4:	488e983a 	sll	r7,r9,r2
    aed8:	310ad83a 	srl	r5,r6,r4
    aedc:	3084983a 	sll	r2,r6,r2
    aee0:	4912d83a 	srl	r9,r9,r4
    aee4:	394ab03a 	or	r5,r7,r5
    aee8:	1004c03a 	cmpne	r2,r2,zero
    aeec:	288ab03a 	or	r5,r5,r2
    aef0:	003f5306 	br	ac40 <__alt_data_end+0xfffc1860>
    aef4:	4448b03a 	or	r4,r8,r17
    aef8:	20003e26 	beq	r4,zero,aff4 <__adddf3+0x61c>
    aefc:	00c6303a 	nor	r3,zero,r3
    af00:	18003a1e 	bne	r3,zero,afec <__adddf3+0x614>
    af04:	3463c83a 	sub	r17,r6,r17
    af08:	4a07c83a 	sub	r3,r9,r8
    af0c:	344d803a 	cmpltu	r6,r6,r17
    af10:	1991c83a 	sub	r8,r3,r6
    af14:	1021883a 	mov	r16,r2
    af18:	3825883a 	mov	r18,r7
    af1c:	003f0a06 	br	ab48 <__alt_data_end+0xfffc1768>
    af20:	2023883a 	mov	r17,r4
    af24:	003f0d06 	br	ab5c <__alt_data_end+0xfffc177c>
    af28:	0081ffc4 	movi	r2,2047
    af2c:	80bf3f1e 	bne	r16,r2,ac2c <__alt_data_end+0xfffc184c>
    af30:	003ec806 	br	aa54 <__alt_data_end+0xfffc1674>
    af34:	0005883a 	mov	r2,zero
    af38:	003fb106 	br	ae00 <__alt_data_end+0xfffc1a20>
    af3c:	0007883a 	mov	r3,zero
    af40:	003fbc06 	br	ae34 <__alt_data_end+0xfffc1a54>
    af44:	4444b03a 	or	r2,r8,r17
    af48:	8000871e 	bne	r16,zero,b168 <__adddf3+0x790>
    af4c:	1000ba26 	beq	r2,zero,b238 <__adddf3+0x860>
    af50:	4984b03a 	or	r2,r9,r6
    af54:	103ebf26 	beq	r2,zero,aa54 <__alt_data_end+0xfffc1674>
    af58:	8985883a 	add	r2,r17,r6
    af5c:	4247883a 	add	r3,r8,r9
    af60:	1451803a 	cmpltu	r8,r2,r17
    af64:	40d1883a 	add	r8,r8,r3
    af68:	40c0202c 	andhi	r3,r8,128
    af6c:	1023883a 	mov	r17,r2
    af70:	183f1a26 	beq	r3,zero,abdc <__alt_data_end+0xfffc17fc>
    af74:	00bfe034 	movhi	r2,65408
    af78:	10bfffc4 	addi	r2,r2,-1
    af7c:	2021883a 	mov	r16,r4
    af80:	4090703a 	and	r8,r8,r2
    af84:	003eb306 	br	aa54 <__alt_data_end+0xfffc1674>
    af88:	4444b03a 	or	r2,r8,r17
    af8c:	8000291e 	bne	r16,zero,b034 <__adddf3+0x65c>
    af90:	10004b1e 	bne	r2,zero,b0c0 <__adddf3+0x6e8>
    af94:	4990b03a 	or	r8,r9,r6
    af98:	40008b26 	beq	r8,zero,b1c8 <__adddf3+0x7f0>
    af9c:	4811883a 	mov	r8,r9
    afa0:	3023883a 	mov	r17,r6
    afa4:	3825883a 	mov	r18,r7
    afa8:	003eaa06 	br	aa54 <__alt_data_end+0xfffc1674>
    afac:	1021883a 	mov	r16,r2
    afb0:	0011883a 	mov	r8,zero
    afb4:	0005883a 	mov	r2,zero
    afb8:	003f0f06 	br	abf8 <__alt_data_end+0xfffc1818>
    afbc:	217ff804 	addi	r5,r4,-32
    afc0:	00800804 	movi	r2,32
    afc4:	494ad83a 	srl	r5,r9,r5
    afc8:	20807d26 	beq	r4,r2,b1c0 <__adddf3+0x7e8>
    afcc:	00801004 	movi	r2,64
    afd0:	1109c83a 	sub	r4,r2,r4
    afd4:	4912983a 	sll	r9,r9,r4
    afd8:	498cb03a 	or	r6,r9,r6
    afdc:	300cc03a 	cmpne	r6,r6,zero
    afe0:	298ab03a 	or	r5,r5,r6
    afe4:	0013883a 	mov	r9,zero
    afe8:	003f1506 	br	ac40 <__alt_data_end+0xfffc1860>
    afec:	0101ffc4 	movi	r4,2047
    aff0:	113f9a1e 	bne	r2,r4,ae5c <__alt_data_end+0xfffc1a7c>
    aff4:	4811883a 	mov	r8,r9
    aff8:	3023883a 	mov	r17,r6
    affc:	1021883a 	mov	r16,r2
    b000:	3825883a 	mov	r18,r7
    b004:	003e9306 	br	aa54 <__alt_data_end+0xfffc1674>
    b008:	8000161e 	bne	r16,zero,b064 <__adddf3+0x68c>
    b00c:	444ab03a 	or	r5,r8,r17
    b010:	28005126 	beq	r5,zero,b158 <__adddf3+0x780>
    b014:	0108303a 	nor	r4,zero,r4
    b018:	20004d1e 	bne	r4,zero,b150 <__adddf3+0x778>
    b01c:	89a3883a 	add	r17,r17,r6
    b020:	4253883a 	add	r9,r8,r9
    b024:	898d803a 	cmpltu	r6,r17,r6
    b028:	3251883a 	add	r8,r6,r9
    b02c:	1021883a 	mov	r16,r2
    b030:	003f0806 	br	ac54 <__alt_data_end+0xfffc1874>
    b034:	1000301e 	bne	r2,zero,b0f8 <__adddf3+0x720>
    b038:	4984b03a 	or	r2,r9,r6
    b03c:	10007126 	beq	r2,zero,b204 <__adddf3+0x82c>
    b040:	4811883a 	mov	r8,r9
    b044:	3023883a 	mov	r17,r6
    b048:	3825883a 	mov	r18,r7
    b04c:	0401ffc4 	movi	r16,2047
    b050:	003e8006 	br	aa54 <__alt_data_end+0xfffc1674>
    b054:	4462b03a 	or	r17,r8,r17
    b058:	8822c03a 	cmpne	r17,r17,zero
    b05c:	0007883a 	mov	r3,zero
    b060:	003f8b06 	br	ae90 <__alt_data_end+0xfffc1ab0>
    b064:	0141ffc4 	movi	r5,2047
    b068:	11403b26 	beq	r2,r5,b158 <__adddf3+0x780>
    b06c:	0109c83a 	sub	r4,zero,r4
    b070:	42002034 	orhi	r8,r8,128
    b074:	01400e04 	movi	r5,56
    b078:	29006716 	blt	r5,r4,b218 <__adddf3+0x840>
    b07c:	014007c4 	movi	r5,31
    b080:	29007016 	blt	r5,r4,b244 <__adddf3+0x86c>
    b084:	01400804 	movi	r5,32
    b088:	290bc83a 	sub	r5,r5,r4
    b08c:	4154983a 	sll	r10,r8,r5
    b090:	890ed83a 	srl	r7,r17,r4
    b094:	894a983a 	sll	r5,r17,r5
    b098:	4108d83a 	srl	r4,r8,r4
    b09c:	51e2b03a 	or	r17,r10,r7
    b0a0:	280ac03a 	cmpne	r5,r5,zero
    b0a4:	8962b03a 	or	r17,r17,r5
    b0a8:	89a3883a 	add	r17,r17,r6
    b0ac:	2253883a 	add	r9,r4,r9
    b0b0:	898d803a 	cmpltu	r6,r17,r6
    b0b4:	3251883a 	add	r8,r6,r9
    b0b8:	1021883a 	mov	r16,r2
    b0bc:	003ee506 	br	ac54 <__alt_data_end+0xfffc1874>
    b0c0:	4984b03a 	or	r2,r9,r6
    b0c4:	103e6326 	beq	r2,zero,aa54 <__alt_data_end+0xfffc1674>
    b0c8:	8987c83a 	sub	r3,r17,r6
    b0cc:	88c9803a 	cmpltu	r4,r17,r3
    b0d0:	4245c83a 	sub	r2,r8,r9
    b0d4:	1105c83a 	sub	r2,r2,r4
    b0d8:	1100202c 	andhi	r4,r2,128
    b0dc:	203ebb26 	beq	r4,zero,abcc <__alt_data_end+0xfffc17ec>
    b0e0:	3463c83a 	sub	r17,r6,r17
    b0e4:	4a07c83a 	sub	r3,r9,r8
    b0e8:	344d803a 	cmpltu	r6,r6,r17
    b0ec:	1991c83a 	sub	r8,r3,r6
    b0f0:	3825883a 	mov	r18,r7
    b0f4:	003e5706 	br	aa54 <__alt_data_end+0xfffc1674>
    b0f8:	4984b03a 	or	r2,r9,r6
    b0fc:	10002e26 	beq	r2,zero,b1b8 <__adddf3+0x7e0>
    b100:	4004d0fa 	srli	r2,r8,3
    b104:	8822d0fa 	srli	r17,r17,3
    b108:	4010977a 	slli	r8,r8,29
    b10c:	10c0022c 	andhi	r3,r2,8
    b110:	4462b03a 	or	r17,r8,r17
    b114:	18000826 	beq	r3,zero,b138 <__adddf3+0x760>
    b118:	4808d0fa 	srli	r4,r9,3
    b11c:	20c0022c 	andhi	r3,r4,8
    b120:	1800051e 	bne	r3,zero,b138 <__adddf3+0x760>
    b124:	300cd0fa 	srli	r6,r6,3
    b128:	4806977a 	slli	r3,r9,29
    b12c:	2005883a 	mov	r2,r4
    b130:	3825883a 	mov	r18,r7
    b134:	19a2b03a 	or	r17,r3,r6
    b138:	8810d77a 	srli	r8,r17,29
    b13c:	100490fa 	slli	r2,r2,3
    b140:	882290fa 	slli	r17,r17,3
    b144:	0401ffc4 	movi	r16,2047
    b148:	4090b03a 	or	r8,r8,r2
    b14c:	003e4106 	br	aa54 <__alt_data_end+0xfffc1674>
    b150:	0141ffc4 	movi	r5,2047
    b154:	117fc71e 	bne	r2,r5,b074 <__alt_data_end+0xfffc1c94>
    b158:	4811883a 	mov	r8,r9
    b15c:	3023883a 	mov	r17,r6
    b160:	1021883a 	mov	r16,r2
    b164:	003e3b06 	br	aa54 <__alt_data_end+0xfffc1674>
    b168:	10002f26 	beq	r2,zero,b228 <__adddf3+0x850>
    b16c:	4984b03a 	or	r2,r9,r6
    b170:	10001126 	beq	r2,zero,b1b8 <__adddf3+0x7e0>
    b174:	4004d0fa 	srli	r2,r8,3
    b178:	8822d0fa 	srli	r17,r17,3
    b17c:	4010977a 	slli	r8,r8,29
    b180:	10c0022c 	andhi	r3,r2,8
    b184:	4462b03a 	or	r17,r8,r17
    b188:	183feb26 	beq	r3,zero,b138 <__alt_data_end+0xfffc1d58>
    b18c:	4808d0fa 	srli	r4,r9,3
    b190:	20c0022c 	andhi	r3,r4,8
    b194:	183fe81e 	bne	r3,zero,b138 <__alt_data_end+0xfffc1d58>
    b198:	300cd0fa 	srli	r6,r6,3
    b19c:	4806977a 	slli	r3,r9,29
    b1a0:	2005883a 	mov	r2,r4
    b1a4:	19a2b03a 	or	r17,r3,r6
    b1a8:	003fe306 	br	b138 <__alt_data_end+0xfffc1d58>
    b1ac:	0011883a 	mov	r8,zero
    b1b0:	0005883a 	mov	r2,zero
    b1b4:	003e3f06 	br	aab4 <__alt_data_end+0xfffc16d4>
    b1b8:	0401ffc4 	movi	r16,2047
    b1bc:	003e2506 	br	aa54 <__alt_data_end+0xfffc1674>
    b1c0:	0013883a 	mov	r9,zero
    b1c4:	003f8406 	br	afd8 <__alt_data_end+0xfffc1bf8>
    b1c8:	0005883a 	mov	r2,zero
    b1cc:	0007883a 	mov	r3,zero
    b1d0:	003e8906 	br	abf8 <__alt_data_end+0xfffc1818>
    b1d4:	197ff804 	addi	r5,r3,-32
    b1d8:	01000804 	movi	r4,32
    b1dc:	414ad83a 	srl	r5,r8,r5
    b1e0:	19002426 	beq	r3,r4,b274 <__adddf3+0x89c>
    b1e4:	01001004 	movi	r4,64
    b1e8:	20c7c83a 	sub	r3,r4,r3
    b1ec:	40c6983a 	sll	r3,r8,r3
    b1f0:	1c46b03a 	or	r3,r3,r17
    b1f4:	1806c03a 	cmpne	r3,r3,zero
    b1f8:	28e2b03a 	or	r17,r5,r3
    b1fc:	0007883a 	mov	r3,zero
    b200:	003f2306 	br	ae90 <__alt_data_end+0xfffc1ab0>
    b204:	0007883a 	mov	r3,zero
    b208:	5811883a 	mov	r8,r11
    b20c:	00bfffc4 	movi	r2,-1
    b210:	0401ffc4 	movi	r16,2047
    b214:	003e7806 	br	abf8 <__alt_data_end+0xfffc1818>
    b218:	4462b03a 	or	r17,r8,r17
    b21c:	8822c03a 	cmpne	r17,r17,zero
    b220:	0009883a 	mov	r4,zero
    b224:	003fa006 	br	b0a8 <__alt_data_end+0xfffc1cc8>
    b228:	4811883a 	mov	r8,r9
    b22c:	3023883a 	mov	r17,r6
    b230:	0401ffc4 	movi	r16,2047
    b234:	003e0706 	br	aa54 <__alt_data_end+0xfffc1674>
    b238:	4811883a 	mov	r8,r9
    b23c:	3023883a 	mov	r17,r6
    b240:	003e0406 	br	aa54 <__alt_data_end+0xfffc1674>
    b244:	21fff804 	addi	r7,r4,-32
    b248:	01400804 	movi	r5,32
    b24c:	41ced83a 	srl	r7,r8,r7
    b250:	21400a26 	beq	r4,r5,b27c <__adddf3+0x8a4>
    b254:	01401004 	movi	r5,64
    b258:	2909c83a 	sub	r4,r5,r4
    b25c:	4108983a 	sll	r4,r8,r4
    b260:	2448b03a 	or	r4,r4,r17
    b264:	2008c03a 	cmpne	r4,r4,zero
    b268:	3922b03a 	or	r17,r7,r4
    b26c:	0009883a 	mov	r4,zero
    b270:	003f8d06 	br	b0a8 <__alt_data_end+0xfffc1cc8>
    b274:	0007883a 	mov	r3,zero
    b278:	003fdd06 	br	b1f0 <__alt_data_end+0xfffc1e10>
    b27c:	0009883a 	mov	r4,zero
    b280:	003ff706 	br	b260 <__alt_data_end+0xfffc1e80>

0000b284 <__divdf3>:
    b284:	defff004 	addi	sp,sp,-64
    b288:	dc800815 	stw	r18,32(sp)
    b28c:	2824d53a 	srli	r18,r5,20
    b290:	dd800c15 	stw	r22,48(sp)
    b294:	282cd7fa 	srli	r22,r5,31
    b298:	dc000615 	stw	r16,24(sp)
    b29c:	04000434 	movhi	r16,16
    b2a0:	843fffc4 	addi	r16,r16,-1
    b2a4:	dfc00f15 	stw	ra,60(sp)
    b2a8:	df000e15 	stw	fp,56(sp)
    b2ac:	ddc00d15 	stw	r23,52(sp)
    b2b0:	dd400b15 	stw	r21,44(sp)
    b2b4:	dd000a15 	stw	r20,40(sp)
    b2b8:	dcc00915 	stw	r19,36(sp)
    b2bc:	dc400715 	stw	r17,28(sp)
    b2c0:	9481ffcc 	andi	r18,r18,2047
    b2c4:	2c20703a 	and	r16,r5,r16
    b2c8:	b2003fcc 	andi	r8,r22,255
    b2cc:	90006126 	beq	r18,zero,b454 <__divdf3+0x1d0>
    b2d0:	0081ffc4 	movi	r2,2047
    b2d4:	202b883a 	mov	r21,r4
    b2d8:	90803726 	beq	r18,r2,b3b8 <__divdf3+0x134>
    b2dc:	80c00434 	orhi	r3,r16,16
    b2e0:	180690fa 	slli	r3,r3,3
    b2e4:	2020d77a 	srli	r16,r4,29
    b2e8:	202a90fa 	slli	r21,r4,3
    b2ec:	94bf0044 	addi	r18,r18,-1023
    b2f0:	80e0b03a 	or	r16,r16,r3
    b2f4:	0013883a 	mov	r9,zero
    b2f8:	000b883a 	mov	r5,zero
    b2fc:	3806d53a 	srli	r3,r7,20
    b300:	382ed7fa 	srli	r23,r7,31
    b304:	04400434 	movhi	r17,16
    b308:	8c7fffc4 	addi	r17,r17,-1
    b30c:	18c1ffcc 	andi	r3,r3,2047
    b310:	3029883a 	mov	r20,r6
    b314:	3c62703a 	and	r17,r7,r17
    b318:	bf003fcc 	andi	fp,r23,255
    b31c:	18006e26 	beq	r3,zero,b4d8 <__divdf3+0x254>
    b320:	0081ffc4 	movi	r2,2047
    b324:	18806626 	beq	r3,r2,b4c0 <__divdf3+0x23c>
    b328:	89000434 	orhi	r4,r17,16
    b32c:	200890fa 	slli	r4,r4,3
    b330:	3022d77a 	srli	r17,r6,29
    b334:	302890fa 	slli	r20,r6,3
    b338:	18ff0044 	addi	r3,r3,-1023
    b33c:	8922b03a 	or	r17,r17,r4
    b340:	000f883a 	mov	r7,zero
    b344:	b5e6f03a 	xor	r19,r22,r23
    b348:	3a4cb03a 	or	r6,r7,r9
    b34c:	008003c4 	movi	r2,15
    b350:	9809883a 	mov	r4,r19
    b354:	90c7c83a 	sub	r3,r18,r3
    b358:	9cc03fcc 	andi	r19,r19,255
    b35c:	11809636 	bltu	r2,r6,b5b8 <__divdf3+0x334>
    b360:	300c90ba 	slli	r6,r6,2
    b364:	00800074 	movhi	r2,1
    b368:	10acde04 	addi	r2,r2,-19592
    b36c:	308d883a 	add	r6,r6,r2
    b370:	30800017 	ldw	r2,0(r6)
    b374:	1000683a 	jmp	r2
    b378:	0000b5b8 	rdprs	zero,zero,726
    b37c:	0000b3f0 	cmpltui	zero,zero,719
    b380:	0000b5a8 	cmpgeui	zero,zero,726
    b384:	0000b3e4 	muli	zero,zero,719
    b388:	0000b5a8 	cmpgeui	zero,zero,726
    b38c:	0000b57c 	xorhi	zero,zero,725
    b390:	0000b5a8 	cmpgeui	zero,zero,726
    b394:	0000b3e4 	muli	zero,zero,719
    b398:	0000b3f0 	cmpltui	zero,zero,719
    b39c:	0000b3f0 	cmpltui	zero,zero,719
    b3a0:	0000b57c 	xorhi	zero,zero,725
    b3a4:	0000b3e4 	muli	zero,zero,719
    b3a8:	0000b3d4 	movui	zero,719
    b3ac:	0000b3d4 	movui	zero,719
    b3b0:	0000b3d4 	movui	zero,719
    b3b4:	0000b940 	call	b94 <___vfprintf_internal_r+0x680>
    b3b8:	2404b03a 	or	r2,r4,r16
    b3bc:	10006c1e 	bne	r2,zero,b570 <__divdf3+0x2ec>
    b3c0:	02400204 	movi	r9,8
    b3c4:	0021883a 	mov	r16,zero
    b3c8:	002b883a 	mov	r21,zero
    b3cc:	01400084 	movi	r5,2
    b3d0:	003fca06 	br	b2fc <__alt_data_end+0xfffc1f1c>
    b3d4:	8023883a 	mov	r17,r16
    b3d8:	a829883a 	mov	r20,r21
    b3dc:	4039883a 	mov	fp,r8
    b3e0:	280f883a 	mov	r7,r5
    b3e4:	00800084 	movi	r2,2
    b3e8:	3881601e 	bne	r7,r2,b96c <__divdf3+0x6e8>
    b3ec:	e027883a 	mov	r19,fp
    b3f0:	9900004c 	andi	r4,r19,1
    b3f4:	0081ffc4 	movi	r2,2047
    b3f8:	0021883a 	mov	r16,zero
    b3fc:	002b883a 	mov	r21,zero
    b400:	1004953a 	slli	r2,r2,20
    b404:	20c03fcc 	andi	r3,r4,255
    b408:	01400434 	movhi	r5,16
    b40c:	297fffc4 	addi	r5,r5,-1
    b410:	180697fa 	slli	r3,r3,31
    b414:	8160703a 	and	r16,r16,r5
    b418:	80a0b03a 	or	r16,r16,r2
    b41c:	80c6b03a 	or	r3,r16,r3
    b420:	a805883a 	mov	r2,r21
    b424:	dfc00f17 	ldw	ra,60(sp)
    b428:	df000e17 	ldw	fp,56(sp)
    b42c:	ddc00d17 	ldw	r23,52(sp)
    b430:	dd800c17 	ldw	r22,48(sp)
    b434:	dd400b17 	ldw	r21,44(sp)
    b438:	dd000a17 	ldw	r20,40(sp)
    b43c:	dcc00917 	ldw	r19,36(sp)
    b440:	dc800817 	ldw	r18,32(sp)
    b444:	dc400717 	ldw	r17,28(sp)
    b448:	dc000617 	ldw	r16,24(sp)
    b44c:	dec01004 	addi	sp,sp,64
    b450:	f800283a 	ret
    b454:	2404b03a 	or	r2,r4,r16
    b458:	2023883a 	mov	r17,r4
    b45c:	10003f26 	beq	r2,zero,b55c <__divdf3+0x2d8>
    b460:	80015e26 	beq	r16,zero,b9dc <__divdf3+0x758>
    b464:	8009883a 	mov	r4,r16
    b468:	d9800215 	stw	r6,8(sp)
    b46c:	d9c00515 	stw	r7,20(sp)
    b470:	da000415 	stw	r8,16(sp)
    b474:	000d2140 	call	d214 <__clzsi2>
    b478:	d9800217 	ldw	r6,8(sp)
    b47c:	d9c00517 	ldw	r7,20(sp)
    b480:	da000417 	ldw	r8,16(sp)
    b484:	10fffd44 	addi	r3,r2,-11
    b488:	01000704 	movi	r4,28
    b48c:	20c14f16 	blt	r4,r3,b9cc <__divdf3+0x748>
    b490:	01000744 	movi	r4,29
    b494:	157ffe04 	addi	r21,r2,-8
    b498:	20c9c83a 	sub	r4,r4,r3
    b49c:	8560983a 	sll	r16,r16,r21
    b4a0:	8908d83a 	srl	r4,r17,r4
    b4a4:	8d6a983a 	sll	r21,r17,r21
    b4a8:	2420b03a 	or	r16,r4,r16
    b4ac:	04bf0084 	movi	r18,-1022
    b4b0:	90e5c83a 	sub	r18,r18,r3
    b4b4:	0013883a 	mov	r9,zero
    b4b8:	000b883a 	mov	r5,zero
    b4bc:	003f8f06 	br	b2fc <__alt_data_end+0xfffc1f1c>
    b4c0:	3444b03a 	or	r2,r6,r17
    b4c4:	1000231e 	bne	r2,zero,b554 <__divdf3+0x2d0>
    b4c8:	0023883a 	mov	r17,zero
    b4cc:	0029883a 	mov	r20,zero
    b4d0:	01c00084 	movi	r7,2
    b4d4:	003f9b06 	br	b344 <__alt_data_end+0xfffc1f64>
    b4d8:	3444b03a 	or	r2,r6,r17
    b4dc:	10001926 	beq	r2,zero,b544 <__divdf3+0x2c0>
    b4e0:	88014b26 	beq	r17,zero,ba10 <__divdf3+0x78c>
    b4e4:	8809883a 	mov	r4,r17
    b4e8:	d9400115 	stw	r5,4(sp)
    b4ec:	d9800215 	stw	r6,8(sp)
    b4f0:	da000415 	stw	r8,16(sp)
    b4f4:	da400315 	stw	r9,12(sp)
    b4f8:	000d2140 	call	d214 <__clzsi2>
    b4fc:	d9400117 	ldw	r5,4(sp)
    b500:	d9800217 	ldw	r6,8(sp)
    b504:	da000417 	ldw	r8,16(sp)
    b508:	da400317 	ldw	r9,12(sp)
    b50c:	10fffd44 	addi	r3,r2,-11
    b510:	01000704 	movi	r4,28
    b514:	20c13a16 	blt	r4,r3,ba00 <__divdf3+0x77c>
    b518:	01000744 	movi	r4,29
    b51c:	153ffe04 	addi	r20,r2,-8
    b520:	20c9c83a 	sub	r4,r4,r3
    b524:	8d22983a 	sll	r17,r17,r20
    b528:	3108d83a 	srl	r4,r6,r4
    b52c:	3528983a 	sll	r20,r6,r20
    b530:	2462b03a 	or	r17,r4,r17
    b534:	00bf0084 	movi	r2,-1022
    b538:	10c7c83a 	sub	r3,r2,r3
    b53c:	000f883a 	mov	r7,zero
    b540:	003f8006 	br	b344 <__alt_data_end+0xfffc1f64>
    b544:	0023883a 	mov	r17,zero
    b548:	0029883a 	mov	r20,zero
    b54c:	01c00044 	movi	r7,1
    b550:	003f7c06 	br	b344 <__alt_data_end+0xfffc1f64>
    b554:	01c000c4 	movi	r7,3
    b558:	003f7a06 	br	b344 <__alt_data_end+0xfffc1f64>
    b55c:	02400104 	movi	r9,4
    b560:	0021883a 	mov	r16,zero
    b564:	002b883a 	mov	r21,zero
    b568:	01400044 	movi	r5,1
    b56c:	003f6306 	br	b2fc <__alt_data_end+0xfffc1f1c>
    b570:	02400304 	movi	r9,12
    b574:	014000c4 	movi	r5,3
    b578:	003f6006 	br	b2fc <__alt_data_end+0xfffc1f1c>
    b57c:	04000434 	movhi	r16,16
    b580:	0009883a 	mov	r4,zero
    b584:	843fffc4 	addi	r16,r16,-1
    b588:	057fffc4 	movi	r21,-1
    b58c:	0081ffc4 	movi	r2,2047
    b590:	003f9b06 	br	b400 <__alt_data_end+0xfffc2020>
    b594:	00c00044 	movi	r3,1
    b598:	1887c83a 	sub	r3,r3,r2
    b59c:	01000e04 	movi	r4,56
    b5a0:	20c1530e 	bge	r4,r3,baf0 <__divdf3+0x86c>
    b5a4:	9900004c 	andi	r4,r19,1
    b5a8:	0005883a 	mov	r2,zero
    b5ac:	0021883a 	mov	r16,zero
    b5b0:	002b883a 	mov	r21,zero
    b5b4:	003f9206 	br	b400 <__alt_data_end+0xfffc2020>
    b5b8:	8c012e36 	bltu	r17,r16,ba74 <__divdf3+0x7f0>
    b5bc:	84412c26 	beq	r16,r17,ba70 <__divdf3+0x7ec>
    b5c0:	a82f883a 	mov	r23,r21
    b5c4:	18ffffc4 	addi	r3,r3,-1
    b5c8:	002b883a 	mov	r21,zero
    b5cc:	a00ad63a 	srli	r5,r20,24
    b5d0:	8822923a 	slli	r17,r17,8
    b5d4:	a028923a 	slli	r20,r20,8
    b5d8:	8009883a 	mov	r4,r16
    b5dc:	896cb03a 	or	r22,r17,r5
    b5e0:	dd000015 	stw	r20,0(sp)
    b5e4:	b028d43a 	srli	r20,r22,16
    b5e8:	d8c00215 	stw	r3,8(sp)
    b5ec:	b4bfffcc 	andi	r18,r22,65535
    b5f0:	a00b883a 	mov	r5,r20
    b5f4:	000a8f40 	call	a8f4 <__udivsi3>
    b5f8:	100b883a 	mov	r5,r2
    b5fc:	9009883a 	mov	r4,r18
    b600:	1023883a 	mov	r17,r2
    b604:	000a9b00 	call	a9b0 <__mulsi3>
    b608:	8009883a 	mov	r4,r16
    b60c:	a00b883a 	mov	r5,r20
    b610:	1039883a 	mov	fp,r2
    b614:	000a9580 	call	a958 <__umodsi3>
    b618:	1004943a 	slli	r2,r2,16
    b61c:	b808d43a 	srli	r4,r23,16
    b620:	d8c00217 	ldw	r3,8(sp)
    b624:	2084b03a 	or	r2,r4,r2
    b628:	1700062e 	bgeu	r2,fp,b644 <__divdf3+0x3c0>
    b62c:	1585883a 	add	r2,r2,r22
    b630:	893fffc4 	addi	r4,r17,-1
    b634:	15811d36 	bltu	r2,r22,baac <__divdf3+0x828>
    b638:	17011c2e 	bgeu	r2,fp,baac <__divdf3+0x828>
    b63c:	8c7fff84 	addi	r17,r17,-2
    b640:	1585883a 	add	r2,r2,r22
    b644:	1739c83a 	sub	fp,r2,fp
    b648:	a00b883a 	mov	r5,r20
    b64c:	e009883a 	mov	r4,fp
    b650:	d8c00215 	stw	r3,8(sp)
    b654:	000a8f40 	call	a8f4 <__udivsi3>
    b658:	100b883a 	mov	r5,r2
    b65c:	9009883a 	mov	r4,r18
    b660:	1021883a 	mov	r16,r2
    b664:	000a9b00 	call	a9b0 <__mulsi3>
    b668:	a00b883a 	mov	r5,r20
    b66c:	e009883a 	mov	r4,fp
    b670:	d8800415 	stw	r2,16(sp)
    b674:	000a9580 	call	a958 <__umodsi3>
    b678:	1004943a 	slli	r2,r2,16
    b67c:	da000417 	ldw	r8,16(sp)
    b680:	bdffffcc 	andi	r23,r23,65535
    b684:	b884b03a 	or	r2,r23,r2
    b688:	d8c00217 	ldw	r3,8(sp)
    b68c:	1200062e 	bgeu	r2,r8,b6a8 <__divdf3+0x424>
    b690:	1585883a 	add	r2,r2,r22
    b694:	813fffc4 	addi	r4,r16,-1
    b698:	15810236 	bltu	r2,r22,baa4 <__divdf3+0x820>
    b69c:	1201012e 	bgeu	r2,r8,baa4 <__divdf3+0x820>
    b6a0:	843fff84 	addi	r16,r16,-2
    b6a4:	1585883a 	add	r2,r2,r22
    b6a8:	8822943a 	slli	r17,r17,16
    b6ac:	d9800017 	ldw	r6,0(sp)
    b6b0:	1211c83a 	sub	r8,r2,r8
    b6b4:	8c22b03a 	or	r17,r17,r16
    b6b8:	373fffcc 	andi	fp,r6,65535
    b6bc:	8abfffcc 	andi	r10,r17,65535
    b6c0:	8820d43a 	srli	r16,r17,16
    b6c4:	5009883a 	mov	r4,r10
    b6c8:	e00b883a 	mov	r5,fp
    b6cc:	302ed43a 	srli	r23,r6,16
    b6d0:	d8c00215 	stw	r3,8(sp)
    b6d4:	da000415 	stw	r8,16(sp)
    b6d8:	da800115 	stw	r10,4(sp)
    b6dc:	000a9b00 	call	a9b0 <__mulsi3>
    b6e0:	800b883a 	mov	r5,r16
    b6e4:	e009883a 	mov	r4,fp
    b6e8:	d8800515 	stw	r2,20(sp)
    b6ec:	000a9b00 	call	a9b0 <__mulsi3>
    b6f0:	8009883a 	mov	r4,r16
    b6f4:	b80b883a 	mov	r5,r23
    b6f8:	d8800315 	stw	r2,12(sp)
    b6fc:	000a9b00 	call	a9b0 <__mulsi3>
    b700:	da800117 	ldw	r10,4(sp)
    b704:	b80b883a 	mov	r5,r23
    b708:	1021883a 	mov	r16,r2
    b70c:	5009883a 	mov	r4,r10
    b710:	000a9b00 	call	a9b0 <__mulsi3>
    b714:	d9c00517 	ldw	r7,20(sp)
    b718:	da400317 	ldw	r9,12(sp)
    b71c:	d8c00217 	ldw	r3,8(sp)
    b720:	3808d43a 	srli	r4,r7,16
    b724:	1245883a 	add	r2,r2,r9
    b728:	da000417 	ldw	r8,16(sp)
    b72c:	2085883a 	add	r2,r4,r2
    b730:	1240022e 	bgeu	r2,r9,b73c <__divdf3+0x4b8>
    b734:	01000074 	movhi	r4,1
    b738:	8121883a 	add	r16,r16,r4
    b73c:	1008d43a 	srli	r4,r2,16
    b740:	1004943a 	slli	r2,r2,16
    b744:	39ffffcc 	andi	r7,r7,65535
    b748:	2409883a 	add	r4,r4,r16
    b74c:	11c5883a 	add	r2,r2,r7
    b750:	4100bb36 	bltu	r8,r4,ba40 <__divdf3+0x7bc>
    b754:	4100d726 	beq	r8,r4,bab4 <__divdf3+0x830>
    b758:	4109c83a 	sub	r4,r8,r4
    b75c:	a8a1c83a 	sub	r16,r21,r2
    b760:	ac2b803a 	cmpltu	r21,r21,r16
    b764:	256bc83a 	sub	r21,r4,r21
    b768:	b540d926 	beq	r22,r21,bad0 <__divdf3+0x84c>
    b76c:	a00b883a 	mov	r5,r20
    b770:	a809883a 	mov	r4,r21
    b774:	d8c00215 	stw	r3,8(sp)
    b778:	000a8f40 	call	a8f4 <__udivsi3>
    b77c:	100b883a 	mov	r5,r2
    b780:	9009883a 	mov	r4,r18
    b784:	d8800515 	stw	r2,20(sp)
    b788:	000a9b00 	call	a9b0 <__mulsi3>
    b78c:	a809883a 	mov	r4,r21
    b790:	a00b883a 	mov	r5,r20
    b794:	d8800415 	stw	r2,16(sp)
    b798:	000a9580 	call	a958 <__umodsi3>
    b79c:	1004943a 	slli	r2,r2,16
    b7a0:	8008d43a 	srli	r4,r16,16
    b7a4:	da000417 	ldw	r8,16(sp)
    b7a8:	d8c00217 	ldw	r3,8(sp)
    b7ac:	2084b03a 	or	r2,r4,r2
    b7b0:	d9c00517 	ldw	r7,20(sp)
    b7b4:	1200062e 	bgeu	r2,r8,b7d0 <__divdf3+0x54c>
    b7b8:	1585883a 	add	r2,r2,r22
    b7bc:	393fffc4 	addi	r4,r7,-1
    b7c0:	1580c536 	bltu	r2,r22,bad8 <__divdf3+0x854>
    b7c4:	1200c42e 	bgeu	r2,r8,bad8 <__divdf3+0x854>
    b7c8:	39ffff84 	addi	r7,r7,-2
    b7cc:	1585883a 	add	r2,r2,r22
    b7d0:	122bc83a 	sub	r21,r2,r8
    b7d4:	a00b883a 	mov	r5,r20
    b7d8:	a809883a 	mov	r4,r21
    b7dc:	d8c00215 	stw	r3,8(sp)
    b7e0:	d9c00515 	stw	r7,20(sp)
    b7e4:	000a8f40 	call	a8f4 <__udivsi3>
    b7e8:	9009883a 	mov	r4,r18
    b7ec:	100b883a 	mov	r5,r2
    b7f0:	d8800415 	stw	r2,16(sp)
    b7f4:	000a9b00 	call	a9b0 <__mulsi3>
    b7f8:	a809883a 	mov	r4,r21
    b7fc:	a00b883a 	mov	r5,r20
    b800:	1025883a 	mov	r18,r2
    b804:	000a9580 	call	a958 <__umodsi3>
    b808:	1004943a 	slli	r2,r2,16
    b80c:	813fffcc 	andi	r4,r16,65535
    b810:	d8c00217 	ldw	r3,8(sp)
    b814:	20a0b03a 	or	r16,r4,r2
    b818:	d9c00517 	ldw	r7,20(sp)
    b81c:	da000417 	ldw	r8,16(sp)
    b820:	8480062e 	bgeu	r16,r18,b83c <__divdf3+0x5b8>
    b824:	85a1883a 	add	r16,r16,r22
    b828:	40bfffc4 	addi	r2,r8,-1
    b82c:	8580ac36 	bltu	r16,r22,bae0 <__divdf3+0x85c>
    b830:	8480ab2e 	bgeu	r16,r18,bae0 <__divdf3+0x85c>
    b834:	423fff84 	addi	r8,r8,-2
    b838:	85a1883a 	add	r16,r16,r22
    b83c:	3804943a 	slli	r2,r7,16
    b840:	84a1c83a 	sub	r16,r16,r18
    b844:	e009883a 	mov	r4,fp
    b848:	1228b03a 	or	r20,r2,r8
    b84c:	a1ffffcc 	andi	r7,r20,65535
    b850:	a024d43a 	srli	r18,r20,16
    b854:	380b883a 	mov	r5,r7
    b858:	d8c00215 	stw	r3,8(sp)
    b85c:	d9c00515 	stw	r7,20(sp)
    b860:	000a9b00 	call	a9b0 <__mulsi3>
    b864:	900b883a 	mov	r5,r18
    b868:	e009883a 	mov	r4,fp
    b86c:	102b883a 	mov	r21,r2
    b870:	000a9b00 	call	a9b0 <__mulsi3>
    b874:	900b883a 	mov	r5,r18
    b878:	b809883a 	mov	r4,r23
    b87c:	1039883a 	mov	fp,r2
    b880:	000a9b00 	call	a9b0 <__mulsi3>
    b884:	d9c00517 	ldw	r7,20(sp)
    b888:	b80b883a 	mov	r5,r23
    b88c:	1025883a 	mov	r18,r2
    b890:	3809883a 	mov	r4,r7
    b894:	000a9b00 	call	a9b0 <__mulsi3>
    b898:	a808d43a 	srli	r4,r21,16
    b89c:	1705883a 	add	r2,r2,fp
    b8a0:	d8c00217 	ldw	r3,8(sp)
    b8a4:	2085883a 	add	r2,r4,r2
    b8a8:	1700022e 	bgeu	r2,fp,b8b4 <__divdf3+0x630>
    b8ac:	01000074 	movhi	r4,1
    b8b0:	9125883a 	add	r18,r18,r4
    b8b4:	1008d43a 	srli	r4,r2,16
    b8b8:	1004943a 	slli	r2,r2,16
    b8bc:	ad7fffcc 	andi	r21,r21,65535
    b8c0:	2489883a 	add	r4,r4,r18
    b8c4:	1545883a 	add	r2,r2,r21
    b8c8:	81003836 	bltu	r16,r4,b9ac <__divdf3+0x728>
    b8cc:	81003626 	beq	r16,r4,b9a8 <__divdf3+0x724>
    b8d0:	a5000054 	ori	r20,r20,1
    b8d4:	1880ffc4 	addi	r2,r3,1023
    b8d8:	00bf2e0e 	bge	zero,r2,b594 <__alt_data_end+0xfffc21b4>
    b8dc:	a10001cc 	andi	r4,r20,7
    b8e0:	20000726 	beq	r4,zero,b900 <__divdf3+0x67c>
    b8e4:	a10003cc 	andi	r4,r20,15
    b8e8:	01400104 	movi	r5,4
    b8ec:	21400426 	beq	r4,r5,b900 <__divdf3+0x67c>
    b8f0:	a149883a 	add	r4,r20,r5
    b8f4:	2529803a 	cmpltu	r20,r4,r20
    b8f8:	8d23883a 	add	r17,r17,r20
    b8fc:	2029883a 	mov	r20,r4
    b900:	8900402c 	andhi	r4,r17,256
    b904:	20000426 	beq	r4,zero,b918 <__divdf3+0x694>
    b908:	18810004 	addi	r2,r3,1024
    b90c:	00ffc034 	movhi	r3,65280
    b910:	18ffffc4 	addi	r3,r3,-1
    b914:	88e2703a 	and	r17,r17,r3
    b918:	00c1ff84 	movi	r3,2046
    b91c:	18beb416 	blt	r3,r2,b3f0 <__alt_data_end+0xfffc2010>
    b920:	a028d0fa 	srli	r20,r20,3
    b924:	882a977a 	slli	r21,r17,29
    b928:	8820927a 	slli	r16,r17,9
    b92c:	1081ffcc 	andi	r2,r2,2047
    b930:	ad2ab03a 	or	r21,r21,r20
    b934:	8020d33a 	srli	r16,r16,12
    b938:	9900004c 	andi	r4,r19,1
    b93c:	003eb006 	br	b400 <__alt_data_end+0xfffc2020>
    b940:	8080022c 	andhi	r2,r16,8
    b944:	10001226 	beq	r2,zero,b990 <__divdf3+0x70c>
    b948:	8880022c 	andhi	r2,r17,8
    b94c:	1000101e 	bne	r2,zero,b990 <__divdf3+0x70c>
    b950:	00800434 	movhi	r2,16
    b954:	8c000234 	orhi	r16,r17,8
    b958:	10bfffc4 	addi	r2,r2,-1
    b95c:	b809883a 	mov	r4,r23
    b960:	80a0703a 	and	r16,r16,r2
    b964:	a02b883a 	mov	r21,r20
    b968:	003f0806 	br	b58c <__alt_data_end+0xfffc21ac>
    b96c:	008000c4 	movi	r2,3
    b970:	3880b126 	beq	r7,r2,bc38 <__divdf3+0x9b4>
    b974:	00800044 	movi	r2,1
    b978:	38805b1e 	bne	r7,r2,bae8 <__divdf3+0x864>
    b97c:	e009883a 	mov	r4,fp
    b980:	0005883a 	mov	r2,zero
    b984:	0021883a 	mov	r16,zero
    b988:	002b883a 	mov	r21,zero
    b98c:	003e9c06 	br	b400 <__alt_data_end+0xfffc2020>
    b990:	00800434 	movhi	r2,16
    b994:	84000234 	orhi	r16,r16,8
    b998:	10bfffc4 	addi	r2,r2,-1
    b99c:	b009883a 	mov	r4,r22
    b9a0:	80a0703a 	and	r16,r16,r2
    b9a4:	003ef906 	br	b58c <__alt_data_end+0xfffc21ac>
    b9a8:	103fca26 	beq	r2,zero,b8d4 <__alt_data_end+0xfffc24f4>
    b9ac:	b421883a 	add	r16,r22,r16
    b9b0:	a17fffc4 	addi	r5,r20,-1
    b9b4:	8580422e 	bgeu	r16,r22,bac0 <__divdf3+0x83c>
    b9b8:	2829883a 	mov	r20,r5
    b9bc:	813fc41e 	bne	r16,r4,b8d0 <__alt_data_end+0xfffc24f0>
    b9c0:	d9800017 	ldw	r6,0(sp)
    b9c4:	30bfc21e 	bne	r6,r2,b8d0 <__alt_data_end+0xfffc24f0>
    b9c8:	003fc206 	br	b8d4 <__alt_data_end+0xfffc24f4>
    b9cc:	10bff604 	addi	r2,r2,-40
    b9d0:	88a0983a 	sll	r16,r17,r2
    b9d4:	002b883a 	mov	r21,zero
    b9d8:	003eb406 	br	b4ac <__alt_data_end+0xfffc20cc>
    b9dc:	d9800215 	stw	r6,8(sp)
    b9e0:	d9c00515 	stw	r7,20(sp)
    b9e4:	da000415 	stw	r8,16(sp)
    b9e8:	000d2140 	call	d214 <__clzsi2>
    b9ec:	10800804 	addi	r2,r2,32
    b9f0:	da000417 	ldw	r8,16(sp)
    b9f4:	d9c00517 	ldw	r7,20(sp)
    b9f8:	d9800217 	ldw	r6,8(sp)
    b9fc:	003ea106 	br	b484 <__alt_data_end+0xfffc20a4>
    ba00:	10bff604 	addi	r2,r2,-40
    ba04:	30a2983a 	sll	r17,r6,r2
    ba08:	0029883a 	mov	r20,zero
    ba0c:	003ec906 	br	b534 <__alt_data_end+0xfffc2154>
    ba10:	3009883a 	mov	r4,r6
    ba14:	d9400115 	stw	r5,4(sp)
    ba18:	d9800215 	stw	r6,8(sp)
    ba1c:	da000415 	stw	r8,16(sp)
    ba20:	da400315 	stw	r9,12(sp)
    ba24:	000d2140 	call	d214 <__clzsi2>
    ba28:	10800804 	addi	r2,r2,32
    ba2c:	da400317 	ldw	r9,12(sp)
    ba30:	da000417 	ldw	r8,16(sp)
    ba34:	d9800217 	ldw	r6,8(sp)
    ba38:	d9400117 	ldw	r5,4(sp)
    ba3c:	003eb306 	br	b50c <__alt_data_end+0xfffc212c>
    ba40:	d9800017 	ldw	r6,0(sp)
    ba44:	a9ab883a 	add	r21,r21,r6
    ba48:	a98b803a 	cmpltu	r5,r21,r6
    ba4c:	2d8b883a 	add	r5,r5,r22
    ba50:	2a11883a 	add	r8,r5,r8
    ba54:	897fffc4 	addi	r5,r17,-1
    ba58:	b2000c2e 	bgeu	r22,r8,ba8c <__divdf3+0x808>
    ba5c:	41003f36 	bltu	r8,r4,bb5c <__divdf3+0x8d8>
    ba60:	22006c26 	beq	r4,r8,bc14 <__divdf3+0x990>
    ba64:	4109c83a 	sub	r4,r8,r4
    ba68:	2823883a 	mov	r17,r5
    ba6c:	003f3b06 	br	b75c <__alt_data_end+0xfffc237c>
    ba70:	ad3ed336 	bltu	r21,r20,b5c0 <__alt_data_end+0xfffc21e0>
    ba74:	a804d07a 	srli	r2,r21,1
    ba78:	802e97fa 	slli	r23,r16,31
    ba7c:	a82a97fa 	slli	r21,r21,31
    ba80:	8020d07a 	srli	r16,r16,1
    ba84:	b8aeb03a 	or	r23,r23,r2
    ba88:	003ed006 	br	b5cc <__alt_data_end+0xfffc21ec>
    ba8c:	b23ff51e 	bne	r22,r8,ba64 <__alt_data_end+0xfffc2684>
    ba90:	d9800017 	ldw	r6,0(sp)
    ba94:	a9bff12e 	bgeu	r21,r6,ba5c <__alt_data_end+0xfffc267c>
    ba98:	b109c83a 	sub	r4,r22,r4
    ba9c:	2823883a 	mov	r17,r5
    baa0:	003f2e06 	br	b75c <__alt_data_end+0xfffc237c>
    baa4:	2021883a 	mov	r16,r4
    baa8:	003eff06 	br	b6a8 <__alt_data_end+0xfffc22c8>
    baac:	2023883a 	mov	r17,r4
    bab0:	003ee406 	br	b644 <__alt_data_end+0xfffc2264>
    bab4:	a8bfe236 	bltu	r21,r2,ba40 <__alt_data_end+0xfffc2660>
    bab8:	0009883a 	mov	r4,zero
    babc:	003f2706 	br	b75c <__alt_data_end+0xfffc237c>
    bac0:	81002d36 	bltu	r16,r4,bb78 <__divdf3+0x8f4>
    bac4:	24005626 	beq	r4,r16,bc20 <__divdf3+0x99c>
    bac8:	2829883a 	mov	r20,r5
    bacc:	003f8006 	br	b8d0 <__alt_data_end+0xfffc24f0>
    bad0:	053fffc4 	movi	r20,-1
    bad4:	003f7f06 	br	b8d4 <__alt_data_end+0xfffc24f4>
    bad8:	200f883a 	mov	r7,r4
    badc:	003f3c06 	br	b7d0 <__alt_data_end+0xfffc23f0>
    bae0:	1011883a 	mov	r8,r2
    bae4:	003f5506 	br	b83c <__alt_data_end+0xfffc245c>
    bae8:	e027883a 	mov	r19,fp
    baec:	003f7906 	br	b8d4 <__alt_data_end+0xfffc24f4>
    baf0:	010007c4 	movi	r4,31
    baf4:	20c02816 	blt	r4,r3,bb98 <__divdf3+0x914>
    baf8:	00800804 	movi	r2,32
    bafc:	10c5c83a 	sub	r2,r2,r3
    bb00:	888a983a 	sll	r5,r17,r2
    bb04:	a0c8d83a 	srl	r4,r20,r3
    bb08:	a084983a 	sll	r2,r20,r2
    bb0c:	88e2d83a 	srl	r17,r17,r3
    bb10:	2906b03a 	or	r3,r5,r4
    bb14:	1004c03a 	cmpne	r2,r2,zero
    bb18:	1886b03a 	or	r3,r3,r2
    bb1c:	188001cc 	andi	r2,r3,7
    bb20:	10000726 	beq	r2,zero,bb40 <__divdf3+0x8bc>
    bb24:	188003cc 	andi	r2,r3,15
    bb28:	01000104 	movi	r4,4
    bb2c:	11000426 	beq	r2,r4,bb40 <__divdf3+0x8bc>
    bb30:	1805883a 	mov	r2,r3
    bb34:	10c00104 	addi	r3,r2,4
    bb38:	1885803a 	cmpltu	r2,r3,r2
    bb3c:	88a3883a 	add	r17,r17,r2
    bb40:	8880202c 	andhi	r2,r17,128
    bb44:	10002926 	beq	r2,zero,bbec <__divdf3+0x968>
    bb48:	9900004c 	andi	r4,r19,1
    bb4c:	00800044 	movi	r2,1
    bb50:	0021883a 	mov	r16,zero
    bb54:	002b883a 	mov	r21,zero
    bb58:	003e2906 	br	b400 <__alt_data_end+0xfffc2020>
    bb5c:	d9800017 	ldw	r6,0(sp)
    bb60:	8c7fff84 	addi	r17,r17,-2
    bb64:	a9ab883a 	add	r21,r21,r6
    bb68:	a98b803a 	cmpltu	r5,r21,r6
    bb6c:	2d8b883a 	add	r5,r5,r22
    bb70:	2a11883a 	add	r8,r5,r8
    bb74:	003ef806 	br	b758 <__alt_data_end+0xfffc2378>
    bb78:	d9800017 	ldw	r6,0(sp)
    bb7c:	318f883a 	add	r7,r6,r6
    bb80:	398b803a 	cmpltu	r5,r7,r6
    bb84:	2d8d883a 	add	r6,r5,r22
    bb88:	81a1883a 	add	r16,r16,r6
    bb8c:	a17fff84 	addi	r5,r20,-2
    bb90:	d9c00015 	stw	r7,0(sp)
    bb94:	003f8806 	br	b9b8 <__alt_data_end+0xfffc25d8>
    bb98:	013ff844 	movi	r4,-31
    bb9c:	2085c83a 	sub	r2,r4,r2
    bba0:	8888d83a 	srl	r4,r17,r2
    bba4:	00800804 	movi	r2,32
    bba8:	18802126 	beq	r3,r2,bc30 <__divdf3+0x9ac>
    bbac:	04001004 	movi	r16,64
    bbb0:	80c7c83a 	sub	r3,r16,r3
    bbb4:	88e0983a 	sll	r16,r17,r3
    bbb8:	8504b03a 	or	r2,r16,r20
    bbbc:	1004c03a 	cmpne	r2,r2,zero
    bbc0:	2084b03a 	or	r2,r4,r2
    bbc4:	144001cc 	andi	r17,r2,7
    bbc8:	88000d1e 	bne	r17,zero,bc00 <__divdf3+0x97c>
    bbcc:	0021883a 	mov	r16,zero
    bbd0:	102ad0fa 	srli	r21,r2,3
    bbd4:	9900004c 	andi	r4,r19,1
    bbd8:	0005883a 	mov	r2,zero
    bbdc:	ac6ab03a 	or	r21,r21,r17
    bbe0:	003e0706 	br	b400 <__alt_data_end+0xfffc2020>
    bbe4:	1007883a 	mov	r3,r2
    bbe8:	0023883a 	mov	r17,zero
    bbec:	8820927a 	slli	r16,r17,9
    bbf0:	1805883a 	mov	r2,r3
    bbf4:	8822977a 	slli	r17,r17,29
    bbf8:	8020d33a 	srli	r16,r16,12
    bbfc:	003ff406 	br	bbd0 <__alt_data_end+0xfffc27f0>
    bc00:	10c003cc 	andi	r3,r2,15
    bc04:	01000104 	movi	r4,4
    bc08:	193ff626 	beq	r3,r4,bbe4 <__alt_data_end+0xfffc2804>
    bc0c:	0023883a 	mov	r17,zero
    bc10:	003fc806 	br	bb34 <__alt_data_end+0xfffc2754>
    bc14:	a8bfd136 	bltu	r21,r2,bb5c <__alt_data_end+0xfffc277c>
    bc18:	2823883a 	mov	r17,r5
    bc1c:	003fa606 	br	bab8 <__alt_data_end+0xfffc26d8>
    bc20:	d9800017 	ldw	r6,0(sp)
    bc24:	30bfd436 	bltu	r6,r2,bb78 <__alt_data_end+0xfffc2798>
    bc28:	2829883a 	mov	r20,r5
    bc2c:	003f6406 	br	b9c0 <__alt_data_end+0xfffc25e0>
    bc30:	0021883a 	mov	r16,zero
    bc34:	003fe006 	br	bbb8 <__alt_data_end+0xfffc27d8>
    bc38:	00800434 	movhi	r2,16
    bc3c:	8c000234 	orhi	r16,r17,8
    bc40:	10bfffc4 	addi	r2,r2,-1
    bc44:	e009883a 	mov	r4,fp
    bc48:	80a0703a 	and	r16,r16,r2
    bc4c:	a02b883a 	mov	r21,r20
    bc50:	003e4e06 	br	b58c <__alt_data_end+0xfffc21ac>

0000bc54 <__eqdf2>:
    bc54:	2804d53a 	srli	r2,r5,20
    bc58:	3806d53a 	srli	r3,r7,20
    bc5c:	02000434 	movhi	r8,16
    bc60:	423fffc4 	addi	r8,r8,-1
    bc64:	1081ffcc 	andi	r2,r2,2047
    bc68:	0281ffc4 	movi	r10,2047
    bc6c:	2a12703a 	and	r9,r5,r8
    bc70:	18c1ffcc 	andi	r3,r3,2047
    bc74:	3a10703a 	and	r8,r7,r8
    bc78:	280ad7fa 	srli	r5,r5,31
    bc7c:	380ed7fa 	srli	r7,r7,31
    bc80:	12801026 	beq	r2,r10,bcc4 <__eqdf2+0x70>
    bc84:	0281ffc4 	movi	r10,2047
    bc88:	1a800a26 	beq	r3,r10,bcb4 <__eqdf2+0x60>
    bc8c:	10c00226 	beq	r2,r3,bc98 <__eqdf2+0x44>
    bc90:	00800044 	movi	r2,1
    bc94:	f800283a 	ret
    bc98:	4a3ffd1e 	bne	r9,r8,bc90 <__alt_data_end+0xfffc28b0>
    bc9c:	21bffc1e 	bne	r4,r6,bc90 <__alt_data_end+0xfffc28b0>
    bca0:	29c00c26 	beq	r5,r7,bcd4 <__eqdf2+0x80>
    bca4:	103ffa1e 	bne	r2,zero,bc90 <__alt_data_end+0xfffc28b0>
    bca8:	2244b03a 	or	r2,r4,r9
    bcac:	1004c03a 	cmpne	r2,r2,zero
    bcb0:	f800283a 	ret
    bcb4:	3214b03a 	or	r10,r6,r8
    bcb8:	503ff426 	beq	r10,zero,bc8c <__alt_data_end+0xfffc28ac>
    bcbc:	00800044 	movi	r2,1
    bcc0:	f800283a 	ret
    bcc4:	2254b03a 	or	r10,r4,r9
    bcc8:	503fee26 	beq	r10,zero,bc84 <__alt_data_end+0xfffc28a4>
    bccc:	00800044 	movi	r2,1
    bcd0:	f800283a 	ret
    bcd4:	0005883a 	mov	r2,zero
    bcd8:	f800283a 	ret

0000bcdc <__gedf2>:
    bcdc:	2804d53a 	srli	r2,r5,20
    bce0:	3806d53a 	srli	r3,r7,20
    bce4:	02000434 	movhi	r8,16
    bce8:	423fffc4 	addi	r8,r8,-1
    bcec:	1081ffcc 	andi	r2,r2,2047
    bcf0:	0241ffc4 	movi	r9,2047
    bcf4:	2a14703a 	and	r10,r5,r8
    bcf8:	18c1ffcc 	andi	r3,r3,2047
    bcfc:	3a10703a 	and	r8,r7,r8
    bd00:	280ad7fa 	srli	r5,r5,31
    bd04:	380ed7fa 	srli	r7,r7,31
    bd08:	12401d26 	beq	r2,r9,bd80 <__gedf2+0xa4>
    bd0c:	0241ffc4 	movi	r9,2047
    bd10:	1a401226 	beq	r3,r9,bd5c <__gedf2+0x80>
    bd14:	1000081e 	bne	r2,zero,bd38 <__gedf2+0x5c>
    bd18:	2296b03a 	or	r11,r4,r10
    bd1c:	5813003a 	cmpeq	r9,r11,zero
    bd20:	1800091e 	bne	r3,zero,bd48 <__gedf2+0x6c>
    bd24:	3218b03a 	or	r12,r6,r8
    bd28:	6000071e 	bne	r12,zero,bd48 <__gedf2+0x6c>
    bd2c:	0005883a 	mov	r2,zero
    bd30:	5800101e 	bne	r11,zero,bd74 <__gedf2+0x98>
    bd34:	f800283a 	ret
    bd38:	18000c1e 	bne	r3,zero,bd6c <__gedf2+0x90>
    bd3c:	3212b03a 	or	r9,r6,r8
    bd40:	48000c26 	beq	r9,zero,bd74 <__gedf2+0x98>
    bd44:	0013883a 	mov	r9,zero
    bd48:	39c03fcc 	andi	r7,r7,255
    bd4c:	48000826 	beq	r9,zero,bd70 <__gedf2+0x94>
    bd50:	38000926 	beq	r7,zero,bd78 <__gedf2+0x9c>
    bd54:	00800044 	movi	r2,1
    bd58:	f800283a 	ret
    bd5c:	3212b03a 	or	r9,r6,r8
    bd60:	483fec26 	beq	r9,zero,bd14 <__alt_data_end+0xfffc2934>
    bd64:	00bfff84 	movi	r2,-2
    bd68:	f800283a 	ret
    bd6c:	39c03fcc 	andi	r7,r7,255
    bd70:	29c00626 	beq	r5,r7,bd8c <__gedf2+0xb0>
    bd74:	283ff726 	beq	r5,zero,bd54 <__alt_data_end+0xfffc2974>
    bd78:	00bfffc4 	movi	r2,-1
    bd7c:	f800283a 	ret
    bd80:	2292b03a 	or	r9,r4,r10
    bd84:	483fe126 	beq	r9,zero,bd0c <__alt_data_end+0xfffc292c>
    bd88:	003ff606 	br	bd64 <__alt_data_end+0xfffc2984>
    bd8c:	18bff916 	blt	r3,r2,bd74 <__alt_data_end+0xfffc2994>
    bd90:	10c00316 	blt	r2,r3,bda0 <__gedf2+0xc4>
    bd94:	42bff736 	bltu	r8,r10,bd74 <__alt_data_end+0xfffc2994>
    bd98:	52000326 	beq	r10,r8,bda8 <__gedf2+0xcc>
    bd9c:	5200042e 	bgeu	r10,r8,bdb0 <__gedf2+0xd4>
    bda0:	283fec1e 	bne	r5,zero,bd54 <__alt_data_end+0xfffc2974>
    bda4:	003ff406 	br	bd78 <__alt_data_end+0xfffc2998>
    bda8:	313ff236 	bltu	r6,r4,bd74 <__alt_data_end+0xfffc2994>
    bdac:	21bffc36 	bltu	r4,r6,bda0 <__alt_data_end+0xfffc29c0>
    bdb0:	0005883a 	mov	r2,zero
    bdb4:	f800283a 	ret

0000bdb8 <__ledf2>:
    bdb8:	2804d53a 	srli	r2,r5,20
    bdbc:	3810d53a 	srli	r8,r7,20
    bdc0:	00c00434 	movhi	r3,16
    bdc4:	18ffffc4 	addi	r3,r3,-1
    bdc8:	1081ffcc 	andi	r2,r2,2047
    bdcc:	0241ffc4 	movi	r9,2047
    bdd0:	28d4703a 	and	r10,r5,r3
    bdd4:	4201ffcc 	andi	r8,r8,2047
    bdd8:	38c6703a 	and	r3,r7,r3
    bddc:	280ad7fa 	srli	r5,r5,31
    bde0:	380ed7fa 	srli	r7,r7,31
    bde4:	12401f26 	beq	r2,r9,be64 <__ledf2+0xac>
    bde8:	0241ffc4 	movi	r9,2047
    bdec:	42401426 	beq	r8,r9,be40 <__ledf2+0x88>
    bdf0:	1000091e 	bne	r2,zero,be18 <__ledf2+0x60>
    bdf4:	2296b03a 	or	r11,r4,r10
    bdf8:	5813003a 	cmpeq	r9,r11,zero
    bdfc:	29403fcc 	andi	r5,r5,255
    be00:	40000a1e 	bne	r8,zero,be2c <__ledf2+0x74>
    be04:	30d8b03a 	or	r12,r6,r3
    be08:	6000081e 	bne	r12,zero,be2c <__ledf2+0x74>
    be0c:	0005883a 	mov	r2,zero
    be10:	5800111e 	bne	r11,zero,be58 <__ledf2+0xa0>
    be14:	f800283a 	ret
    be18:	29403fcc 	andi	r5,r5,255
    be1c:	40000c1e 	bne	r8,zero,be50 <__ledf2+0x98>
    be20:	30d2b03a 	or	r9,r6,r3
    be24:	48000c26 	beq	r9,zero,be58 <__ledf2+0xa0>
    be28:	0013883a 	mov	r9,zero
    be2c:	39c03fcc 	andi	r7,r7,255
    be30:	48000826 	beq	r9,zero,be54 <__ledf2+0x9c>
    be34:	38001126 	beq	r7,zero,be7c <__ledf2+0xc4>
    be38:	00800044 	movi	r2,1
    be3c:	f800283a 	ret
    be40:	30d2b03a 	or	r9,r6,r3
    be44:	483fea26 	beq	r9,zero,bdf0 <__alt_data_end+0xfffc2a10>
    be48:	00800084 	movi	r2,2
    be4c:	f800283a 	ret
    be50:	39c03fcc 	andi	r7,r7,255
    be54:	39400726 	beq	r7,r5,be74 <__ledf2+0xbc>
    be58:	2800081e 	bne	r5,zero,be7c <__ledf2+0xc4>
    be5c:	00800044 	movi	r2,1
    be60:	f800283a 	ret
    be64:	2292b03a 	or	r9,r4,r10
    be68:	483fdf26 	beq	r9,zero,bde8 <__alt_data_end+0xfffc2a08>
    be6c:	00800084 	movi	r2,2
    be70:	f800283a 	ret
    be74:	4080030e 	bge	r8,r2,be84 <__ledf2+0xcc>
    be78:	383fef26 	beq	r7,zero,be38 <__alt_data_end+0xfffc2a58>
    be7c:	00bfffc4 	movi	r2,-1
    be80:	f800283a 	ret
    be84:	123feb16 	blt	r2,r8,be34 <__alt_data_end+0xfffc2a54>
    be88:	1abff336 	bltu	r3,r10,be58 <__alt_data_end+0xfffc2a78>
    be8c:	50c00326 	beq	r10,r3,be9c <__ledf2+0xe4>
    be90:	50c0042e 	bgeu	r10,r3,bea4 <__ledf2+0xec>
    be94:	283fe81e 	bne	r5,zero,be38 <__alt_data_end+0xfffc2a58>
    be98:	003ff806 	br	be7c <__alt_data_end+0xfffc2a9c>
    be9c:	313fee36 	bltu	r6,r4,be58 <__alt_data_end+0xfffc2a78>
    bea0:	21bffc36 	bltu	r4,r6,be94 <__alt_data_end+0xfffc2ab4>
    bea4:	0005883a 	mov	r2,zero
    bea8:	f800283a 	ret

0000beac <__muldf3>:
    beac:	deffee04 	addi	sp,sp,-72
    beb0:	dd000c15 	stw	r20,48(sp)
    beb4:	2828d53a 	srli	r20,r5,20
    beb8:	ddc00f15 	stw	r23,60(sp)
    bebc:	282ed7fa 	srli	r23,r5,31
    bec0:	dc000815 	stw	r16,32(sp)
    bec4:	04000434 	movhi	r16,16
    bec8:	dcc00b15 	stw	r19,44(sp)
    becc:	843fffc4 	addi	r16,r16,-1
    bed0:	dfc01115 	stw	ra,68(sp)
    bed4:	df001015 	stw	fp,64(sp)
    bed8:	dd800e15 	stw	r22,56(sp)
    bedc:	dd400d15 	stw	r21,52(sp)
    bee0:	dc800a15 	stw	r18,40(sp)
    bee4:	dc400915 	stw	r17,36(sp)
    bee8:	a501ffcc 	andi	r20,r20,2047
    beec:	2c20703a 	and	r16,r5,r16
    bef0:	b827883a 	mov	r19,r23
    bef4:	ba403fcc 	andi	r9,r23,255
    bef8:	a0006026 	beq	r20,zero,c07c <__muldf3+0x1d0>
    befc:	0081ffc4 	movi	r2,2047
    bf00:	202d883a 	mov	r22,r4
    bf04:	a0803626 	beq	r20,r2,bfe0 <__muldf3+0x134>
    bf08:	84000434 	orhi	r16,r16,16
    bf0c:	200ad77a 	srli	r5,r4,29
    bf10:	800690fa 	slli	r3,r16,3
    bf14:	202c90fa 	slli	r22,r4,3
    bf18:	a53f0044 	addi	r20,r20,-1023
    bf1c:	28e0b03a 	or	r16,r5,r3
    bf20:	002b883a 	mov	r21,zero
    bf24:	000b883a 	mov	r5,zero
    bf28:	3806d53a 	srli	r3,r7,20
    bf2c:	3838d7fa 	srli	fp,r7,31
    bf30:	04400434 	movhi	r17,16
    bf34:	8c7fffc4 	addi	r17,r17,-1
    bf38:	18c1ffcc 	andi	r3,r3,2047
    bf3c:	3025883a 	mov	r18,r6
    bf40:	3c62703a 	and	r17,r7,r17
    bf44:	e2803fcc 	andi	r10,fp,255
    bf48:	18006d26 	beq	r3,zero,c100 <__muldf3+0x254>
    bf4c:	0081ffc4 	movi	r2,2047
    bf50:	18806526 	beq	r3,r2,c0e8 <__muldf3+0x23c>
    bf54:	8c400434 	orhi	r17,r17,16
    bf58:	300ed77a 	srli	r7,r6,29
    bf5c:	880890fa 	slli	r4,r17,3
    bf60:	302490fa 	slli	r18,r6,3
    bf64:	18ff0044 	addi	r3,r3,-1023
    bf68:	3922b03a 	or	r17,r7,r4
    bf6c:	000f883a 	mov	r7,zero
    bf70:	a0c7883a 	add	r3,r20,r3
    bf74:	3d48b03a 	or	r4,r7,r21
    bf78:	008003c4 	movi	r2,15
    bf7c:	e5ccf03a 	xor	r6,fp,r23
    bf80:	1a000044 	addi	r8,r3,1
    bf84:	11009b36 	bltu	r2,r4,c1f4 <__muldf3+0x348>
    bf88:	200890ba 	slli	r4,r4,2
    bf8c:	00800074 	movhi	r2,1
    bf90:	10afe804 	addi	r2,r2,-16480
    bf94:	2089883a 	add	r4,r4,r2
    bf98:	20800017 	ldw	r2,0(r4)
    bf9c:	1000683a 	jmp	r2
    bfa0:	0000c1f4 	movhi	zero,775
    bfa4:	0000c000 	call	c00 <___vfprintf_internal_r+0x6ec>
    bfa8:	0000c000 	call	c00 <___vfprintf_internal_r+0x6ec>
    bfac:	0000bffc 	xorhi	zero,zero,767
    bfb0:	0000c1d0 	cmplti	zero,zero,775
    bfb4:	0000c1d0 	cmplti	zero,zero,775
    bfb8:	0000c1b8 	rdprs	zero,zero,774
    bfbc:	0000bffc 	xorhi	zero,zero,767
    bfc0:	0000c1d0 	cmplti	zero,zero,775
    bfc4:	0000c1b8 	rdprs	zero,zero,774
    bfc8:	0000c1d0 	cmplti	zero,zero,775
    bfcc:	0000bffc 	xorhi	zero,zero,767
    bfd0:	0000c1e0 	cmpeqi	zero,zero,775
    bfd4:	0000c1e0 	cmpeqi	zero,zero,775
    bfd8:	0000c1e0 	cmpeqi	zero,zero,775
    bfdc:	0000c53c 	xorhi	zero,zero,788
    bfe0:	2404b03a 	or	r2,r4,r16
    bfe4:	1000711e 	bne	r2,zero,c1ac <__muldf3+0x300>
    bfe8:	05400204 	movi	r21,8
    bfec:	0021883a 	mov	r16,zero
    bff0:	002d883a 	mov	r22,zero
    bff4:	01400084 	movi	r5,2
    bff8:	003fcb06 	br	bf28 <__alt_data_end+0xfffc2b48>
    bffc:	500d883a 	mov	r6,r10
    c000:	00800084 	movi	r2,2
    c004:	38805926 	beq	r7,r2,c16c <__muldf3+0x2c0>
    c008:	008000c4 	movi	r2,3
    c00c:	3881ba26 	beq	r7,r2,c6f8 <__muldf3+0x84c>
    c010:	00800044 	movi	r2,1
    c014:	3881951e 	bne	r7,r2,c66c <__muldf3+0x7c0>
    c018:	3027883a 	mov	r19,r6
    c01c:	0005883a 	mov	r2,zero
    c020:	0021883a 	mov	r16,zero
    c024:	002d883a 	mov	r22,zero
    c028:	1004953a 	slli	r2,r2,20
    c02c:	98c03fcc 	andi	r3,r19,255
    c030:	04400434 	movhi	r17,16
    c034:	8c7fffc4 	addi	r17,r17,-1
    c038:	180697fa 	slli	r3,r3,31
    c03c:	8460703a 	and	r16,r16,r17
    c040:	80a0b03a 	or	r16,r16,r2
    c044:	80c6b03a 	or	r3,r16,r3
    c048:	b005883a 	mov	r2,r22
    c04c:	dfc01117 	ldw	ra,68(sp)
    c050:	df001017 	ldw	fp,64(sp)
    c054:	ddc00f17 	ldw	r23,60(sp)
    c058:	dd800e17 	ldw	r22,56(sp)
    c05c:	dd400d17 	ldw	r21,52(sp)
    c060:	dd000c17 	ldw	r20,48(sp)
    c064:	dcc00b17 	ldw	r19,44(sp)
    c068:	dc800a17 	ldw	r18,40(sp)
    c06c:	dc400917 	ldw	r17,36(sp)
    c070:	dc000817 	ldw	r16,32(sp)
    c074:	dec01204 	addi	sp,sp,72
    c078:	f800283a 	ret
    c07c:	2404b03a 	or	r2,r4,r16
    c080:	202b883a 	mov	r21,r4
    c084:	10004426 	beq	r2,zero,c198 <__muldf3+0x2ec>
    c088:	80015026 	beq	r16,zero,c5cc <__muldf3+0x720>
    c08c:	8009883a 	mov	r4,r16
    c090:	d9800715 	stw	r6,28(sp)
    c094:	d9c00215 	stw	r7,8(sp)
    c098:	da400415 	stw	r9,16(sp)
    c09c:	000d2140 	call	d214 <__clzsi2>
    c0a0:	d9800717 	ldw	r6,28(sp)
    c0a4:	d9c00217 	ldw	r7,8(sp)
    c0a8:	da400417 	ldw	r9,16(sp)
    c0ac:	10fffd44 	addi	r3,r2,-11
    c0b0:	01000704 	movi	r4,28
    c0b4:	20c14116 	blt	r4,r3,c5bc <__muldf3+0x710>
    c0b8:	01000744 	movi	r4,29
    c0bc:	15bffe04 	addi	r22,r2,-8
    c0c0:	20c9c83a 	sub	r4,r4,r3
    c0c4:	85a0983a 	sll	r16,r16,r22
    c0c8:	a908d83a 	srl	r4,r21,r4
    c0cc:	adac983a 	sll	r22,r21,r22
    c0d0:	2420b03a 	or	r16,r4,r16
    c0d4:	053f0084 	movi	r20,-1022
    c0d8:	a0e9c83a 	sub	r20,r20,r3
    c0dc:	002b883a 	mov	r21,zero
    c0e0:	000b883a 	mov	r5,zero
    c0e4:	003f9006 	br	bf28 <__alt_data_end+0xfffc2b48>
    c0e8:	3444b03a 	or	r2,r6,r17
    c0ec:	1000281e 	bne	r2,zero,c190 <__muldf3+0x2e4>
    c0f0:	0023883a 	mov	r17,zero
    c0f4:	0025883a 	mov	r18,zero
    c0f8:	01c00084 	movi	r7,2
    c0fc:	003f9c06 	br	bf70 <__alt_data_end+0xfffc2b90>
    c100:	3444b03a 	or	r2,r6,r17
    c104:	10001e26 	beq	r2,zero,c180 <__muldf3+0x2d4>
    c108:	88012026 	beq	r17,zero,c58c <__muldf3+0x6e0>
    c10c:	8809883a 	mov	r4,r17
    c110:	d9400215 	stw	r5,8(sp)
    c114:	d9800715 	stw	r6,28(sp)
    c118:	da400415 	stw	r9,16(sp)
    c11c:	da800315 	stw	r10,12(sp)
    c120:	000d2140 	call	d214 <__clzsi2>
    c124:	d9400217 	ldw	r5,8(sp)
    c128:	d9800717 	ldw	r6,28(sp)
    c12c:	da400417 	ldw	r9,16(sp)
    c130:	da800317 	ldw	r10,12(sp)
    c134:	113ffd44 	addi	r4,r2,-11
    c138:	00c00704 	movi	r3,28
    c13c:	19010f16 	blt	r3,r4,c57c <__muldf3+0x6d0>
    c140:	00c00744 	movi	r3,29
    c144:	14bffe04 	addi	r18,r2,-8
    c148:	1907c83a 	sub	r3,r3,r4
    c14c:	8ca2983a 	sll	r17,r17,r18
    c150:	30c6d83a 	srl	r3,r6,r3
    c154:	34a4983a 	sll	r18,r6,r18
    c158:	1c62b03a 	or	r17,r3,r17
    c15c:	00ff0084 	movi	r3,-1022
    c160:	1907c83a 	sub	r3,r3,r4
    c164:	000f883a 	mov	r7,zero
    c168:	003f8106 	br	bf70 <__alt_data_end+0xfffc2b90>
    c16c:	3027883a 	mov	r19,r6
    c170:	0081ffc4 	movi	r2,2047
    c174:	0021883a 	mov	r16,zero
    c178:	002d883a 	mov	r22,zero
    c17c:	003faa06 	br	c028 <__alt_data_end+0xfffc2c48>
    c180:	0023883a 	mov	r17,zero
    c184:	0025883a 	mov	r18,zero
    c188:	01c00044 	movi	r7,1
    c18c:	003f7806 	br	bf70 <__alt_data_end+0xfffc2b90>
    c190:	01c000c4 	movi	r7,3
    c194:	003f7606 	br	bf70 <__alt_data_end+0xfffc2b90>
    c198:	05400104 	movi	r21,4
    c19c:	0021883a 	mov	r16,zero
    c1a0:	002d883a 	mov	r22,zero
    c1a4:	01400044 	movi	r5,1
    c1a8:	003f5f06 	br	bf28 <__alt_data_end+0xfffc2b48>
    c1ac:	05400304 	movi	r21,12
    c1b0:	014000c4 	movi	r5,3
    c1b4:	003f5c06 	br	bf28 <__alt_data_end+0xfffc2b48>
    c1b8:	04000434 	movhi	r16,16
    c1bc:	0027883a 	mov	r19,zero
    c1c0:	843fffc4 	addi	r16,r16,-1
    c1c4:	05bfffc4 	movi	r22,-1
    c1c8:	0081ffc4 	movi	r2,2047
    c1cc:	003f9606 	br	c028 <__alt_data_end+0xfffc2c48>
    c1d0:	8023883a 	mov	r17,r16
    c1d4:	b025883a 	mov	r18,r22
    c1d8:	280f883a 	mov	r7,r5
    c1dc:	003f8806 	br	c000 <__alt_data_end+0xfffc2c20>
    c1e0:	8023883a 	mov	r17,r16
    c1e4:	b025883a 	mov	r18,r22
    c1e8:	480d883a 	mov	r6,r9
    c1ec:	280f883a 	mov	r7,r5
    c1f0:	003f8306 	br	c000 <__alt_data_end+0xfffc2c20>
    c1f4:	b028d43a 	srli	r20,r22,16
    c1f8:	902ed43a 	srli	r23,r18,16
    c1fc:	b5bfffcc 	andi	r22,r22,65535
    c200:	94bfffcc 	andi	r18,r18,65535
    c204:	b00b883a 	mov	r5,r22
    c208:	9009883a 	mov	r4,r18
    c20c:	d8c00515 	stw	r3,20(sp)
    c210:	d9800715 	stw	r6,28(sp)
    c214:	da000615 	stw	r8,24(sp)
    c218:	000a9b00 	call	a9b0 <__mulsi3>
    c21c:	a00b883a 	mov	r5,r20
    c220:	9009883a 	mov	r4,r18
    c224:	1027883a 	mov	r19,r2
    c228:	000a9b00 	call	a9b0 <__mulsi3>
    c22c:	b80b883a 	mov	r5,r23
    c230:	a009883a 	mov	r4,r20
    c234:	102b883a 	mov	r21,r2
    c238:	000a9b00 	call	a9b0 <__mulsi3>
    c23c:	b809883a 	mov	r4,r23
    c240:	b00b883a 	mov	r5,r22
    c244:	1039883a 	mov	fp,r2
    c248:	000a9b00 	call	a9b0 <__mulsi3>
    c24c:	9808d43a 	srli	r4,r19,16
    c250:	1545883a 	add	r2,r2,r21
    c254:	d8c00517 	ldw	r3,20(sp)
    c258:	2085883a 	add	r2,r4,r2
    c25c:	d9800717 	ldw	r6,28(sp)
    c260:	da000617 	ldw	r8,24(sp)
    c264:	1540022e 	bgeu	r2,r21,c270 <__muldf3+0x3c4>
    c268:	01000074 	movhi	r4,1
    c26c:	e139883a 	add	fp,fp,r4
    c270:	100e943a 	slli	r7,r2,16
    c274:	1004d43a 	srli	r2,r2,16
    c278:	882ad43a 	srli	r21,r17,16
    c27c:	9cffffcc 	andi	r19,r19,65535
    c280:	8c7fffcc 	andi	r17,r17,65535
    c284:	3ce7883a 	add	r19,r7,r19
    c288:	b00b883a 	mov	r5,r22
    c28c:	8809883a 	mov	r4,r17
    c290:	d8c00515 	stw	r3,20(sp)
    c294:	d9800715 	stw	r6,28(sp)
    c298:	da000615 	stw	r8,24(sp)
    c29c:	dcc00115 	stw	r19,4(sp)
    c2a0:	d8800015 	stw	r2,0(sp)
    c2a4:	000a9b00 	call	a9b0 <__mulsi3>
    c2a8:	a00b883a 	mov	r5,r20
    c2ac:	8809883a 	mov	r4,r17
    c2b0:	d8800215 	stw	r2,8(sp)
    c2b4:	000a9b00 	call	a9b0 <__mulsi3>
    c2b8:	a009883a 	mov	r4,r20
    c2bc:	a80b883a 	mov	r5,r21
    c2c0:	1027883a 	mov	r19,r2
    c2c4:	000a9b00 	call	a9b0 <__mulsi3>
    c2c8:	a809883a 	mov	r4,r21
    c2cc:	b00b883a 	mov	r5,r22
    c2d0:	1029883a 	mov	r20,r2
    c2d4:	000a9b00 	call	a9b0 <__mulsi3>
    c2d8:	d9c00217 	ldw	r7,8(sp)
    c2dc:	14c5883a 	add	r2,r2,r19
    c2e0:	d8c00517 	ldw	r3,20(sp)
    c2e4:	3808d43a 	srli	r4,r7,16
    c2e8:	d9800717 	ldw	r6,28(sp)
    c2ec:	da000617 	ldw	r8,24(sp)
    c2f0:	2085883a 	add	r2,r4,r2
    c2f4:	14c0022e 	bgeu	r2,r19,c300 <__muldf3+0x454>
    c2f8:	01000074 	movhi	r4,1
    c2fc:	a129883a 	add	r20,r20,r4
    c300:	1012d43a 	srli	r9,r2,16
    c304:	1004943a 	slli	r2,r2,16
    c308:	802cd43a 	srli	r22,r16,16
    c30c:	843fffcc 	andi	r16,r16,65535
    c310:	3cffffcc 	andi	r19,r7,65535
    c314:	9009883a 	mov	r4,r18
    c318:	800b883a 	mov	r5,r16
    c31c:	4d29883a 	add	r20,r9,r20
    c320:	d8c00515 	stw	r3,20(sp)
    c324:	d9800715 	stw	r6,28(sp)
    c328:	da000615 	stw	r8,24(sp)
    c32c:	14e7883a 	add	r19,r2,r19
    c330:	000a9b00 	call	a9b0 <__mulsi3>
    c334:	9009883a 	mov	r4,r18
    c338:	b00b883a 	mov	r5,r22
    c33c:	d8800315 	stw	r2,12(sp)
    c340:	000a9b00 	call	a9b0 <__mulsi3>
    c344:	b809883a 	mov	r4,r23
    c348:	b00b883a 	mov	r5,r22
    c34c:	d8800215 	stw	r2,8(sp)
    c350:	000a9b00 	call	a9b0 <__mulsi3>
    c354:	b80b883a 	mov	r5,r23
    c358:	8009883a 	mov	r4,r16
    c35c:	d8800415 	stw	r2,16(sp)
    c360:	000a9b00 	call	a9b0 <__mulsi3>
    c364:	da800317 	ldw	r10,12(sp)
    c368:	d9c00217 	ldw	r7,8(sp)
    c36c:	d9000017 	ldw	r4,0(sp)
    c370:	502ed43a 	srli	r23,r10,16
    c374:	11c5883a 	add	r2,r2,r7
    c378:	24e5883a 	add	r18,r4,r19
    c37c:	b885883a 	add	r2,r23,r2
    c380:	d8c00517 	ldw	r3,20(sp)
    c384:	d9800717 	ldw	r6,28(sp)
    c388:	da000617 	ldw	r8,24(sp)
    c38c:	da400417 	ldw	r9,16(sp)
    c390:	11c0022e 	bgeu	r2,r7,c39c <__muldf3+0x4f0>
    c394:	01000074 	movhi	r4,1
    c398:	4913883a 	add	r9,r9,r4
    c39c:	100ed43a 	srli	r7,r2,16
    c3a0:	1004943a 	slli	r2,r2,16
    c3a4:	55ffffcc 	andi	r23,r10,65535
    c3a8:	3a53883a 	add	r9,r7,r9
    c3ac:	8809883a 	mov	r4,r17
    c3b0:	800b883a 	mov	r5,r16
    c3b4:	d8c00515 	stw	r3,20(sp)
    c3b8:	d9800715 	stw	r6,28(sp)
    c3bc:	da000615 	stw	r8,24(sp)
    c3c0:	da400415 	stw	r9,16(sp)
    c3c4:	15ef883a 	add	r23,r2,r23
    c3c8:	000a9b00 	call	a9b0 <__mulsi3>
    c3cc:	8809883a 	mov	r4,r17
    c3d0:	b00b883a 	mov	r5,r22
    c3d4:	d8800215 	stw	r2,8(sp)
    c3d8:	000a9b00 	call	a9b0 <__mulsi3>
    c3dc:	b00b883a 	mov	r5,r22
    c3e0:	a809883a 	mov	r4,r21
    c3e4:	d8800315 	stw	r2,12(sp)
    c3e8:	000a9b00 	call	a9b0 <__mulsi3>
    c3ec:	8009883a 	mov	r4,r16
    c3f0:	a80b883a 	mov	r5,r21
    c3f4:	1023883a 	mov	r17,r2
    c3f8:	000a9b00 	call	a9b0 <__mulsi3>
    c3fc:	d9c00217 	ldw	r7,8(sp)
    c400:	da800317 	ldw	r10,12(sp)
    c404:	d8c00517 	ldw	r3,20(sp)
    c408:	3808d43a 	srli	r4,r7,16
    c40c:	1285883a 	add	r2,r2,r10
    c410:	d9800717 	ldw	r6,28(sp)
    c414:	2085883a 	add	r2,r4,r2
    c418:	da000617 	ldw	r8,24(sp)
    c41c:	da400417 	ldw	r9,16(sp)
    c420:	1280022e 	bgeu	r2,r10,c42c <__muldf3+0x580>
    c424:	01000074 	movhi	r4,1
    c428:	8923883a 	add	r17,r17,r4
    c42c:	1008943a 	slli	r4,r2,16
    c430:	39ffffcc 	andi	r7,r7,65535
    c434:	e4b9883a 	add	fp,fp,r18
    c438:	21cf883a 	add	r7,r4,r7
    c43c:	e4e7803a 	cmpltu	r19,fp,r19
    c440:	3d0f883a 	add	r7,r7,r20
    c444:	bf39883a 	add	fp,r23,fp
    c448:	99c9883a 	add	r4,r19,r7
    c44c:	e5ef803a 	cmpltu	r23,fp,r23
    c450:	490b883a 	add	r5,r9,r4
    c454:	1004d43a 	srli	r2,r2,16
    c458:	b965883a 	add	r18,r23,r5
    c45c:	24c9803a 	cmpltu	r4,r4,r19
    c460:	3d29803a 	cmpltu	r20,r7,r20
    c464:	a128b03a 	or	r20,r20,r4
    c468:	95ef803a 	cmpltu	r23,r18,r23
    c46c:	2a53803a 	cmpltu	r9,r5,r9
    c470:	a0a9883a 	add	r20,r20,r2
    c474:	4deeb03a 	or	r23,r9,r23
    c478:	a5ef883a 	add	r23,r20,r23
    c47c:	bc63883a 	add	r17,r23,r17
    c480:	e004927a 	slli	r2,fp,9
    c484:	d9000117 	ldw	r4,4(sp)
    c488:	882e927a 	slli	r23,r17,9
    c48c:	9022d5fa 	srli	r17,r18,23
    c490:	e038d5fa 	srli	fp,fp,23
    c494:	1104b03a 	or	r2,r2,r4
    c498:	9024927a 	slli	r18,r18,9
    c49c:	1004c03a 	cmpne	r2,r2,zero
    c4a0:	bc62b03a 	or	r17,r23,r17
    c4a4:	1738b03a 	or	fp,r2,fp
    c4a8:	8880402c 	andhi	r2,r17,256
    c4ac:	e4a4b03a 	or	r18,fp,r18
    c4b0:	10000726 	beq	r2,zero,c4d0 <__muldf3+0x624>
    c4b4:	9006d07a 	srli	r3,r18,1
    c4b8:	880497fa 	slli	r2,r17,31
    c4bc:	9480004c 	andi	r18,r18,1
    c4c0:	8822d07a 	srli	r17,r17,1
    c4c4:	1ca4b03a 	or	r18,r3,r18
    c4c8:	14a4b03a 	or	r18,r2,r18
    c4cc:	4007883a 	mov	r3,r8
    c4d0:	1880ffc4 	addi	r2,r3,1023
    c4d4:	0080460e 	bge	zero,r2,c5f0 <__muldf3+0x744>
    c4d8:	910001cc 	andi	r4,r18,7
    c4dc:	20000726 	beq	r4,zero,c4fc <__muldf3+0x650>
    c4e0:	910003cc 	andi	r4,r18,15
    c4e4:	01400104 	movi	r5,4
    c4e8:	21400426 	beq	r4,r5,c4fc <__muldf3+0x650>
    c4ec:	9149883a 	add	r4,r18,r5
    c4f0:	24a5803a 	cmpltu	r18,r4,r18
    c4f4:	8ca3883a 	add	r17,r17,r18
    c4f8:	2025883a 	mov	r18,r4
    c4fc:	8900402c 	andhi	r4,r17,256
    c500:	20000426 	beq	r4,zero,c514 <__muldf3+0x668>
    c504:	18810004 	addi	r2,r3,1024
    c508:	00ffc034 	movhi	r3,65280
    c50c:	18ffffc4 	addi	r3,r3,-1
    c510:	88e2703a 	and	r17,r17,r3
    c514:	00c1ff84 	movi	r3,2046
    c518:	18bf1416 	blt	r3,r2,c16c <__alt_data_end+0xfffc2d8c>
    c51c:	882c977a 	slli	r22,r17,29
    c520:	9024d0fa 	srli	r18,r18,3
    c524:	8822927a 	slli	r17,r17,9
    c528:	1081ffcc 	andi	r2,r2,2047
    c52c:	b4acb03a 	or	r22,r22,r18
    c530:	8820d33a 	srli	r16,r17,12
    c534:	3027883a 	mov	r19,r6
    c538:	003ebb06 	br	c028 <__alt_data_end+0xfffc2c48>
    c53c:	8080022c 	andhi	r2,r16,8
    c540:	10000926 	beq	r2,zero,c568 <__muldf3+0x6bc>
    c544:	8880022c 	andhi	r2,r17,8
    c548:	1000071e 	bne	r2,zero,c568 <__muldf3+0x6bc>
    c54c:	00800434 	movhi	r2,16
    c550:	8c000234 	orhi	r16,r17,8
    c554:	10bfffc4 	addi	r2,r2,-1
    c558:	e027883a 	mov	r19,fp
    c55c:	80a0703a 	and	r16,r16,r2
    c560:	902d883a 	mov	r22,r18
    c564:	003f1806 	br	c1c8 <__alt_data_end+0xfffc2de8>
    c568:	00800434 	movhi	r2,16
    c56c:	84000234 	orhi	r16,r16,8
    c570:	10bfffc4 	addi	r2,r2,-1
    c574:	80a0703a 	and	r16,r16,r2
    c578:	003f1306 	br	c1c8 <__alt_data_end+0xfffc2de8>
    c57c:	147ff604 	addi	r17,r2,-40
    c580:	3462983a 	sll	r17,r6,r17
    c584:	0025883a 	mov	r18,zero
    c588:	003ef406 	br	c15c <__alt_data_end+0xfffc2d7c>
    c58c:	3009883a 	mov	r4,r6
    c590:	d9400215 	stw	r5,8(sp)
    c594:	d9800715 	stw	r6,28(sp)
    c598:	da400415 	stw	r9,16(sp)
    c59c:	da800315 	stw	r10,12(sp)
    c5a0:	000d2140 	call	d214 <__clzsi2>
    c5a4:	10800804 	addi	r2,r2,32
    c5a8:	da800317 	ldw	r10,12(sp)
    c5ac:	da400417 	ldw	r9,16(sp)
    c5b0:	d9800717 	ldw	r6,28(sp)
    c5b4:	d9400217 	ldw	r5,8(sp)
    c5b8:	003ede06 	br	c134 <__alt_data_end+0xfffc2d54>
    c5bc:	143ff604 	addi	r16,r2,-40
    c5c0:	ac20983a 	sll	r16,r21,r16
    c5c4:	002d883a 	mov	r22,zero
    c5c8:	003ec206 	br	c0d4 <__alt_data_end+0xfffc2cf4>
    c5cc:	d9800715 	stw	r6,28(sp)
    c5d0:	d9c00215 	stw	r7,8(sp)
    c5d4:	da400415 	stw	r9,16(sp)
    c5d8:	000d2140 	call	d214 <__clzsi2>
    c5dc:	10800804 	addi	r2,r2,32
    c5e0:	da400417 	ldw	r9,16(sp)
    c5e4:	d9c00217 	ldw	r7,8(sp)
    c5e8:	d9800717 	ldw	r6,28(sp)
    c5ec:	003eaf06 	br	c0ac <__alt_data_end+0xfffc2ccc>
    c5f0:	00c00044 	movi	r3,1
    c5f4:	1887c83a 	sub	r3,r3,r2
    c5f8:	01000e04 	movi	r4,56
    c5fc:	20fe8616 	blt	r4,r3,c018 <__alt_data_end+0xfffc2c38>
    c600:	010007c4 	movi	r4,31
    c604:	20c01b16 	blt	r4,r3,c674 <__muldf3+0x7c8>
    c608:	00800804 	movi	r2,32
    c60c:	10c5c83a 	sub	r2,r2,r3
    c610:	888a983a 	sll	r5,r17,r2
    c614:	90c8d83a 	srl	r4,r18,r3
    c618:	9084983a 	sll	r2,r18,r2
    c61c:	88e2d83a 	srl	r17,r17,r3
    c620:	2906b03a 	or	r3,r5,r4
    c624:	1004c03a 	cmpne	r2,r2,zero
    c628:	1886b03a 	or	r3,r3,r2
    c62c:	188001cc 	andi	r2,r3,7
    c630:	10000726 	beq	r2,zero,c650 <__muldf3+0x7a4>
    c634:	188003cc 	andi	r2,r3,15
    c638:	01000104 	movi	r4,4
    c63c:	11000426 	beq	r2,r4,c650 <__muldf3+0x7a4>
    c640:	1805883a 	mov	r2,r3
    c644:	10c00104 	addi	r3,r2,4
    c648:	1885803a 	cmpltu	r2,r3,r2
    c64c:	88a3883a 	add	r17,r17,r2
    c650:	8880202c 	andhi	r2,r17,128
    c654:	10001c26 	beq	r2,zero,c6c8 <__muldf3+0x81c>
    c658:	3027883a 	mov	r19,r6
    c65c:	00800044 	movi	r2,1
    c660:	0021883a 	mov	r16,zero
    c664:	002d883a 	mov	r22,zero
    c668:	003e6f06 	br	c028 <__alt_data_end+0xfffc2c48>
    c66c:	4007883a 	mov	r3,r8
    c670:	003f9706 	br	c4d0 <__alt_data_end+0xfffc30f0>
    c674:	017ff844 	movi	r5,-31
    c678:	2885c83a 	sub	r2,r5,r2
    c67c:	888ad83a 	srl	r5,r17,r2
    c680:	00800804 	movi	r2,32
    c684:	18801a26 	beq	r3,r2,c6f0 <__muldf3+0x844>
    c688:	01001004 	movi	r4,64
    c68c:	20c7c83a 	sub	r3,r4,r3
    c690:	88e2983a 	sll	r17,r17,r3
    c694:	8ca4b03a 	or	r18,r17,r18
    c698:	9004c03a 	cmpne	r2,r18,zero
    c69c:	2884b03a 	or	r2,r5,r2
    c6a0:	144001cc 	andi	r17,r2,7
    c6a4:	88000d1e 	bne	r17,zero,c6dc <__muldf3+0x830>
    c6a8:	0021883a 	mov	r16,zero
    c6ac:	102cd0fa 	srli	r22,r2,3
    c6b0:	3027883a 	mov	r19,r6
    c6b4:	0005883a 	mov	r2,zero
    c6b8:	b46cb03a 	or	r22,r22,r17
    c6bc:	003e5a06 	br	c028 <__alt_data_end+0xfffc2c48>
    c6c0:	1007883a 	mov	r3,r2
    c6c4:	0023883a 	mov	r17,zero
    c6c8:	8820927a 	slli	r16,r17,9
    c6cc:	1805883a 	mov	r2,r3
    c6d0:	8822977a 	slli	r17,r17,29
    c6d4:	8020d33a 	srli	r16,r16,12
    c6d8:	003ff406 	br	c6ac <__alt_data_end+0xfffc32cc>
    c6dc:	10c003cc 	andi	r3,r2,15
    c6e0:	01000104 	movi	r4,4
    c6e4:	193ff626 	beq	r3,r4,c6c0 <__alt_data_end+0xfffc32e0>
    c6e8:	0023883a 	mov	r17,zero
    c6ec:	003fd506 	br	c644 <__alt_data_end+0xfffc3264>
    c6f0:	0023883a 	mov	r17,zero
    c6f4:	003fe706 	br	c694 <__alt_data_end+0xfffc32b4>
    c6f8:	00800434 	movhi	r2,16
    c6fc:	8c000234 	orhi	r16,r17,8
    c700:	10bfffc4 	addi	r2,r2,-1
    c704:	3027883a 	mov	r19,r6
    c708:	80a0703a 	and	r16,r16,r2
    c70c:	902d883a 	mov	r22,r18
    c710:	003ead06 	br	c1c8 <__alt_data_end+0xfffc2de8>

0000c714 <__subdf3>:
    c714:	02000434 	movhi	r8,16
    c718:	423fffc4 	addi	r8,r8,-1
    c71c:	defffb04 	addi	sp,sp,-20
    c720:	2a14703a 	and	r10,r5,r8
    c724:	3812d53a 	srli	r9,r7,20
    c728:	3a10703a 	and	r8,r7,r8
    c72c:	2006d77a 	srli	r3,r4,29
    c730:	3004d77a 	srli	r2,r6,29
    c734:	dc000015 	stw	r16,0(sp)
    c738:	501490fa 	slli	r10,r10,3
    c73c:	2820d53a 	srli	r16,r5,20
    c740:	401090fa 	slli	r8,r8,3
    c744:	dc800215 	stw	r18,8(sp)
    c748:	dc400115 	stw	r17,4(sp)
    c74c:	dfc00415 	stw	ra,16(sp)
    c750:	202290fa 	slli	r17,r4,3
    c754:	dcc00315 	stw	r19,12(sp)
    c758:	4a41ffcc 	andi	r9,r9,2047
    c75c:	0101ffc4 	movi	r4,2047
    c760:	2824d7fa 	srli	r18,r5,31
    c764:	8401ffcc 	andi	r16,r16,2047
    c768:	50c6b03a 	or	r3,r10,r3
    c76c:	380ed7fa 	srli	r7,r7,31
    c770:	408ab03a 	or	r5,r8,r2
    c774:	300c90fa 	slli	r6,r6,3
    c778:	49009626 	beq	r9,r4,c9d4 <__subdf3+0x2c0>
    c77c:	39c0005c 	xori	r7,r7,1
    c780:	8245c83a 	sub	r2,r16,r9
    c784:	3c807426 	beq	r7,r18,c958 <__subdf3+0x244>
    c788:	0080af0e 	bge	zero,r2,ca48 <__subdf3+0x334>
    c78c:	48002a1e 	bne	r9,zero,c838 <__subdf3+0x124>
    c790:	2988b03a 	or	r4,r5,r6
    c794:	20009a1e 	bne	r4,zero,ca00 <__subdf3+0x2ec>
    c798:	888001cc 	andi	r2,r17,7
    c79c:	10000726 	beq	r2,zero,c7bc <__subdf3+0xa8>
    c7a0:	888003cc 	andi	r2,r17,15
    c7a4:	01000104 	movi	r4,4
    c7a8:	11000426 	beq	r2,r4,c7bc <__subdf3+0xa8>
    c7ac:	890b883a 	add	r5,r17,r4
    c7b0:	2c63803a 	cmpltu	r17,r5,r17
    c7b4:	1c47883a 	add	r3,r3,r17
    c7b8:	2823883a 	mov	r17,r5
    c7bc:	1880202c 	andhi	r2,r3,128
    c7c0:	10005926 	beq	r2,zero,c928 <__subdf3+0x214>
    c7c4:	84000044 	addi	r16,r16,1
    c7c8:	0081ffc4 	movi	r2,2047
    c7cc:	8080be26 	beq	r16,r2,cac8 <__subdf3+0x3b4>
    c7d0:	017fe034 	movhi	r5,65408
    c7d4:	297fffc4 	addi	r5,r5,-1
    c7d8:	1946703a 	and	r3,r3,r5
    c7dc:	1804977a 	slli	r2,r3,29
    c7e0:	1806927a 	slli	r3,r3,9
    c7e4:	8822d0fa 	srli	r17,r17,3
    c7e8:	8401ffcc 	andi	r16,r16,2047
    c7ec:	180ad33a 	srli	r5,r3,12
    c7f0:	9100004c 	andi	r4,r18,1
    c7f4:	1444b03a 	or	r2,r2,r17
    c7f8:	80c1ffcc 	andi	r3,r16,2047
    c7fc:	1820953a 	slli	r16,r3,20
    c800:	20c03fcc 	andi	r3,r4,255
    c804:	180897fa 	slli	r4,r3,31
    c808:	00c00434 	movhi	r3,16
    c80c:	18ffffc4 	addi	r3,r3,-1
    c810:	28c6703a 	and	r3,r5,r3
    c814:	1c06b03a 	or	r3,r3,r16
    c818:	1906b03a 	or	r3,r3,r4
    c81c:	dfc00417 	ldw	ra,16(sp)
    c820:	dcc00317 	ldw	r19,12(sp)
    c824:	dc800217 	ldw	r18,8(sp)
    c828:	dc400117 	ldw	r17,4(sp)
    c82c:	dc000017 	ldw	r16,0(sp)
    c830:	dec00504 	addi	sp,sp,20
    c834:	f800283a 	ret
    c838:	0101ffc4 	movi	r4,2047
    c83c:	813fd626 	beq	r16,r4,c798 <__alt_data_end+0xfffc33b8>
    c840:	29402034 	orhi	r5,r5,128
    c844:	01000e04 	movi	r4,56
    c848:	2080a316 	blt	r4,r2,cad8 <__subdf3+0x3c4>
    c84c:	010007c4 	movi	r4,31
    c850:	2080c616 	blt	r4,r2,cb6c <__subdf3+0x458>
    c854:	01000804 	movi	r4,32
    c858:	2089c83a 	sub	r4,r4,r2
    c85c:	2910983a 	sll	r8,r5,r4
    c860:	308ed83a 	srl	r7,r6,r2
    c864:	3108983a 	sll	r4,r6,r4
    c868:	2884d83a 	srl	r2,r5,r2
    c86c:	41ccb03a 	or	r6,r8,r7
    c870:	2008c03a 	cmpne	r4,r4,zero
    c874:	310cb03a 	or	r6,r6,r4
    c878:	898dc83a 	sub	r6,r17,r6
    c87c:	89a3803a 	cmpltu	r17,r17,r6
    c880:	1887c83a 	sub	r3,r3,r2
    c884:	1c47c83a 	sub	r3,r3,r17
    c888:	3023883a 	mov	r17,r6
    c88c:	1880202c 	andhi	r2,r3,128
    c890:	10002326 	beq	r2,zero,c920 <__subdf3+0x20c>
    c894:	04c02034 	movhi	r19,128
    c898:	9cffffc4 	addi	r19,r19,-1
    c89c:	1ce6703a 	and	r19,r3,r19
    c8a0:	98007a26 	beq	r19,zero,ca8c <__subdf3+0x378>
    c8a4:	9809883a 	mov	r4,r19
    c8a8:	000d2140 	call	d214 <__clzsi2>
    c8ac:	113ffe04 	addi	r4,r2,-8
    c8b0:	00c007c4 	movi	r3,31
    c8b4:	19007b16 	blt	r3,r4,caa4 <__subdf3+0x390>
    c8b8:	00800804 	movi	r2,32
    c8bc:	1105c83a 	sub	r2,r2,r4
    c8c0:	8884d83a 	srl	r2,r17,r2
    c8c4:	9906983a 	sll	r3,r19,r4
    c8c8:	8922983a 	sll	r17,r17,r4
    c8cc:	10c4b03a 	or	r2,r2,r3
    c8d0:	24007816 	blt	r4,r16,cab4 <__subdf3+0x3a0>
    c8d4:	2421c83a 	sub	r16,r4,r16
    c8d8:	80c00044 	addi	r3,r16,1
    c8dc:	010007c4 	movi	r4,31
    c8e0:	20c09516 	blt	r4,r3,cb38 <__subdf3+0x424>
    c8e4:	01400804 	movi	r5,32
    c8e8:	28cbc83a 	sub	r5,r5,r3
    c8ec:	88c8d83a 	srl	r4,r17,r3
    c8f0:	8962983a 	sll	r17,r17,r5
    c8f4:	114a983a 	sll	r5,r2,r5
    c8f8:	10c6d83a 	srl	r3,r2,r3
    c8fc:	8804c03a 	cmpne	r2,r17,zero
    c900:	290ab03a 	or	r5,r5,r4
    c904:	28a2b03a 	or	r17,r5,r2
    c908:	0021883a 	mov	r16,zero
    c90c:	003fa206 	br	c798 <__alt_data_end+0xfffc33b8>
    c910:	2090b03a 	or	r8,r4,r2
    c914:	40018e26 	beq	r8,zero,cf50 <__subdf3+0x83c>
    c918:	1007883a 	mov	r3,r2
    c91c:	2023883a 	mov	r17,r4
    c920:	888001cc 	andi	r2,r17,7
    c924:	103f9e1e 	bne	r2,zero,c7a0 <__alt_data_end+0xfffc33c0>
    c928:	1804977a 	slli	r2,r3,29
    c92c:	8822d0fa 	srli	r17,r17,3
    c930:	1810d0fa 	srli	r8,r3,3
    c934:	9100004c 	andi	r4,r18,1
    c938:	1444b03a 	or	r2,r2,r17
    c93c:	00c1ffc4 	movi	r3,2047
    c940:	80c02826 	beq	r16,r3,c9e4 <__subdf3+0x2d0>
    c944:	01400434 	movhi	r5,16
    c948:	297fffc4 	addi	r5,r5,-1
    c94c:	80e0703a 	and	r16,r16,r3
    c950:	414a703a 	and	r5,r8,r5
    c954:	003fa806 	br	c7f8 <__alt_data_end+0xfffc3418>
    c958:	0080630e 	bge	zero,r2,cae8 <__subdf3+0x3d4>
    c95c:	48003026 	beq	r9,zero,ca20 <__subdf3+0x30c>
    c960:	0101ffc4 	movi	r4,2047
    c964:	813f8c26 	beq	r16,r4,c798 <__alt_data_end+0xfffc33b8>
    c968:	29402034 	orhi	r5,r5,128
    c96c:	01000e04 	movi	r4,56
    c970:	2080a90e 	bge	r4,r2,cc18 <__subdf3+0x504>
    c974:	298cb03a 	or	r6,r5,r6
    c978:	3012c03a 	cmpne	r9,r6,zero
    c97c:	0005883a 	mov	r2,zero
    c980:	4c53883a 	add	r9,r9,r17
    c984:	4c63803a 	cmpltu	r17,r9,r17
    c988:	10c7883a 	add	r3,r2,r3
    c98c:	88c7883a 	add	r3,r17,r3
    c990:	4823883a 	mov	r17,r9
    c994:	1880202c 	andhi	r2,r3,128
    c998:	1000d026 	beq	r2,zero,ccdc <__subdf3+0x5c8>
    c99c:	84000044 	addi	r16,r16,1
    c9a0:	0081ffc4 	movi	r2,2047
    c9a4:	8080fe26 	beq	r16,r2,cda0 <__subdf3+0x68c>
    c9a8:	00bfe034 	movhi	r2,65408
    c9ac:	10bfffc4 	addi	r2,r2,-1
    c9b0:	1886703a 	and	r3,r3,r2
    c9b4:	880ad07a 	srli	r5,r17,1
    c9b8:	180497fa 	slli	r2,r3,31
    c9bc:	8900004c 	andi	r4,r17,1
    c9c0:	2922b03a 	or	r17,r5,r4
    c9c4:	1806d07a 	srli	r3,r3,1
    c9c8:	1462b03a 	or	r17,r2,r17
    c9cc:	3825883a 	mov	r18,r7
    c9d0:	003f7106 	br	c798 <__alt_data_end+0xfffc33b8>
    c9d4:	2984b03a 	or	r2,r5,r6
    c9d8:	103f6826 	beq	r2,zero,c77c <__alt_data_end+0xfffc339c>
    c9dc:	39c03fcc 	andi	r7,r7,255
    c9e0:	003f6706 	br	c780 <__alt_data_end+0xfffc33a0>
    c9e4:	4086b03a 	or	r3,r8,r2
    c9e8:	18015226 	beq	r3,zero,cf34 <__subdf3+0x820>
    c9ec:	00c00434 	movhi	r3,16
    c9f0:	41400234 	orhi	r5,r8,8
    c9f4:	18ffffc4 	addi	r3,r3,-1
    c9f8:	28ca703a 	and	r5,r5,r3
    c9fc:	003f7e06 	br	c7f8 <__alt_data_end+0xfffc3418>
    ca00:	10bfffc4 	addi	r2,r2,-1
    ca04:	1000491e 	bne	r2,zero,cb2c <__subdf3+0x418>
    ca08:	898fc83a 	sub	r7,r17,r6
    ca0c:	89e3803a 	cmpltu	r17,r17,r7
    ca10:	1947c83a 	sub	r3,r3,r5
    ca14:	1c47c83a 	sub	r3,r3,r17
    ca18:	3823883a 	mov	r17,r7
    ca1c:	003f9b06 	br	c88c <__alt_data_end+0xfffc34ac>
    ca20:	2988b03a 	or	r4,r5,r6
    ca24:	203f5c26 	beq	r4,zero,c798 <__alt_data_end+0xfffc33b8>
    ca28:	10bfffc4 	addi	r2,r2,-1
    ca2c:	1000931e 	bne	r2,zero,cc7c <__subdf3+0x568>
    ca30:	898d883a 	add	r6,r17,r6
    ca34:	3463803a 	cmpltu	r17,r6,r17
    ca38:	1947883a 	add	r3,r3,r5
    ca3c:	88c7883a 	add	r3,r17,r3
    ca40:	3023883a 	mov	r17,r6
    ca44:	003fd306 	br	c994 <__alt_data_end+0xfffc35b4>
    ca48:	1000541e 	bne	r2,zero,cb9c <__subdf3+0x488>
    ca4c:	80800044 	addi	r2,r16,1
    ca50:	1081ffcc 	andi	r2,r2,2047
    ca54:	01000044 	movi	r4,1
    ca58:	2080a20e 	bge	r4,r2,cce4 <__subdf3+0x5d0>
    ca5c:	8989c83a 	sub	r4,r17,r6
    ca60:	8905803a 	cmpltu	r2,r17,r4
    ca64:	1967c83a 	sub	r19,r3,r5
    ca68:	98a7c83a 	sub	r19,r19,r2
    ca6c:	9880202c 	andhi	r2,r19,128
    ca70:	10006326 	beq	r2,zero,cc00 <__subdf3+0x4ec>
    ca74:	3463c83a 	sub	r17,r6,r17
    ca78:	28c7c83a 	sub	r3,r5,r3
    ca7c:	344d803a 	cmpltu	r6,r6,r17
    ca80:	19a7c83a 	sub	r19,r3,r6
    ca84:	3825883a 	mov	r18,r7
    ca88:	983f861e 	bne	r19,zero,c8a4 <__alt_data_end+0xfffc34c4>
    ca8c:	8809883a 	mov	r4,r17
    ca90:	000d2140 	call	d214 <__clzsi2>
    ca94:	10800804 	addi	r2,r2,32
    ca98:	113ffe04 	addi	r4,r2,-8
    ca9c:	00c007c4 	movi	r3,31
    caa0:	193f850e 	bge	r3,r4,c8b8 <__alt_data_end+0xfffc34d8>
    caa4:	10bff604 	addi	r2,r2,-40
    caa8:	8884983a 	sll	r2,r17,r2
    caac:	0023883a 	mov	r17,zero
    cab0:	243f880e 	bge	r4,r16,c8d4 <__alt_data_end+0xfffc34f4>
    cab4:	00ffe034 	movhi	r3,65408
    cab8:	18ffffc4 	addi	r3,r3,-1
    cabc:	8121c83a 	sub	r16,r16,r4
    cac0:	10c6703a 	and	r3,r2,r3
    cac4:	003f3406 	br	c798 <__alt_data_end+0xfffc33b8>
    cac8:	9100004c 	andi	r4,r18,1
    cacc:	000b883a 	mov	r5,zero
    cad0:	0005883a 	mov	r2,zero
    cad4:	003f4806 	br	c7f8 <__alt_data_end+0xfffc3418>
    cad8:	298cb03a 	or	r6,r5,r6
    cadc:	300cc03a 	cmpne	r6,r6,zero
    cae0:	0005883a 	mov	r2,zero
    cae4:	003f6406 	br	c878 <__alt_data_end+0xfffc3498>
    cae8:	10009a1e 	bne	r2,zero,cd54 <__subdf3+0x640>
    caec:	82400044 	addi	r9,r16,1
    caf0:	4881ffcc 	andi	r2,r9,2047
    caf4:	02800044 	movi	r10,1
    caf8:	5080670e 	bge	r10,r2,cc98 <__subdf3+0x584>
    cafc:	0081ffc4 	movi	r2,2047
    cb00:	4880af26 	beq	r9,r2,cdc0 <__subdf3+0x6ac>
    cb04:	898d883a 	add	r6,r17,r6
    cb08:	1945883a 	add	r2,r3,r5
    cb0c:	3447803a 	cmpltu	r3,r6,r17
    cb10:	1887883a 	add	r3,r3,r2
    cb14:	182297fa 	slli	r17,r3,31
    cb18:	300cd07a 	srli	r6,r6,1
    cb1c:	1806d07a 	srli	r3,r3,1
    cb20:	4821883a 	mov	r16,r9
    cb24:	89a2b03a 	or	r17,r17,r6
    cb28:	003f1b06 	br	c798 <__alt_data_end+0xfffc33b8>
    cb2c:	0101ffc4 	movi	r4,2047
    cb30:	813f441e 	bne	r16,r4,c844 <__alt_data_end+0xfffc3464>
    cb34:	003f1806 	br	c798 <__alt_data_end+0xfffc33b8>
    cb38:	843ff844 	addi	r16,r16,-31
    cb3c:	01400804 	movi	r5,32
    cb40:	1408d83a 	srl	r4,r2,r16
    cb44:	19405026 	beq	r3,r5,cc88 <__subdf3+0x574>
    cb48:	01401004 	movi	r5,64
    cb4c:	28c7c83a 	sub	r3,r5,r3
    cb50:	10c4983a 	sll	r2,r2,r3
    cb54:	88a2b03a 	or	r17,r17,r2
    cb58:	8822c03a 	cmpne	r17,r17,zero
    cb5c:	2462b03a 	or	r17,r4,r17
    cb60:	0007883a 	mov	r3,zero
    cb64:	0021883a 	mov	r16,zero
    cb68:	003f6d06 	br	c920 <__alt_data_end+0xfffc3540>
    cb6c:	11fff804 	addi	r7,r2,-32
    cb70:	01000804 	movi	r4,32
    cb74:	29ced83a 	srl	r7,r5,r7
    cb78:	11004526 	beq	r2,r4,cc90 <__subdf3+0x57c>
    cb7c:	01001004 	movi	r4,64
    cb80:	2089c83a 	sub	r4,r4,r2
    cb84:	2904983a 	sll	r2,r5,r4
    cb88:	118cb03a 	or	r6,r2,r6
    cb8c:	300cc03a 	cmpne	r6,r6,zero
    cb90:	398cb03a 	or	r6,r7,r6
    cb94:	0005883a 	mov	r2,zero
    cb98:	003f3706 	br	c878 <__alt_data_end+0xfffc3498>
    cb9c:	80002a26 	beq	r16,zero,cc48 <__subdf3+0x534>
    cba0:	0101ffc4 	movi	r4,2047
    cba4:	49006626 	beq	r9,r4,cd40 <__subdf3+0x62c>
    cba8:	0085c83a 	sub	r2,zero,r2
    cbac:	18c02034 	orhi	r3,r3,128
    cbb0:	01000e04 	movi	r4,56
    cbb4:	20807e16 	blt	r4,r2,cdb0 <__subdf3+0x69c>
    cbb8:	010007c4 	movi	r4,31
    cbbc:	2080e716 	blt	r4,r2,cf5c <__subdf3+0x848>
    cbc0:	01000804 	movi	r4,32
    cbc4:	2089c83a 	sub	r4,r4,r2
    cbc8:	1914983a 	sll	r10,r3,r4
    cbcc:	8890d83a 	srl	r8,r17,r2
    cbd0:	8908983a 	sll	r4,r17,r4
    cbd4:	1884d83a 	srl	r2,r3,r2
    cbd8:	5222b03a 	or	r17,r10,r8
    cbdc:	2006c03a 	cmpne	r3,r4,zero
    cbe0:	88e2b03a 	or	r17,r17,r3
    cbe4:	3463c83a 	sub	r17,r6,r17
    cbe8:	2885c83a 	sub	r2,r5,r2
    cbec:	344d803a 	cmpltu	r6,r6,r17
    cbf0:	1187c83a 	sub	r3,r2,r6
    cbf4:	4821883a 	mov	r16,r9
    cbf8:	3825883a 	mov	r18,r7
    cbfc:	003f2306 	br	c88c <__alt_data_end+0xfffc34ac>
    cc00:	24d0b03a 	or	r8,r4,r19
    cc04:	40001b1e 	bne	r8,zero,cc74 <__subdf3+0x560>
    cc08:	0005883a 	mov	r2,zero
    cc0c:	0009883a 	mov	r4,zero
    cc10:	0021883a 	mov	r16,zero
    cc14:	003f4906 	br	c93c <__alt_data_end+0xfffc355c>
    cc18:	010007c4 	movi	r4,31
    cc1c:	20803a16 	blt	r4,r2,cd08 <__subdf3+0x5f4>
    cc20:	01000804 	movi	r4,32
    cc24:	2089c83a 	sub	r4,r4,r2
    cc28:	2912983a 	sll	r9,r5,r4
    cc2c:	3090d83a 	srl	r8,r6,r2
    cc30:	3108983a 	sll	r4,r6,r4
    cc34:	2884d83a 	srl	r2,r5,r2
    cc38:	4a12b03a 	or	r9,r9,r8
    cc3c:	2008c03a 	cmpne	r4,r4,zero
    cc40:	4912b03a 	or	r9,r9,r4
    cc44:	003f4e06 	br	c980 <__alt_data_end+0xfffc35a0>
    cc48:	1c48b03a 	or	r4,r3,r17
    cc4c:	20003c26 	beq	r4,zero,cd40 <__subdf3+0x62c>
    cc50:	0084303a 	nor	r2,zero,r2
    cc54:	1000381e 	bne	r2,zero,cd38 <__subdf3+0x624>
    cc58:	3463c83a 	sub	r17,r6,r17
    cc5c:	28c5c83a 	sub	r2,r5,r3
    cc60:	344d803a 	cmpltu	r6,r6,r17
    cc64:	1187c83a 	sub	r3,r2,r6
    cc68:	4821883a 	mov	r16,r9
    cc6c:	3825883a 	mov	r18,r7
    cc70:	003f0606 	br	c88c <__alt_data_end+0xfffc34ac>
    cc74:	2023883a 	mov	r17,r4
    cc78:	003f0906 	br	c8a0 <__alt_data_end+0xfffc34c0>
    cc7c:	0101ffc4 	movi	r4,2047
    cc80:	813f3a1e 	bne	r16,r4,c96c <__alt_data_end+0xfffc358c>
    cc84:	003ec406 	br	c798 <__alt_data_end+0xfffc33b8>
    cc88:	0005883a 	mov	r2,zero
    cc8c:	003fb106 	br	cb54 <__alt_data_end+0xfffc3774>
    cc90:	0005883a 	mov	r2,zero
    cc94:	003fbc06 	br	cb88 <__alt_data_end+0xfffc37a8>
    cc98:	1c44b03a 	or	r2,r3,r17
    cc9c:	80008e1e 	bne	r16,zero,ced8 <__subdf3+0x7c4>
    cca0:	1000c826 	beq	r2,zero,cfc4 <__subdf3+0x8b0>
    cca4:	2984b03a 	or	r2,r5,r6
    cca8:	103ebb26 	beq	r2,zero,c798 <__alt_data_end+0xfffc33b8>
    ccac:	8989883a 	add	r4,r17,r6
    ccb0:	1945883a 	add	r2,r3,r5
    ccb4:	2447803a 	cmpltu	r3,r4,r17
    ccb8:	1887883a 	add	r3,r3,r2
    ccbc:	1880202c 	andhi	r2,r3,128
    ccc0:	2023883a 	mov	r17,r4
    ccc4:	103f1626 	beq	r2,zero,c920 <__alt_data_end+0xfffc3540>
    ccc8:	00bfe034 	movhi	r2,65408
    cccc:	10bfffc4 	addi	r2,r2,-1
    ccd0:	5021883a 	mov	r16,r10
    ccd4:	1886703a 	and	r3,r3,r2
    ccd8:	003eaf06 	br	c798 <__alt_data_end+0xfffc33b8>
    ccdc:	3825883a 	mov	r18,r7
    cce0:	003f0f06 	br	c920 <__alt_data_end+0xfffc3540>
    cce4:	1c44b03a 	or	r2,r3,r17
    cce8:	8000251e 	bne	r16,zero,cd80 <__subdf3+0x66c>
    ccec:	1000661e 	bne	r2,zero,ce88 <__subdf3+0x774>
    ccf0:	2990b03a 	or	r8,r5,r6
    ccf4:	40009626 	beq	r8,zero,cf50 <__subdf3+0x83c>
    ccf8:	2807883a 	mov	r3,r5
    ccfc:	3023883a 	mov	r17,r6
    cd00:	3825883a 	mov	r18,r7
    cd04:	003ea406 	br	c798 <__alt_data_end+0xfffc33b8>
    cd08:	127ff804 	addi	r9,r2,-32
    cd0c:	01000804 	movi	r4,32
    cd10:	2a52d83a 	srl	r9,r5,r9
    cd14:	11008c26 	beq	r2,r4,cf48 <__subdf3+0x834>
    cd18:	01001004 	movi	r4,64
    cd1c:	2085c83a 	sub	r2,r4,r2
    cd20:	2884983a 	sll	r2,r5,r2
    cd24:	118cb03a 	or	r6,r2,r6
    cd28:	300cc03a 	cmpne	r6,r6,zero
    cd2c:	4992b03a 	or	r9,r9,r6
    cd30:	0005883a 	mov	r2,zero
    cd34:	003f1206 	br	c980 <__alt_data_end+0xfffc35a0>
    cd38:	0101ffc4 	movi	r4,2047
    cd3c:	493f9c1e 	bne	r9,r4,cbb0 <__alt_data_end+0xfffc37d0>
    cd40:	2807883a 	mov	r3,r5
    cd44:	3023883a 	mov	r17,r6
    cd48:	4821883a 	mov	r16,r9
    cd4c:	3825883a 	mov	r18,r7
    cd50:	003e9106 	br	c798 <__alt_data_end+0xfffc33b8>
    cd54:	80001f1e 	bne	r16,zero,cdd4 <__subdf3+0x6c0>
    cd58:	1c48b03a 	or	r4,r3,r17
    cd5c:	20005a26 	beq	r4,zero,cec8 <__subdf3+0x7b4>
    cd60:	0084303a 	nor	r2,zero,r2
    cd64:	1000561e 	bne	r2,zero,cec0 <__subdf3+0x7ac>
    cd68:	89a3883a 	add	r17,r17,r6
    cd6c:	1945883a 	add	r2,r3,r5
    cd70:	898d803a 	cmpltu	r6,r17,r6
    cd74:	3087883a 	add	r3,r6,r2
    cd78:	4821883a 	mov	r16,r9
    cd7c:	003f0506 	br	c994 <__alt_data_end+0xfffc35b4>
    cd80:	10002b1e 	bne	r2,zero,ce30 <__subdf3+0x71c>
    cd84:	2984b03a 	or	r2,r5,r6
    cd88:	10008026 	beq	r2,zero,cf8c <__subdf3+0x878>
    cd8c:	2807883a 	mov	r3,r5
    cd90:	3023883a 	mov	r17,r6
    cd94:	3825883a 	mov	r18,r7
    cd98:	0401ffc4 	movi	r16,2047
    cd9c:	003e7e06 	br	c798 <__alt_data_end+0xfffc33b8>
    cda0:	3809883a 	mov	r4,r7
    cda4:	0011883a 	mov	r8,zero
    cda8:	0005883a 	mov	r2,zero
    cdac:	003ee306 	br	c93c <__alt_data_end+0xfffc355c>
    cdb0:	1c62b03a 	or	r17,r3,r17
    cdb4:	8822c03a 	cmpne	r17,r17,zero
    cdb8:	0005883a 	mov	r2,zero
    cdbc:	003f8906 	br	cbe4 <__alt_data_end+0xfffc3804>
    cdc0:	3809883a 	mov	r4,r7
    cdc4:	4821883a 	mov	r16,r9
    cdc8:	0011883a 	mov	r8,zero
    cdcc:	0005883a 	mov	r2,zero
    cdd0:	003eda06 	br	c93c <__alt_data_end+0xfffc355c>
    cdd4:	0101ffc4 	movi	r4,2047
    cdd8:	49003b26 	beq	r9,r4,cec8 <__subdf3+0x7b4>
    cddc:	0085c83a 	sub	r2,zero,r2
    cde0:	18c02034 	orhi	r3,r3,128
    cde4:	01000e04 	movi	r4,56
    cde8:	20806e16 	blt	r4,r2,cfa4 <__subdf3+0x890>
    cdec:	010007c4 	movi	r4,31
    cdf0:	20807716 	blt	r4,r2,cfd0 <__subdf3+0x8bc>
    cdf4:	01000804 	movi	r4,32
    cdf8:	2089c83a 	sub	r4,r4,r2
    cdfc:	1914983a 	sll	r10,r3,r4
    ce00:	8890d83a 	srl	r8,r17,r2
    ce04:	8908983a 	sll	r4,r17,r4
    ce08:	1884d83a 	srl	r2,r3,r2
    ce0c:	5222b03a 	or	r17,r10,r8
    ce10:	2006c03a 	cmpne	r3,r4,zero
    ce14:	88e2b03a 	or	r17,r17,r3
    ce18:	89a3883a 	add	r17,r17,r6
    ce1c:	1145883a 	add	r2,r2,r5
    ce20:	898d803a 	cmpltu	r6,r17,r6
    ce24:	3087883a 	add	r3,r6,r2
    ce28:	4821883a 	mov	r16,r9
    ce2c:	003ed906 	br	c994 <__alt_data_end+0xfffc35b4>
    ce30:	2984b03a 	or	r2,r5,r6
    ce34:	10004226 	beq	r2,zero,cf40 <__subdf3+0x82c>
    ce38:	1808d0fa 	srli	r4,r3,3
    ce3c:	8822d0fa 	srli	r17,r17,3
    ce40:	1806977a 	slli	r3,r3,29
    ce44:	2080022c 	andhi	r2,r4,8
    ce48:	1c62b03a 	or	r17,r3,r17
    ce4c:	10000826 	beq	r2,zero,ce70 <__subdf3+0x75c>
    ce50:	2812d0fa 	srli	r9,r5,3
    ce54:	4880022c 	andhi	r2,r9,8
    ce58:	1000051e 	bne	r2,zero,ce70 <__subdf3+0x75c>
    ce5c:	300cd0fa 	srli	r6,r6,3
    ce60:	2804977a 	slli	r2,r5,29
    ce64:	4809883a 	mov	r4,r9
    ce68:	3825883a 	mov	r18,r7
    ce6c:	11a2b03a 	or	r17,r2,r6
    ce70:	8806d77a 	srli	r3,r17,29
    ce74:	200890fa 	slli	r4,r4,3
    ce78:	882290fa 	slli	r17,r17,3
    ce7c:	0401ffc4 	movi	r16,2047
    ce80:	1906b03a 	or	r3,r3,r4
    ce84:	003e4406 	br	c798 <__alt_data_end+0xfffc33b8>
    ce88:	2984b03a 	or	r2,r5,r6
    ce8c:	103e4226 	beq	r2,zero,c798 <__alt_data_end+0xfffc33b8>
    ce90:	8989c83a 	sub	r4,r17,r6
    ce94:	8911803a 	cmpltu	r8,r17,r4
    ce98:	1945c83a 	sub	r2,r3,r5
    ce9c:	1205c83a 	sub	r2,r2,r8
    cea0:	1200202c 	andhi	r8,r2,128
    cea4:	403e9a26 	beq	r8,zero,c910 <__alt_data_end+0xfffc3530>
    cea8:	3463c83a 	sub	r17,r6,r17
    ceac:	28c5c83a 	sub	r2,r5,r3
    ceb0:	344d803a 	cmpltu	r6,r6,r17
    ceb4:	1187c83a 	sub	r3,r2,r6
    ceb8:	3825883a 	mov	r18,r7
    cebc:	003e3606 	br	c798 <__alt_data_end+0xfffc33b8>
    cec0:	0101ffc4 	movi	r4,2047
    cec4:	493fc71e 	bne	r9,r4,cde4 <__alt_data_end+0xfffc3a04>
    cec8:	2807883a 	mov	r3,r5
    cecc:	3023883a 	mov	r17,r6
    ced0:	4821883a 	mov	r16,r9
    ced4:	003e3006 	br	c798 <__alt_data_end+0xfffc33b8>
    ced8:	10003626 	beq	r2,zero,cfb4 <__subdf3+0x8a0>
    cedc:	2984b03a 	or	r2,r5,r6
    cee0:	10001726 	beq	r2,zero,cf40 <__subdf3+0x82c>
    cee4:	1808d0fa 	srli	r4,r3,3
    cee8:	8822d0fa 	srli	r17,r17,3
    ceec:	1806977a 	slli	r3,r3,29
    cef0:	2080022c 	andhi	r2,r4,8
    cef4:	1c62b03a 	or	r17,r3,r17
    cef8:	10000726 	beq	r2,zero,cf18 <__subdf3+0x804>
    cefc:	2812d0fa 	srli	r9,r5,3
    cf00:	4880022c 	andhi	r2,r9,8
    cf04:	1000041e 	bne	r2,zero,cf18 <__subdf3+0x804>
    cf08:	300cd0fa 	srli	r6,r6,3
    cf0c:	2804977a 	slli	r2,r5,29
    cf10:	4809883a 	mov	r4,r9
    cf14:	11a2b03a 	or	r17,r2,r6
    cf18:	8806d77a 	srli	r3,r17,29
    cf1c:	200890fa 	slli	r4,r4,3
    cf20:	882290fa 	slli	r17,r17,3
    cf24:	3825883a 	mov	r18,r7
    cf28:	1906b03a 	or	r3,r3,r4
    cf2c:	0401ffc4 	movi	r16,2047
    cf30:	003e1906 	br	c798 <__alt_data_end+0xfffc33b8>
    cf34:	000b883a 	mov	r5,zero
    cf38:	0005883a 	mov	r2,zero
    cf3c:	003e2e06 	br	c7f8 <__alt_data_end+0xfffc3418>
    cf40:	0401ffc4 	movi	r16,2047
    cf44:	003e1406 	br	c798 <__alt_data_end+0xfffc33b8>
    cf48:	0005883a 	mov	r2,zero
    cf4c:	003f7506 	br	cd24 <__alt_data_end+0xfffc3944>
    cf50:	0005883a 	mov	r2,zero
    cf54:	0009883a 	mov	r4,zero
    cf58:	003e7806 	br	c93c <__alt_data_end+0xfffc355c>
    cf5c:	123ff804 	addi	r8,r2,-32
    cf60:	01000804 	movi	r4,32
    cf64:	1a10d83a 	srl	r8,r3,r8
    cf68:	11002526 	beq	r2,r4,d000 <__subdf3+0x8ec>
    cf6c:	01001004 	movi	r4,64
    cf70:	2085c83a 	sub	r2,r4,r2
    cf74:	1884983a 	sll	r2,r3,r2
    cf78:	1444b03a 	or	r2,r2,r17
    cf7c:	1004c03a 	cmpne	r2,r2,zero
    cf80:	40a2b03a 	or	r17,r8,r2
    cf84:	0005883a 	mov	r2,zero
    cf88:	003f1606 	br	cbe4 <__alt_data_end+0xfffc3804>
    cf8c:	02000434 	movhi	r8,16
    cf90:	0009883a 	mov	r4,zero
    cf94:	423fffc4 	addi	r8,r8,-1
    cf98:	00bfffc4 	movi	r2,-1
    cf9c:	0401ffc4 	movi	r16,2047
    cfa0:	003e6606 	br	c93c <__alt_data_end+0xfffc355c>
    cfa4:	1c62b03a 	or	r17,r3,r17
    cfa8:	8822c03a 	cmpne	r17,r17,zero
    cfac:	0005883a 	mov	r2,zero
    cfb0:	003f9906 	br	ce18 <__alt_data_end+0xfffc3a38>
    cfb4:	2807883a 	mov	r3,r5
    cfb8:	3023883a 	mov	r17,r6
    cfbc:	0401ffc4 	movi	r16,2047
    cfc0:	003df506 	br	c798 <__alt_data_end+0xfffc33b8>
    cfc4:	2807883a 	mov	r3,r5
    cfc8:	3023883a 	mov	r17,r6
    cfcc:	003df206 	br	c798 <__alt_data_end+0xfffc33b8>
    cfd0:	123ff804 	addi	r8,r2,-32
    cfd4:	01000804 	movi	r4,32
    cfd8:	1a10d83a 	srl	r8,r3,r8
    cfdc:	11000a26 	beq	r2,r4,d008 <__subdf3+0x8f4>
    cfe0:	01001004 	movi	r4,64
    cfe4:	2085c83a 	sub	r2,r4,r2
    cfe8:	1884983a 	sll	r2,r3,r2
    cfec:	1444b03a 	or	r2,r2,r17
    cff0:	1004c03a 	cmpne	r2,r2,zero
    cff4:	40a2b03a 	or	r17,r8,r2
    cff8:	0005883a 	mov	r2,zero
    cffc:	003f8606 	br	ce18 <__alt_data_end+0xfffc3a38>
    d000:	0005883a 	mov	r2,zero
    d004:	003fdc06 	br	cf78 <__alt_data_end+0xfffc3b98>
    d008:	0005883a 	mov	r2,zero
    d00c:	003ff706 	br	cfec <__alt_data_end+0xfffc3c0c>

0000d010 <__fixdfsi>:
    d010:	280cd53a 	srli	r6,r5,20
    d014:	00c00434 	movhi	r3,16
    d018:	18ffffc4 	addi	r3,r3,-1
    d01c:	3181ffcc 	andi	r6,r6,2047
    d020:	01c0ff84 	movi	r7,1022
    d024:	28c6703a 	and	r3,r5,r3
    d028:	280ad7fa 	srli	r5,r5,31
    d02c:	3980120e 	bge	r7,r6,d078 <__fixdfsi+0x68>
    d030:	00810744 	movi	r2,1053
    d034:	11800c16 	blt	r2,r6,d068 <__fixdfsi+0x58>
    d038:	00810cc4 	movi	r2,1075
    d03c:	1185c83a 	sub	r2,r2,r6
    d040:	01c007c4 	movi	r7,31
    d044:	18c00434 	orhi	r3,r3,16
    d048:	38800d16 	blt	r7,r2,d080 <__fixdfsi+0x70>
    d04c:	31befb44 	addi	r6,r6,-1043
    d050:	2084d83a 	srl	r2,r4,r2
    d054:	1986983a 	sll	r3,r3,r6
    d058:	1884b03a 	or	r2,r3,r2
    d05c:	28000726 	beq	r5,zero,d07c <__fixdfsi+0x6c>
    d060:	0085c83a 	sub	r2,zero,r2
    d064:	f800283a 	ret
    d068:	00a00034 	movhi	r2,32768
    d06c:	10bfffc4 	addi	r2,r2,-1
    d070:	2885883a 	add	r2,r5,r2
    d074:	f800283a 	ret
    d078:	0005883a 	mov	r2,zero
    d07c:	f800283a 	ret
    d080:	008104c4 	movi	r2,1043
    d084:	1185c83a 	sub	r2,r2,r6
    d088:	1884d83a 	srl	r2,r3,r2
    d08c:	003ff306 	br	d05c <__alt_data_end+0xfffc3c7c>

0000d090 <__floatsidf>:
    d090:	defffd04 	addi	sp,sp,-12
    d094:	dfc00215 	stw	ra,8(sp)
    d098:	dc400115 	stw	r17,4(sp)
    d09c:	dc000015 	stw	r16,0(sp)
    d0a0:	20002b26 	beq	r4,zero,d150 <__floatsidf+0xc0>
    d0a4:	2023883a 	mov	r17,r4
    d0a8:	2020d7fa 	srli	r16,r4,31
    d0ac:	20002d16 	blt	r4,zero,d164 <__floatsidf+0xd4>
    d0b0:	8809883a 	mov	r4,r17
    d0b4:	000d2140 	call	d214 <__clzsi2>
    d0b8:	01410784 	movi	r5,1054
    d0bc:	288bc83a 	sub	r5,r5,r2
    d0c0:	01010cc4 	movi	r4,1075
    d0c4:	2149c83a 	sub	r4,r4,r5
    d0c8:	00c007c4 	movi	r3,31
    d0cc:	1900160e 	bge	r3,r4,d128 <__floatsidf+0x98>
    d0d0:	00c104c4 	movi	r3,1043
    d0d4:	1947c83a 	sub	r3,r3,r5
    d0d8:	88c6983a 	sll	r3,r17,r3
    d0dc:	00800434 	movhi	r2,16
    d0e0:	10bfffc4 	addi	r2,r2,-1
    d0e4:	1886703a 	and	r3,r3,r2
    d0e8:	2941ffcc 	andi	r5,r5,2047
    d0ec:	800d883a 	mov	r6,r16
    d0f0:	0005883a 	mov	r2,zero
    d0f4:	280a953a 	slli	r5,r5,20
    d0f8:	31803fcc 	andi	r6,r6,255
    d0fc:	01000434 	movhi	r4,16
    d100:	300c97fa 	slli	r6,r6,31
    d104:	213fffc4 	addi	r4,r4,-1
    d108:	1906703a 	and	r3,r3,r4
    d10c:	1946b03a 	or	r3,r3,r5
    d110:	1986b03a 	or	r3,r3,r6
    d114:	dfc00217 	ldw	ra,8(sp)
    d118:	dc400117 	ldw	r17,4(sp)
    d11c:	dc000017 	ldw	r16,0(sp)
    d120:	dec00304 	addi	sp,sp,12
    d124:	f800283a 	ret
    d128:	00c002c4 	movi	r3,11
    d12c:	1887c83a 	sub	r3,r3,r2
    d130:	88c6d83a 	srl	r3,r17,r3
    d134:	8904983a 	sll	r2,r17,r4
    d138:	01000434 	movhi	r4,16
    d13c:	213fffc4 	addi	r4,r4,-1
    d140:	2941ffcc 	andi	r5,r5,2047
    d144:	1906703a 	and	r3,r3,r4
    d148:	800d883a 	mov	r6,r16
    d14c:	003fe906 	br	d0f4 <__alt_data_end+0xfffc3d14>
    d150:	000d883a 	mov	r6,zero
    d154:	000b883a 	mov	r5,zero
    d158:	0007883a 	mov	r3,zero
    d15c:	0005883a 	mov	r2,zero
    d160:	003fe406 	br	d0f4 <__alt_data_end+0xfffc3d14>
    d164:	0123c83a 	sub	r17,zero,r4
    d168:	003fd106 	br	d0b0 <__alt_data_end+0xfffc3cd0>

0000d16c <__floatunsidf>:
    d16c:	defffe04 	addi	sp,sp,-8
    d170:	dc000015 	stw	r16,0(sp)
    d174:	dfc00115 	stw	ra,4(sp)
    d178:	2021883a 	mov	r16,r4
    d17c:	20002226 	beq	r4,zero,d208 <__floatunsidf+0x9c>
    d180:	000d2140 	call	d214 <__clzsi2>
    d184:	01010784 	movi	r4,1054
    d188:	2089c83a 	sub	r4,r4,r2
    d18c:	01810cc4 	movi	r6,1075
    d190:	310dc83a 	sub	r6,r6,r4
    d194:	00c007c4 	movi	r3,31
    d198:	1980120e 	bge	r3,r6,d1e4 <__floatunsidf+0x78>
    d19c:	00c104c4 	movi	r3,1043
    d1a0:	1907c83a 	sub	r3,r3,r4
    d1a4:	80ca983a 	sll	r5,r16,r3
    d1a8:	00800434 	movhi	r2,16
    d1ac:	10bfffc4 	addi	r2,r2,-1
    d1b0:	2101ffcc 	andi	r4,r4,2047
    d1b4:	0021883a 	mov	r16,zero
    d1b8:	288a703a 	and	r5,r5,r2
    d1bc:	2008953a 	slli	r4,r4,20
    d1c0:	00c00434 	movhi	r3,16
    d1c4:	18ffffc4 	addi	r3,r3,-1
    d1c8:	28c6703a 	and	r3,r5,r3
    d1cc:	8005883a 	mov	r2,r16
    d1d0:	1906b03a 	or	r3,r3,r4
    d1d4:	dfc00117 	ldw	ra,4(sp)
    d1d8:	dc000017 	ldw	r16,0(sp)
    d1dc:	dec00204 	addi	sp,sp,8
    d1e0:	f800283a 	ret
    d1e4:	00c002c4 	movi	r3,11
    d1e8:	188bc83a 	sub	r5,r3,r2
    d1ec:	814ad83a 	srl	r5,r16,r5
    d1f0:	00c00434 	movhi	r3,16
    d1f4:	18ffffc4 	addi	r3,r3,-1
    d1f8:	81a0983a 	sll	r16,r16,r6
    d1fc:	2101ffcc 	andi	r4,r4,2047
    d200:	28ca703a 	and	r5,r5,r3
    d204:	003fed06 	br	d1bc <__alt_data_end+0xfffc3ddc>
    d208:	0009883a 	mov	r4,zero
    d20c:	000b883a 	mov	r5,zero
    d210:	003fea06 	br	d1bc <__alt_data_end+0xfffc3ddc>

0000d214 <__clzsi2>:
    d214:	00bfffd4 	movui	r2,65535
    d218:	11000536 	bltu	r2,r4,d230 <__clzsi2+0x1c>
    d21c:	00803fc4 	movi	r2,255
    d220:	11000f36 	bltu	r2,r4,d260 <__clzsi2+0x4c>
    d224:	00800804 	movi	r2,32
    d228:	0007883a 	mov	r3,zero
    d22c:	00000506 	br	d244 <__clzsi2+0x30>
    d230:	00804034 	movhi	r2,256
    d234:	10bfffc4 	addi	r2,r2,-1
    d238:	11000c2e 	bgeu	r2,r4,d26c <__clzsi2+0x58>
    d23c:	00800204 	movi	r2,8
    d240:	00c00604 	movi	r3,24
    d244:	20c8d83a 	srl	r4,r4,r3
    d248:	00c00074 	movhi	r3,1
    d24c:	18ff1204 	addi	r3,r3,-952
    d250:	1909883a 	add	r4,r3,r4
    d254:	20c00003 	ldbu	r3,0(r4)
    d258:	10c5c83a 	sub	r2,r2,r3
    d25c:	f800283a 	ret
    d260:	00800604 	movi	r2,24
    d264:	00c00204 	movi	r3,8
    d268:	003ff606 	br	d244 <__alt_data_end+0xfffc3e64>
    d26c:	00800404 	movi	r2,16
    d270:	1007883a 	mov	r3,r2
    d274:	003ff306 	br	d244 <__alt_data_end+0xfffc3e64>

0000d278 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d278:	defffe04 	addi	sp,sp,-8
    d27c:	dfc00115 	stw	ra,4(sp)
    d280:	df000015 	stw	fp,0(sp)
    d284:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d288:	00800074 	movhi	r2,1
    d28c:	10861504 	addi	r2,r2,6228
    d290:	10800017 	ldw	r2,0(r2)
    d294:	10000526 	beq	r2,zero,d2ac <alt_get_errno+0x34>
    d298:	00800074 	movhi	r2,1
    d29c:	10861504 	addi	r2,r2,6228
    d2a0:	10800017 	ldw	r2,0(r2)
    d2a4:	103ee83a 	callr	r2
    d2a8:	00000206 	br	d2b4 <alt_get_errno+0x3c>
    d2ac:	00800074 	movhi	r2,1
    d2b0:	108cdb04 	addi	r2,r2,13164
}
    d2b4:	e037883a 	mov	sp,fp
    d2b8:	dfc00117 	ldw	ra,4(sp)
    d2bc:	df000017 	ldw	fp,0(sp)
    d2c0:	dec00204 	addi	sp,sp,8
    d2c4:	f800283a 	ret

0000d2c8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d2c8:	defffb04 	addi	sp,sp,-20
    d2cc:	dfc00415 	stw	ra,16(sp)
    d2d0:	df000315 	stw	fp,12(sp)
    d2d4:	df000304 	addi	fp,sp,12
    d2d8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d2dc:	e0bfff17 	ldw	r2,-4(fp)
    d2e0:	10000816 	blt	r2,zero,d304 <close+0x3c>
    d2e4:	01400304 	movi	r5,12
    d2e8:	e13fff17 	ldw	r4,-4(fp)
    d2ec:	000a9b00 	call	a9b0 <__mulsi3>
    d2f0:	1007883a 	mov	r3,r2
    d2f4:	00800074 	movhi	r2,1
    d2f8:	10819204 	addi	r2,r2,1608
    d2fc:	1885883a 	add	r2,r3,r2
    d300:	00000106 	br	d308 <close+0x40>
    d304:	0005883a 	mov	r2,zero
    d308:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d30c:	e0bffd17 	ldw	r2,-12(fp)
    d310:	10001926 	beq	r2,zero,d378 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d314:	e0bffd17 	ldw	r2,-12(fp)
    d318:	10800017 	ldw	r2,0(r2)
    d31c:	10800417 	ldw	r2,16(r2)
    d320:	10000626 	beq	r2,zero,d33c <close+0x74>
    d324:	e0bffd17 	ldw	r2,-12(fp)
    d328:	10800017 	ldw	r2,0(r2)
    d32c:	10800417 	ldw	r2,16(r2)
    d330:	e13ffd17 	ldw	r4,-12(fp)
    d334:	103ee83a 	callr	r2
    d338:	00000106 	br	d340 <close+0x78>
    d33c:	0005883a 	mov	r2,zero
    d340:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d344:	e13fff17 	ldw	r4,-4(fp)
    d348:	000da000 	call	da00 <alt_release_fd>
    if (rval < 0)
    d34c:	e0bffe17 	ldw	r2,-8(fp)
    d350:	1000070e 	bge	r2,zero,d370 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    d354:	000d2780 	call	d278 <alt_get_errno>
    d358:	1007883a 	mov	r3,r2
    d35c:	e0bffe17 	ldw	r2,-8(fp)
    d360:	0085c83a 	sub	r2,zero,r2
    d364:	18800015 	stw	r2,0(r3)
      return -1;
    d368:	00bfffc4 	movi	r2,-1
    d36c:	00000706 	br	d38c <close+0xc4>
    }
    return 0;
    d370:	0005883a 	mov	r2,zero
    d374:	00000506 	br	d38c <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d378:	000d2780 	call	d278 <alt_get_errno>
    d37c:	1007883a 	mov	r3,r2
    d380:	00801444 	movi	r2,81
    d384:	18800015 	stw	r2,0(r3)
    return -1;
    d388:	00bfffc4 	movi	r2,-1
  }
}
    d38c:	e037883a 	mov	sp,fp
    d390:	dfc00117 	ldw	ra,4(sp)
    d394:	df000017 	ldw	fp,0(sp)
    d398:	dec00204 	addi	sp,sp,8
    d39c:	f800283a 	ret

0000d3a0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d3a0:	defffc04 	addi	sp,sp,-16
    d3a4:	df000315 	stw	fp,12(sp)
    d3a8:	df000304 	addi	fp,sp,12
    d3ac:	e13ffd15 	stw	r4,-12(fp)
    d3b0:	e17ffe15 	stw	r5,-8(fp)
    d3b4:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d3b8:	e0bfff17 	ldw	r2,-4(fp)
}
    d3bc:	e037883a 	mov	sp,fp
    d3c0:	df000017 	ldw	fp,0(sp)
    d3c4:	dec00104 	addi	sp,sp,4
    d3c8:	f800283a 	ret

0000d3cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d3cc:	defffe04 	addi	sp,sp,-8
    d3d0:	dfc00115 	stw	ra,4(sp)
    d3d4:	df000015 	stw	fp,0(sp)
    d3d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d3dc:	00800074 	movhi	r2,1
    d3e0:	10861504 	addi	r2,r2,6228
    d3e4:	10800017 	ldw	r2,0(r2)
    d3e8:	10000526 	beq	r2,zero,d400 <alt_get_errno+0x34>
    d3ec:	00800074 	movhi	r2,1
    d3f0:	10861504 	addi	r2,r2,6228
    d3f4:	10800017 	ldw	r2,0(r2)
    d3f8:	103ee83a 	callr	r2
    d3fc:	00000206 	br	d408 <alt_get_errno+0x3c>
    d400:	00800074 	movhi	r2,1
    d404:	108cdb04 	addi	r2,r2,13164
}
    d408:	e037883a 	mov	sp,fp
    d40c:	dfc00117 	ldw	ra,4(sp)
    d410:	df000017 	ldw	fp,0(sp)
    d414:	dec00204 	addi	sp,sp,8
    d418:	f800283a 	ret

0000d41c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d41c:	defffb04 	addi	sp,sp,-20
    d420:	dfc00415 	stw	ra,16(sp)
    d424:	df000315 	stw	fp,12(sp)
    d428:	df000304 	addi	fp,sp,12
    d42c:	e13ffe15 	stw	r4,-8(fp)
    d430:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d434:	e0bffe17 	ldw	r2,-8(fp)
    d438:	10000816 	blt	r2,zero,d45c <fstat+0x40>
    d43c:	01400304 	movi	r5,12
    d440:	e13ffe17 	ldw	r4,-8(fp)
    d444:	000a9b00 	call	a9b0 <__mulsi3>
    d448:	1007883a 	mov	r3,r2
    d44c:	00800074 	movhi	r2,1
    d450:	10819204 	addi	r2,r2,1608
    d454:	1885883a 	add	r2,r3,r2
    d458:	00000106 	br	d460 <fstat+0x44>
    d45c:	0005883a 	mov	r2,zero
    d460:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d464:	e0bffd17 	ldw	r2,-12(fp)
    d468:	10001026 	beq	r2,zero,d4ac <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d46c:	e0bffd17 	ldw	r2,-12(fp)
    d470:	10800017 	ldw	r2,0(r2)
    d474:	10800817 	ldw	r2,32(r2)
    d478:	10000726 	beq	r2,zero,d498 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    d47c:	e0bffd17 	ldw	r2,-12(fp)
    d480:	10800017 	ldw	r2,0(r2)
    d484:	10800817 	ldw	r2,32(r2)
    d488:	e17fff17 	ldw	r5,-4(fp)
    d48c:	e13ffd17 	ldw	r4,-12(fp)
    d490:	103ee83a 	callr	r2
    d494:	00000a06 	br	d4c0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d498:	e0bfff17 	ldw	r2,-4(fp)
    d49c:	00c80004 	movi	r3,8192
    d4a0:	10c00115 	stw	r3,4(r2)
      return 0;
    d4a4:	0005883a 	mov	r2,zero
    d4a8:	00000506 	br	d4c0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d4ac:	000d3cc0 	call	d3cc <alt_get_errno>
    d4b0:	1007883a 	mov	r3,r2
    d4b4:	00801444 	movi	r2,81
    d4b8:	18800015 	stw	r2,0(r3)
    return -1;
    d4bc:	00bfffc4 	movi	r2,-1
  }
}
    d4c0:	e037883a 	mov	sp,fp
    d4c4:	dfc00117 	ldw	ra,4(sp)
    d4c8:	df000017 	ldw	fp,0(sp)
    d4cc:	dec00204 	addi	sp,sp,8
    d4d0:	f800283a 	ret

0000d4d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d4d4:	defffe04 	addi	sp,sp,-8
    d4d8:	dfc00115 	stw	ra,4(sp)
    d4dc:	df000015 	stw	fp,0(sp)
    d4e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d4e4:	00800074 	movhi	r2,1
    d4e8:	10861504 	addi	r2,r2,6228
    d4ec:	10800017 	ldw	r2,0(r2)
    d4f0:	10000526 	beq	r2,zero,d508 <alt_get_errno+0x34>
    d4f4:	00800074 	movhi	r2,1
    d4f8:	10861504 	addi	r2,r2,6228
    d4fc:	10800017 	ldw	r2,0(r2)
    d500:	103ee83a 	callr	r2
    d504:	00000206 	br	d510 <alt_get_errno+0x3c>
    d508:	00800074 	movhi	r2,1
    d50c:	108cdb04 	addi	r2,r2,13164
}
    d510:	e037883a 	mov	sp,fp
    d514:	dfc00117 	ldw	ra,4(sp)
    d518:	df000017 	ldw	fp,0(sp)
    d51c:	dec00204 	addi	sp,sp,8
    d520:	f800283a 	ret

0000d524 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d524:	deffed04 	addi	sp,sp,-76
    d528:	dfc01215 	stw	ra,72(sp)
    d52c:	df001115 	stw	fp,68(sp)
    d530:	df001104 	addi	fp,sp,68
    d534:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d538:	e0bfff17 	ldw	r2,-4(fp)
    d53c:	10000816 	blt	r2,zero,d560 <isatty+0x3c>
    d540:	01400304 	movi	r5,12
    d544:	e13fff17 	ldw	r4,-4(fp)
    d548:	000a9b00 	call	a9b0 <__mulsi3>
    d54c:	1007883a 	mov	r3,r2
    d550:	00800074 	movhi	r2,1
    d554:	10819204 	addi	r2,r2,1608
    d558:	1885883a 	add	r2,r3,r2
    d55c:	00000106 	br	d564 <isatty+0x40>
    d560:	0005883a 	mov	r2,zero
    d564:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d568:	e0bfef17 	ldw	r2,-68(fp)
    d56c:	10000e26 	beq	r2,zero,d5a8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d570:	e0bfef17 	ldw	r2,-68(fp)
    d574:	10800017 	ldw	r2,0(r2)
    d578:	10800817 	ldw	r2,32(r2)
    d57c:	1000021e 	bne	r2,zero,d588 <isatty+0x64>
    {
      return 1;
    d580:	00800044 	movi	r2,1
    d584:	00000d06 	br	d5bc <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d588:	e0bff004 	addi	r2,fp,-64
    d58c:	100b883a 	mov	r5,r2
    d590:	e13fff17 	ldw	r4,-4(fp)
    d594:	000d41c0 	call	d41c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d598:	e0bff117 	ldw	r2,-60(fp)
    d59c:	10880020 	cmpeqi	r2,r2,8192
    d5a0:	10803fcc 	andi	r2,r2,255
    d5a4:	00000506 	br	d5bc <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d5a8:	000d4d40 	call	d4d4 <alt_get_errno>
    d5ac:	1007883a 	mov	r3,r2
    d5b0:	00801444 	movi	r2,81
    d5b4:	18800015 	stw	r2,0(r3)
    return 0;
    d5b8:	0005883a 	mov	r2,zero
  }
}
    d5bc:	e037883a 	mov	sp,fp
    d5c0:	dfc00117 	ldw	ra,4(sp)
    d5c4:	df000017 	ldw	fp,0(sp)
    d5c8:	dec00204 	addi	sp,sp,8
    d5cc:	f800283a 	ret

0000d5d0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d5d0:	defffc04 	addi	sp,sp,-16
    d5d4:	df000315 	stw	fp,12(sp)
    d5d8:	df000304 	addi	fp,sp,12
    d5dc:	e13ffd15 	stw	r4,-12(fp)
    d5e0:	e17ffe15 	stw	r5,-8(fp)
    d5e4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d5e8:	e0fffe17 	ldw	r3,-8(fp)
    d5ec:	e0bffd17 	ldw	r2,-12(fp)
    d5f0:	18800c26 	beq	r3,r2,d624 <alt_load_section+0x54>
  {
    while( to != end )
    d5f4:	00000806 	br	d618 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d5f8:	e0bffe17 	ldw	r2,-8(fp)
    d5fc:	10c00104 	addi	r3,r2,4
    d600:	e0fffe15 	stw	r3,-8(fp)
    d604:	e0fffd17 	ldw	r3,-12(fp)
    d608:	19000104 	addi	r4,r3,4
    d60c:	e13ffd15 	stw	r4,-12(fp)
    d610:	18c00017 	ldw	r3,0(r3)
    d614:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d618:	e0fffe17 	ldw	r3,-8(fp)
    d61c:	e0bfff17 	ldw	r2,-4(fp)
    d620:	18bff51e 	bne	r3,r2,d5f8 <__alt_data_end+0xfffc4218>
    {
      *to++ = *from++;
    }
  }
}
    d624:	0001883a 	nop
    d628:	e037883a 	mov	sp,fp
    d62c:	df000017 	ldw	fp,0(sp)
    d630:	dec00104 	addi	sp,sp,4
    d634:	f800283a 	ret

0000d638 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d638:	defffe04 	addi	sp,sp,-8
    d63c:	dfc00115 	stw	ra,4(sp)
    d640:	df000015 	stw	fp,0(sp)
    d644:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d648:	01800074 	movhi	r6,1
    d64c:	31861a04 	addi	r6,r6,6248
    d650:	01400074 	movhi	r5,1
    d654:	297f5f04 	addi	r5,r5,-644
    d658:	01000074 	movhi	r4,1
    d65c:	21061a04 	addi	r4,r4,6248
    d660:	000d5d00 	call	d5d0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d664:	01800034 	movhi	r6,0
    d668:	31808c04 	addi	r6,r6,560
    d66c:	01400034 	movhi	r5,0
    d670:	29400804 	addi	r5,r5,32
    d674:	01000034 	movhi	r4,0
    d678:	21000804 	addi	r4,r4,32
    d67c:	000d5d00 	call	d5d0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d680:	01800074 	movhi	r6,1
    d684:	31bf5f04 	addi	r6,r6,-644
    d688:	01400074 	movhi	r5,1
    d68c:	297e8d04 	addi	r5,r5,-1484
    d690:	01000074 	movhi	r4,1
    d694:	213e8d04 	addi	r4,r4,-1484
    d698:	000d5d00 	call	d5d0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d69c:	000e8fc0 	call	e8fc <alt_dcache_flush_all>
  alt_icache_flush_all();
    d6a0:	000ead00 	call	ead0 <alt_icache_flush_all>
}
    d6a4:	0001883a 	nop
    d6a8:	e037883a 	mov	sp,fp
    d6ac:	dfc00117 	ldw	ra,4(sp)
    d6b0:	df000017 	ldw	fp,0(sp)
    d6b4:	dec00204 	addi	sp,sp,8
    d6b8:	f800283a 	ret

0000d6bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d6bc:	defffe04 	addi	sp,sp,-8
    d6c0:	dfc00115 	stw	ra,4(sp)
    d6c4:	df000015 	stw	fp,0(sp)
    d6c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d6cc:	00800074 	movhi	r2,1
    d6d0:	10861504 	addi	r2,r2,6228
    d6d4:	10800017 	ldw	r2,0(r2)
    d6d8:	10000526 	beq	r2,zero,d6f0 <alt_get_errno+0x34>
    d6dc:	00800074 	movhi	r2,1
    d6e0:	10861504 	addi	r2,r2,6228
    d6e4:	10800017 	ldw	r2,0(r2)
    d6e8:	103ee83a 	callr	r2
    d6ec:	00000206 	br	d6f8 <alt_get_errno+0x3c>
    d6f0:	00800074 	movhi	r2,1
    d6f4:	108cdb04 	addi	r2,r2,13164
}
    d6f8:	e037883a 	mov	sp,fp
    d6fc:	dfc00117 	ldw	ra,4(sp)
    d700:	df000017 	ldw	fp,0(sp)
    d704:	dec00204 	addi	sp,sp,8
    d708:	f800283a 	ret

0000d70c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d70c:	defff904 	addi	sp,sp,-28
    d710:	dfc00615 	stw	ra,24(sp)
    d714:	df000515 	stw	fp,20(sp)
    d718:	df000504 	addi	fp,sp,20
    d71c:	e13ffd15 	stw	r4,-12(fp)
    d720:	e17ffe15 	stw	r5,-8(fp)
    d724:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d728:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d72c:	e0bffd17 	ldw	r2,-12(fp)
    d730:	10000816 	blt	r2,zero,d754 <lseek+0x48>
    d734:	01400304 	movi	r5,12
    d738:	e13ffd17 	ldw	r4,-12(fp)
    d73c:	000a9b00 	call	a9b0 <__mulsi3>
    d740:	1007883a 	mov	r3,r2
    d744:	00800074 	movhi	r2,1
    d748:	10819204 	addi	r2,r2,1608
    d74c:	1885883a 	add	r2,r3,r2
    d750:	00000106 	br	d758 <lseek+0x4c>
    d754:	0005883a 	mov	r2,zero
    d758:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d75c:	e0bffc17 	ldw	r2,-16(fp)
    d760:	10001026 	beq	r2,zero,d7a4 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d764:	e0bffc17 	ldw	r2,-16(fp)
    d768:	10800017 	ldw	r2,0(r2)
    d76c:	10800717 	ldw	r2,28(r2)
    d770:	10000926 	beq	r2,zero,d798 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d774:	e0bffc17 	ldw	r2,-16(fp)
    d778:	10800017 	ldw	r2,0(r2)
    d77c:	10800717 	ldw	r2,28(r2)
    d780:	e1bfff17 	ldw	r6,-4(fp)
    d784:	e17ffe17 	ldw	r5,-8(fp)
    d788:	e13ffc17 	ldw	r4,-16(fp)
    d78c:	103ee83a 	callr	r2
    d790:	e0bffb15 	stw	r2,-20(fp)
    d794:	00000506 	br	d7ac <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d798:	00bfde84 	movi	r2,-134
    d79c:	e0bffb15 	stw	r2,-20(fp)
    d7a0:	00000206 	br	d7ac <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    d7a4:	00bfebc4 	movi	r2,-81
    d7a8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d7ac:	e0bffb17 	ldw	r2,-20(fp)
    d7b0:	1000070e 	bge	r2,zero,d7d0 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    d7b4:	000d6bc0 	call	d6bc <alt_get_errno>
    d7b8:	1007883a 	mov	r3,r2
    d7bc:	e0bffb17 	ldw	r2,-20(fp)
    d7c0:	0085c83a 	sub	r2,zero,r2
    d7c4:	18800015 	stw	r2,0(r3)
    rc = -1;
    d7c8:	00bfffc4 	movi	r2,-1
    d7cc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d7d0:	e0bffb17 	ldw	r2,-20(fp)
}
    d7d4:	e037883a 	mov	sp,fp
    d7d8:	dfc00117 	ldw	ra,4(sp)
    d7dc:	df000017 	ldw	fp,0(sp)
    d7e0:	dec00204 	addi	sp,sp,8
    d7e4:	f800283a 	ret

0000d7e8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d7e8:	defffd04 	addi	sp,sp,-12
    d7ec:	dfc00215 	stw	ra,8(sp)
    d7f0:	df000115 	stw	fp,4(sp)
    d7f4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d7f8:	0009883a 	mov	r4,zero
    d7fc:	000dcbc0 	call	dcbc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d800:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d804:	000dcf40 	call	dcf4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d808:	01800074 	movhi	r6,1
    d80c:	31bf5504 	addi	r6,r6,-684
    d810:	01400074 	movhi	r5,1
    d814:	297f5504 	addi	r5,r5,-684
    d818:	01000074 	movhi	r4,1
    d81c:	213f5504 	addi	r4,r4,-684
    d820:	000eea40 	call	eea4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d824:	000ea100 	call	ea10 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d828:	01000074 	movhi	r4,1
    d82c:	213a9c04 	addi	r4,r4,-5520
    d830:	000f6a00 	call	f6a0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d834:	d0a6d217 	ldw	r2,-25784(gp)
    d838:	d0e6d317 	ldw	r3,-25780(gp)
    d83c:	d126d417 	ldw	r4,-25776(gp)
    d840:	200d883a 	mov	r6,r4
    d844:	180b883a 	mov	r5,r3
    d848:	1009883a 	mov	r4,r2
    d84c:	000026c0 	call	26c <main>
    d850:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d854:	01000044 	movi	r4,1
    d858:	000d2c80 	call	d2c8 <close>
  exit (result);
    d85c:	e13fff17 	ldw	r4,-4(fp)
    d860:	000f6b40 	call	f6b4 <exit>

0000d864 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d864:	defffe04 	addi	sp,sp,-8
    d868:	df000115 	stw	fp,4(sp)
    d86c:	df000104 	addi	fp,sp,4
    d870:	e13fff15 	stw	r4,-4(fp)
}
    d874:	0001883a 	nop
    d878:	e037883a 	mov	sp,fp
    d87c:	df000017 	ldw	fp,0(sp)
    d880:	dec00104 	addi	sp,sp,4
    d884:	f800283a 	ret

0000d888 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d888:	defffe04 	addi	sp,sp,-8
    d88c:	df000115 	stw	fp,4(sp)
    d890:	df000104 	addi	fp,sp,4
    d894:	e13fff15 	stw	r4,-4(fp)
}
    d898:	0001883a 	nop
    d89c:	e037883a 	mov	sp,fp
    d8a0:	df000017 	ldw	fp,0(sp)
    d8a4:	dec00104 	addi	sp,sp,4
    d8a8:	f800283a 	ret

0000d8ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d8ac:	defffe04 	addi	sp,sp,-8
    d8b0:	dfc00115 	stw	ra,4(sp)
    d8b4:	df000015 	stw	fp,0(sp)
    d8b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d8bc:	00800074 	movhi	r2,1
    d8c0:	10861504 	addi	r2,r2,6228
    d8c4:	10800017 	ldw	r2,0(r2)
    d8c8:	10000526 	beq	r2,zero,d8e0 <alt_get_errno+0x34>
    d8cc:	00800074 	movhi	r2,1
    d8d0:	10861504 	addi	r2,r2,6228
    d8d4:	10800017 	ldw	r2,0(r2)
    d8d8:	103ee83a 	callr	r2
    d8dc:	00000206 	br	d8e8 <alt_get_errno+0x3c>
    d8e0:	00800074 	movhi	r2,1
    d8e4:	108cdb04 	addi	r2,r2,13164
}
    d8e8:	e037883a 	mov	sp,fp
    d8ec:	dfc00117 	ldw	ra,4(sp)
    d8f0:	df000017 	ldw	fp,0(sp)
    d8f4:	dec00204 	addi	sp,sp,8
    d8f8:	f800283a 	ret

0000d8fc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d8fc:	defff904 	addi	sp,sp,-28
    d900:	dfc00615 	stw	ra,24(sp)
    d904:	df000515 	stw	fp,20(sp)
    d908:	df000504 	addi	fp,sp,20
    d90c:	e13ffd15 	stw	r4,-12(fp)
    d910:	e17ffe15 	stw	r5,-8(fp)
    d914:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d918:	e0bffd17 	ldw	r2,-12(fp)
    d91c:	10000816 	blt	r2,zero,d940 <read+0x44>
    d920:	01400304 	movi	r5,12
    d924:	e13ffd17 	ldw	r4,-12(fp)
    d928:	000a9b00 	call	a9b0 <__mulsi3>
    d92c:	1007883a 	mov	r3,r2
    d930:	00800074 	movhi	r2,1
    d934:	10819204 	addi	r2,r2,1608
    d938:	1885883a 	add	r2,r3,r2
    d93c:	00000106 	br	d944 <read+0x48>
    d940:	0005883a 	mov	r2,zero
    d944:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d948:	e0bffb17 	ldw	r2,-20(fp)
    d94c:	10002226 	beq	r2,zero,d9d8 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d950:	e0bffb17 	ldw	r2,-20(fp)
    d954:	10800217 	ldw	r2,8(r2)
    d958:	108000cc 	andi	r2,r2,3
    d95c:	10800060 	cmpeqi	r2,r2,1
    d960:	1000181e 	bne	r2,zero,d9c4 <read+0xc8>
        (fd->dev->read))
    d964:	e0bffb17 	ldw	r2,-20(fp)
    d968:	10800017 	ldw	r2,0(r2)
    d96c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d970:	10001426 	beq	r2,zero,d9c4 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d974:	e0bffb17 	ldw	r2,-20(fp)
    d978:	10800017 	ldw	r2,0(r2)
    d97c:	10800517 	ldw	r2,20(r2)
    d980:	e0ffff17 	ldw	r3,-4(fp)
    d984:	180d883a 	mov	r6,r3
    d988:	e17ffe17 	ldw	r5,-8(fp)
    d98c:	e13ffb17 	ldw	r4,-20(fp)
    d990:	103ee83a 	callr	r2
    d994:	e0bffc15 	stw	r2,-16(fp)
    d998:	e0bffc17 	ldw	r2,-16(fp)
    d99c:	1000070e 	bge	r2,zero,d9bc <read+0xc0>
        {
          ALT_ERRNO = -rval;
    d9a0:	000d8ac0 	call	d8ac <alt_get_errno>
    d9a4:	1007883a 	mov	r3,r2
    d9a8:	e0bffc17 	ldw	r2,-16(fp)
    d9ac:	0085c83a 	sub	r2,zero,r2
    d9b0:	18800015 	stw	r2,0(r3)
          return -1;
    d9b4:	00bfffc4 	movi	r2,-1
    d9b8:	00000c06 	br	d9ec <read+0xf0>
        }
        return rval;
    d9bc:	e0bffc17 	ldw	r2,-16(fp)
    d9c0:	00000a06 	br	d9ec <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d9c4:	000d8ac0 	call	d8ac <alt_get_errno>
    d9c8:	1007883a 	mov	r3,r2
    d9cc:	00800344 	movi	r2,13
    d9d0:	18800015 	stw	r2,0(r3)
    d9d4:	00000406 	br	d9e8 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d9d8:	000d8ac0 	call	d8ac <alt_get_errno>
    d9dc:	1007883a 	mov	r3,r2
    d9e0:	00801444 	movi	r2,81
    d9e4:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d9e8:	00bfffc4 	movi	r2,-1
}
    d9ec:	e037883a 	mov	sp,fp
    d9f0:	dfc00117 	ldw	ra,4(sp)
    d9f4:	df000017 	ldw	fp,0(sp)
    d9f8:	dec00204 	addi	sp,sp,8
    d9fc:	f800283a 	ret

0000da00 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    da00:	defffc04 	addi	sp,sp,-16
    da04:	dfc00315 	stw	ra,12(sp)
    da08:	df000215 	stw	fp,8(sp)
    da0c:	dc000115 	stw	r16,4(sp)
    da10:	df000204 	addi	fp,sp,8
    da14:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    da18:	e0bffe17 	ldw	r2,-8(fp)
    da1c:	108000d0 	cmplti	r2,r2,3
    da20:	1000111e 	bne	r2,zero,da68 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    da24:	04000074 	movhi	r16,1
    da28:	84019204 	addi	r16,r16,1608
    da2c:	e0bffe17 	ldw	r2,-8(fp)
    da30:	01400304 	movi	r5,12
    da34:	1009883a 	mov	r4,r2
    da38:	000a9b00 	call	a9b0 <__mulsi3>
    da3c:	8085883a 	add	r2,r16,r2
    da40:	10800204 	addi	r2,r2,8
    da44:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    da48:	04000074 	movhi	r16,1
    da4c:	84019204 	addi	r16,r16,1608
    da50:	e0bffe17 	ldw	r2,-8(fp)
    da54:	01400304 	movi	r5,12
    da58:	1009883a 	mov	r4,r2
    da5c:	000a9b00 	call	a9b0 <__mulsi3>
    da60:	8085883a 	add	r2,r16,r2
    da64:	10000015 	stw	zero,0(r2)
  }
}
    da68:	0001883a 	nop
    da6c:	e6ffff04 	addi	sp,fp,-4
    da70:	dfc00217 	ldw	ra,8(sp)
    da74:	df000117 	ldw	fp,4(sp)
    da78:	dc000017 	ldw	r16,0(sp)
    da7c:	dec00304 	addi	sp,sp,12
    da80:	f800283a 	ret

0000da84 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    da84:	defff904 	addi	sp,sp,-28
    da88:	df000615 	stw	fp,24(sp)
    da8c:	df000604 	addi	fp,sp,24
    da90:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    da94:	0005303a 	rdctl	r2,status
    da98:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    da9c:	e0fffe17 	ldw	r3,-8(fp)
    daa0:	00bfff84 	movi	r2,-2
    daa4:	1884703a 	and	r2,r3,r2
    daa8:	1001703a 	wrctl	status,r2
  
  return context;
    daac:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    dab0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    dab4:	d0a00c17 	ldw	r2,-32720(gp)
    dab8:	10c000c4 	addi	r3,r2,3
    dabc:	00bfff04 	movi	r2,-4
    dac0:	1884703a 	and	r2,r3,r2
    dac4:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    dac8:	d0e00c17 	ldw	r3,-32720(gp)
    dacc:	e0bfff17 	ldw	r2,-4(fp)
    dad0:	1887883a 	add	r3,r3,r2
    dad4:	00800174 	movhi	r2,5
    dad8:	10a4f804 	addi	r2,r2,-27680
    dadc:	10c0062e 	bgeu	r2,r3,daf8 <sbrk+0x74>
    dae0:	e0bffb17 	ldw	r2,-20(fp)
    dae4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dae8:	e0bffa17 	ldw	r2,-24(fp)
    daec:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    daf0:	00bfffc4 	movi	r2,-1
    daf4:	00000b06 	br	db24 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    daf8:	d0a00c17 	ldw	r2,-32720(gp)
    dafc:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    db00:	d0e00c17 	ldw	r3,-32720(gp)
    db04:	e0bfff17 	ldw	r2,-4(fp)
    db08:	1885883a 	add	r2,r3,r2
    db0c:	d0a00c15 	stw	r2,-32720(gp)
    db10:	e0bffb17 	ldw	r2,-20(fp)
    db14:	e0bffc15 	stw	r2,-16(fp)
    db18:	e0bffc17 	ldw	r2,-16(fp)
    db1c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    db20:	e0bffd17 	ldw	r2,-12(fp)
} 
    db24:	e037883a 	mov	sp,fp
    db28:	df000017 	ldw	fp,0(sp)
    db2c:	dec00104 	addi	sp,sp,4
    db30:	f800283a 	ret

0000db34 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    db34:	defffe04 	addi	sp,sp,-8
    db38:	dfc00115 	stw	ra,4(sp)
    db3c:	df000015 	stw	fp,0(sp)
    db40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    db44:	00800074 	movhi	r2,1
    db48:	10861504 	addi	r2,r2,6228
    db4c:	10800017 	ldw	r2,0(r2)
    db50:	10000526 	beq	r2,zero,db68 <alt_get_errno+0x34>
    db54:	00800074 	movhi	r2,1
    db58:	10861504 	addi	r2,r2,6228
    db5c:	10800017 	ldw	r2,0(r2)
    db60:	103ee83a 	callr	r2
    db64:	00000206 	br	db70 <alt_get_errno+0x3c>
    db68:	00800074 	movhi	r2,1
    db6c:	108cdb04 	addi	r2,r2,13164
}
    db70:	e037883a 	mov	sp,fp
    db74:	dfc00117 	ldw	ra,4(sp)
    db78:	df000017 	ldw	fp,0(sp)
    db7c:	dec00204 	addi	sp,sp,8
    db80:	f800283a 	ret

0000db84 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    db84:	defff904 	addi	sp,sp,-28
    db88:	dfc00615 	stw	ra,24(sp)
    db8c:	df000515 	stw	fp,20(sp)
    db90:	df000504 	addi	fp,sp,20
    db94:	e13ffd15 	stw	r4,-12(fp)
    db98:	e17ffe15 	stw	r5,-8(fp)
    db9c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    dba0:	e0bffd17 	ldw	r2,-12(fp)
    dba4:	10000816 	blt	r2,zero,dbc8 <write+0x44>
    dba8:	01400304 	movi	r5,12
    dbac:	e13ffd17 	ldw	r4,-12(fp)
    dbb0:	000a9b00 	call	a9b0 <__mulsi3>
    dbb4:	1007883a 	mov	r3,r2
    dbb8:	00800074 	movhi	r2,1
    dbbc:	10819204 	addi	r2,r2,1608
    dbc0:	1885883a 	add	r2,r3,r2
    dbc4:	00000106 	br	dbcc <write+0x48>
    dbc8:	0005883a 	mov	r2,zero
    dbcc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    dbd0:	e0bffb17 	ldw	r2,-20(fp)
    dbd4:	10002126 	beq	r2,zero,dc5c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    dbd8:	e0bffb17 	ldw	r2,-20(fp)
    dbdc:	10800217 	ldw	r2,8(r2)
    dbe0:	108000cc 	andi	r2,r2,3
    dbe4:	10001826 	beq	r2,zero,dc48 <write+0xc4>
    dbe8:	e0bffb17 	ldw	r2,-20(fp)
    dbec:	10800017 	ldw	r2,0(r2)
    dbf0:	10800617 	ldw	r2,24(r2)
    dbf4:	10001426 	beq	r2,zero,dc48 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dbf8:	e0bffb17 	ldw	r2,-20(fp)
    dbfc:	10800017 	ldw	r2,0(r2)
    dc00:	10800617 	ldw	r2,24(r2)
    dc04:	e0ffff17 	ldw	r3,-4(fp)
    dc08:	180d883a 	mov	r6,r3
    dc0c:	e17ffe17 	ldw	r5,-8(fp)
    dc10:	e13ffb17 	ldw	r4,-20(fp)
    dc14:	103ee83a 	callr	r2
    dc18:	e0bffc15 	stw	r2,-16(fp)
    dc1c:	e0bffc17 	ldw	r2,-16(fp)
    dc20:	1000070e 	bge	r2,zero,dc40 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    dc24:	000db340 	call	db34 <alt_get_errno>
    dc28:	1007883a 	mov	r3,r2
    dc2c:	e0bffc17 	ldw	r2,-16(fp)
    dc30:	0085c83a 	sub	r2,zero,r2
    dc34:	18800015 	stw	r2,0(r3)
        return -1;
    dc38:	00bfffc4 	movi	r2,-1
    dc3c:	00000c06 	br	dc70 <write+0xec>
      }
      return rval;
    dc40:	e0bffc17 	ldw	r2,-16(fp)
    dc44:	00000a06 	br	dc70 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    dc48:	000db340 	call	db34 <alt_get_errno>
    dc4c:	1007883a 	mov	r3,r2
    dc50:	00800344 	movi	r2,13
    dc54:	18800015 	stw	r2,0(r3)
    dc58:	00000406 	br	dc6c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    dc5c:	000db340 	call	db34 <alt_get_errno>
    dc60:	1007883a 	mov	r3,r2
    dc64:	00801444 	movi	r2,81
    dc68:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dc6c:	00bfffc4 	movi	r2,-1
}
    dc70:	e037883a 	mov	sp,fp
    dc74:	dfc00117 	ldw	ra,4(sp)
    dc78:	df000017 	ldw	fp,0(sp)
    dc7c:	dec00204 	addi	sp,sp,8
    dc80:	f800283a 	ret

0000dc84 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    dc84:	defffd04 	addi	sp,sp,-12
    dc88:	dfc00215 	stw	ra,8(sp)
    dc8c:	df000115 	stw	fp,4(sp)
    dc90:	df000104 	addi	fp,sp,4
    dc94:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    dc98:	01400074 	movhi	r5,1
    dc9c:	29461204 	addi	r5,r5,6216
    dca0:	e13fff17 	ldw	r4,-4(fp)
    dca4:	000e96c0 	call	e96c <alt_dev_llist_insert>
}
    dca8:	e037883a 	mov	sp,fp
    dcac:	dfc00117 	ldw	ra,4(sp)
    dcb0:	df000017 	ldw	fp,0(sp)
    dcb4:	dec00204 	addi	sp,sp,8
    dcb8:	f800283a 	ret

0000dcbc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    dcbc:	defffd04 	addi	sp,sp,-12
    dcc0:	dfc00215 	stw	ra,8(sp)
    dcc4:	df000115 	stw	fp,4(sp)
    dcc8:	df000104 	addi	fp,sp,4
    dccc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    dcd0:	000f3680 	call	f368 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    dcd4:	00800044 	movi	r2,1
    dcd8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    dcdc:	0001883a 	nop
    dce0:	e037883a 	mov	sp,fp
    dce4:	dfc00117 	ldw	ra,4(sp)
    dce8:	df000017 	ldw	fp,0(sp)
    dcec:	dec00204 	addi	sp,sp,8
    dcf0:	f800283a 	ret

0000dcf4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    dcf4:	defffe04 	addi	sp,sp,-8
    dcf8:	dfc00115 	stw	ra,4(sp)
    dcfc:	df000015 	stw	fp,0(sp)
    dd00:	d839883a 	mov	fp,sp
    ALTERA_AVALON_FIFO_INIT ( FIFO_0, fifo_0);
    dd04:	0001883a 	nop
    ALTERA_AVALON_FIFO_INIT ( FIFO_1, fifo_1);
    dd08:	0001883a 	nop
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    dd0c:	000d883a 	mov	r6,zero
    dd10:	000b883a 	mov	r5,zero
    dd14:	01000074 	movhi	r4,1
    dd18:	2101fc04 	addi	r4,r4,2032
    dd1c:	000dea80 	call	dea8 <altera_avalon_jtag_uart_init>
    dd20:	01000074 	movhi	r4,1
    dd24:	2101f204 	addi	r4,r4,1992
    dd28:	000dc840 	call	dc84 <alt_dev_reg>
}
    dd2c:	0001883a 	nop
    dd30:	e037883a 	mov	sp,fp
    dd34:	dfc00117 	ldw	ra,4(sp)
    dd38:	df000017 	ldw	fp,0(sp)
    dd3c:	dec00204 	addi	sp,sp,8
    dd40:	f800283a 	ret

0000dd44 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    dd44:	defffa04 	addi	sp,sp,-24
    dd48:	dfc00515 	stw	ra,20(sp)
    dd4c:	df000415 	stw	fp,16(sp)
    dd50:	df000404 	addi	fp,sp,16
    dd54:	e13ffd15 	stw	r4,-12(fp)
    dd58:	e17ffe15 	stw	r5,-8(fp)
    dd5c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dd60:	e0bffd17 	ldw	r2,-12(fp)
    dd64:	10800017 	ldw	r2,0(r2)
    dd68:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    dd6c:	e0bffc17 	ldw	r2,-16(fp)
    dd70:	10c00a04 	addi	r3,r2,40
    dd74:	e0bffd17 	ldw	r2,-12(fp)
    dd78:	10800217 	ldw	r2,8(r2)
    dd7c:	100f883a 	mov	r7,r2
    dd80:	e1bfff17 	ldw	r6,-4(fp)
    dd84:	e17ffe17 	ldw	r5,-8(fp)
    dd88:	1809883a 	mov	r4,r3
    dd8c:	000e37c0 	call	e37c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    dd90:	e037883a 	mov	sp,fp
    dd94:	dfc00117 	ldw	ra,4(sp)
    dd98:	df000017 	ldw	fp,0(sp)
    dd9c:	dec00204 	addi	sp,sp,8
    dda0:	f800283a 	ret

0000dda4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    dda4:	defffa04 	addi	sp,sp,-24
    dda8:	dfc00515 	stw	ra,20(sp)
    ddac:	df000415 	stw	fp,16(sp)
    ddb0:	df000404 	addi	fp,sp,16
    ddb4:	e13ffd15 	stw	r4,-12(fp)
    ddb8:	e17ffe15 	stw	r5,-8(fp)
    ddbc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    ddc0:	e0bffd17 	ldw	r2,-12(fp)
    ddc4:	10800017 	ldw	r2,0(r2)
    ddc8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    ddcc:	e0bffc17 	ldw	r2,-16(fp)
    ddd0:	10c00a04 	addi	r3,r2,40
    ddd4:	e0bffd17 	ldw	r2,-12(fp)
    ddd8:	10800217 	ldw	r2,8(r2)
    dddc:	100f883a 	mov	r7,r2
    dde0:	e1bfff17 	ldw	r6,-4(fp)
    dde4:	e17ffe17 	ldw	r5,-8(fp)
    dde8:	1809883a 	mov	r4,r3
    ddec:	000e5980 	call	e598 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    ddf0:	e037883a 	mov	sp,fp
    ddf4:	dfc00117 	ldw	ra,4(sp)
    ddf8:	df000017 	ldw	fp,0(sp)
    ddfc:	dec00204 	addi	sp,sp,8
    de00:	f800283a 	ret

0000de04 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    de04:	defffc04 	addi	sp,sp,-16
    de08:	dfc00315 	stw	ra,12(sp)
    de0c:	df000215 	stw	fp,8(sp)
    de10:	df000204 	addi	fp,sp,8
    de14:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    de18:	e0bfff17 	ldw	r2,-4(fp)
    de1c:	10800017 	ldw	r2,0(r2)
    de20:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    de24:	e0bffe17 	ldw	r2,-8(fp)
    de28:	10c00a04 	addi	r3,r2,40
    de2c:	e0bfff17 	ldw	r2,-4(fp)
    de30:	10800217 	ldw	r2,8(r2)
    de34:	100b883a 	mov	r5,r2
    de38:	1809883a 	mov	r4,r3
    de3c:	000e2240 	call	e224 <altera_avalon_jtag_uart_close>
}
    de40:	e037883a 	mov	sp,fp
    de44:	dfc00117 	ldw	ra,4(sp)
    de48:	df000017 	ldw	fp,0(sp)
    de4c:	dec00204 	addi	sp,sp,8
    de50:	f800283a 	ret

0000de54 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    de54:	defffa04 	addi	sp,sp,-24
    de58:	dfc00515 	stw	ra,20(sp)
    de5c:	df000415 	stw	fp,16(sp)
    de60:	df000404 	addi	fp,sp,16
    de64:	e13ffd15 	stw	r4,-12(fp)
    de68:	e17ffe15 	stw	r5,-8(fp)
    de6c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    de70:	e0bffd17 	ldw	r2,-12(fp)
    de74:	10800017 	ldw	r2,0(r2)
    de78:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    de7c:	e0bffc17 	ldw	r2,-16(fp)
    de80:	10800a04 	addi	r2,r2,40
    de84:	e1bfff17 	ldw	r6,-4(fp)
    de88:	e17ffe17 	ldw	r5,-8(fp)
    de8c:	1009883a 	mov	r4,r2
    de90:	000e28c0 	call	e28c <altera_avalon_jtag_uart_ioctl>
}
    de94:	e037883a 	mov	sp,fp
    de98:	dfc00117 	ldw	ra,4(sp)
    de9c:	df000017 	ldw	fp,0(sp)
    dea0:	dec00204 	addi	sp,sp,8
    dea4:	f800283a 	ret

0000dea8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    dea8:	defffa04 	addi	sp,sp,-24
    deac:	dfc00515 	stw	ra,20(sp)
    deb0:	df000415 	stw	fp,16(sp)
    deb4:	df000404 	addi	fp,sp,16
    deb8:	e13ffd15 	stw	r4,-12(fp)
    debc:	e17ffe15 	stw	r5,-8(fp)
    dec0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    dec4:	e0bffd17 	ldw	r2,-12(fp)
    dec8:	00c00044 	movi	r3,1
    decc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    ded0:	e0bffd17 	ldw	r2,-12(fp)
    ded4:	10800017 	ldw	r2,0(r2)
    ded8:	10800104 	addi	r2,r2,4
    dedc:	1007883a 	mov	r3,r2
    dee0:	e0bffd17 	ldw	r2,-12(fp)
    dee4:	10800817 	ldw	r2,32(r2)
    dee8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    deec:	e0bffe17 	ldw	r2,-8(fp)
    def0:	e0ffff17 	ldw	r3,-4(fp)
    def4:	d8000015 	stw	zero,0(sp)
    def8:	e1fffd17 	ldw	r7,-12(fp)
    defc:	01800074 	movhi	r6,1
    df00:	31b7dc04 	addi	r6,r6,-8336
    df04:	180b883a 	mov	r5,r3
    df08:	1009883a 	mov	r4,r2
    df0c:	000eaf00 	call	eaf0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    df10:	e0bffd17 	ldw	r2,-12(fp)
    df14:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    df18:	e0bffd17 	ldw	r2,-12(fp)
    df1c:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    df20:	00800074 	movhi	r2,1
    df24:	108ce004 	addi	r2,r2,13184
    df28:	10800017 	ldw	r2,0(r2)
    df2c:	e1fffd17 	ldw	r7,-12(fp)
    df30:	01800074 	movhi	r6,1
    df34:	31b85f04 	addi	r6,r6,-7812
    df38:	100b883a 	mov	r5,r2
    df3c:	1809883a 	mov	r4,r3
    df40:	000e7bc0 	call	e7bc <alt_alarm_start>
    df44:	1000040e 	bge	r2,zero,df58 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    df48:	e0fffd17 	ldw	r3,-12(fp)
    df4c:	00a00034 	movhi	r2,32768
    df50:	10bfffc4 	addi	r2,r2,-1
    df54:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    df58:	0001883a 	nop
    df5c:	e037883a 	mov	sp,fp
    df60:	dfc00117 	ldw	ra,4(sp)
    df64:	df000017 	ldw	fp,0(sp)
    df68:	dec00204 	addi	sp,sp,8
    df6c:	f800283a 	ret

0000df70 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    df70:	defff804 	addi	sp,sp,-32
    df74:	df000715 	stw	fp,28(sp)
    df78:	df000704 	addi	fp,sp,28
    df7c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    df80:	e0bfff17 	ldw	r2,-4(fp)
    df84:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    df88:	e0bffb17 	ldw	r2,-20(fp)
    df8c:	10800017 	ldw	r2,0(r2)
    df90:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    df94:	e0bffc17 	ldw	r2,-16(fp)
    df98:	10800104 	addi	r2,r2,4
    df9c:	10800037 	ldwio	r2,0(r2)
    dfa0:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    dfa4:	e0bffd17 	ldw	r2,-12(fp)
    dfa8:	1080c00c 	andi	r2,r2,768
    dfac:	10006d26 	beq	r2,zero,e164 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    dfb0:	e0bffd17 	ldw	r2,-12(fp)
    dfb4:	1080400c 	andi	r2,r2,256
    dfb8:	10003526 	beq	r2,zero,e090 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    dfbc:	00800074 	movhi	r2,1
    dfc0:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dfc4:	e0bffb17 	ldw	r2,-20(fp)
    dfc8:	10800a17 	ldw	r2,40(r2)
    dfcc:	10800044 	addi	r2,r2,1
    dfd0:	1081ffcc 	andi	r2,r2,2047
    dfd4:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    dfd8:	e0bffb17 	ldw	r2,-20(fp)
    dfdc:	10c00b17 	ldw	r3,44(r2)
    dfe0:	e0bffe17 	ldw	r2,-8(fp)
    dfe4:	18801526 	beq	r3,r2,e03c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    dfe8:	e0bffc17 	ldw	r2,-16(fp)
    dfec:	10800037 	ldwio	r2,0(r2)
    dff0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    dff4:	e0bff917 	ldw	r2,-28(fp)
    dff8:	10a0000c 	andi	r2,r2,32768
    dffc:	10001126 	beq	r2,zero,e044 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    e000:	e0bffb17 	ldw	r2,-20(fp)
    e004:	10800a17 	ldw	r2,40(r2)
    e008:	e0fff917 	ldw	r3,-28(fp)
    e00c:	1809883a 	mov	r4,r3
    e010:	e0fffb17 	ldw	r3,-20(fp)
    e014:	1885883a 	add	r2,r3,r2
    e018:	10800e04 	addi	r2,r2,56
    e01c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e020:	e0bffb17 	ldw	r2,-20(fp)
    e024:	10800a17 	ldw	r2,40(r2)
    e028:	10800044 	addi	r2,r2,1
    e02c:	10c1ffcc 	andi	r3,r2,2047
    e030:	e0bffb17 	ldw	r2,-20(fp)
    e034:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e038:	003fe206 	br	dfc4 <__alt_data_end+0xfffc4be4>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e03c:	0001883a 	nop
    e040:	00000106 	br	e048 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e044:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e048:	e0bff917 	ldw	r2,-28(fp)
    e04c:	10bfffec 	andhi	r2,r2,65535
    e050:	10000f26 	beq	r2,zero,e090 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e054:	e0bffb17 	ldw	r2,-20(fp)
    e058:	10c00817 	ldw	r3,32(r2)
    e05c:	00bfff84 	movi	r2,-2
    e060:	1886703a 	and	r3,r3,r2
    e064:	e0bffb17 	ldw	r2,-20(fp)
    e068:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e06c:	e0bffc17 	ldw	r2,-16(fp)
    e070:	10800104 	addi	r2,r2,4
    e074:	1007883a 	mov	r3,r2
    e078:	e0bffb17 	ldw	r2,-20(fp)
    e07c:	10800817 	ldw	r2,32(r2)
    e080:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e084:	e0bffc17 	ldw	r2,-16(fp)
    e088:	10800104 	addi	r2,r2,4
    e08c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e090:	e0bffd17 	ldw	r2,-12(fp)
    e094:	1080800c 	andi	r2,r2,512
    e098:	103fbe26 	beq	r2,zero,df94 <__alt_data_end+0xfffc4bb4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e09c:	e0bffd17 	ldw	r2,-12(fp)
    e0a0:	1004d43a 	srli	r2,r2,16
    e0a4:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e0a8:	00001406 	br	e0fc <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e0ac:	e0bffc17 	ldw	r2,-16(fp)
    e0b0:	e0fffb17 	ldw	r3,-20(fp)
    e0b4:	18c00d17 	ldw	r3,52(r3)
    e0b8:	e13ffb17 	ldw	r4,-20(fp)
    e0bc:	20c7883a 	add	r3,r4,r3
    e0c0:	18c20e04 	addi	r3,r3,2104
    e0c4:	18c00003 	ldbu	r3,0(r3)
    e0c8:	18c03fcc 	andi	r3,r3,255
    e0cc:	18c0201c 	xori	r3,r3,128
    e0d0:	18ffe004 	addi	r3,r3,-128
    e0d4:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e0d8:	e0bffb17 	ldw	r2,-20(fp)
    e0dc:	10800d17 	ldw	r2,52(r2)
    e0e0:	10800044 	addi	r2,r2,1
    e0e4:	10c1ffcc 	andi	r3,r2,2047
    e0e8:	e0bffb17 	ldw	r2,-20(fp)
    e0ec:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e0f0:	e0bffa17 	ldw	r2,-24(fp)
    e0f4:	10bfffc4 	addi	r2,r2,-1
    e0f8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e0fc:	e0bffa17 	ldw	r2,-24(fp)
    e100:	10000526 	beq	r2,zero,e118 <altera_avalon_jtag_uart_irq+0x1a8>
    e104:	e0bffb17 	ldw	r2,-20(fp)
    e108:	10c00d17 	ldw	r3,52(r2)
    e10c:	e0bffb17 	ldw	r2,-20(fp)
    e110:	10800c17 	ldw	r2,48(r2)
    e114:	18bfe51e 	bne	r3,r2,e0ac <__alt_data_end+0xfffc4ccc>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e118:	e0bffa17 	ldw	r2,-24(fp)
    e11c:	103f9d26 	beq	r2,zero,df94 <__alt_data_end+0xfffc4bb4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e120:	e0bffb17 	ldw	r2,-20(fp)
    e124:	10c00817 	ldw	r3,32(r2)
    e128:	00bfff44 	movi	r2,-3
    e12c:	1886703a 	and	r3,r3,r2
    e130:	e0bffb17 	ldw	r2,-20(fp)
    e134:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e138:	e0bffb17 	ldw	r2,-20(fp)
    e13c:	10800017 	ldw	r2,0(r2)
    e140:	10800104 	addi	r2,r2,4
    e144:	1007883a 	mov	r3,r2
    e148:	e0bffb17 	ldw	r2,-20(fp)
    e14c:	10800817 	ldw	r2,32(r2)
    e150:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e154:	e0bffc17 	ldw	r2,-16(fp)
    e158:	10800104 	addi	r2,r2,4
    e15c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    e160:	003f8c06 	br	df94 <__alt_data_end+0xfffc4bb4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    e164:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    e168:	0001883a 	nop
    e16c:	e037883a 	mov	sp,fp
    e170:	df000017 	ldw	fp,0(sp)
    e174:	dec00104 	addi	sp,sp,4
    e178:	f800283a 	ret

0000e17c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e17c:	defff804 	addi	sp,sp,-32
    e180:	df000715 	stw	fp,28(sp)
    e184:	df000704 	addi	fp,sp,28
    e188:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e18c:	e0bffb17 	ldw	r2,-20(fp)
    e190:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e194:	e0bff917 	ldw	r2,-28(fp)
    e198:	10800017 	ldw	r2,0(r2)
    e19c:	10800104 	addi	r2,r2,4
    e1a0:	10800037 	ldwio	r2,0(r2)
    e1a4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e1a8:	e0bffa17 	ldw	r2,-24(fp)
    e1ac:	1081000c 	andi	r2,r2,1024
    e1b0:	10000b26 	beq	r2,zero,e1e0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e1b4:	e0bff917 	ldw	r2,-28(fp)
    e1b8:	10800017 	ldw	r2,0(r2)
    e1bc:	10800104 	addi	r2,r2,4
    e1c0:	1007883a 	mov	r3,r2
    e1c4:	e0bff917 	ldw	r2,-28(fp)
    e1c8:	10800817 	ldw	r2,32(r2)
    e1cc:	10810014 	ori	r2,r2,1024
    e1d0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e1d4:	e0bff917 	ldw	r2,-28(fp)
    e1d8:	10000915 	stw	zero,36(r2)
    e1dc:	00000a06 	br	e208 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e1e0:	e0bff917 	ldw	r2,-28(fp)
    e1e4:	10c00917 	ldw	r3,36(r2)
    e1e8:	00a00034 	movhi	r2,32768
    e1ec:	10bfff04 	addi	r2,r2,-4
    e1f0:	10c00536 	bltu	r2,r3,e208 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e1f4:	e0bff917 	ldw	r2,-28(fp)
    e1f8:	10800917 	ldw	r2,36(r2)
    e1fc:	10c00044 	addi	r3,r2,1
    e200:	e0bff917 	ldw	r2,-28(fp)
    e204:	10c00915 	stw	r3,36(r2)
    e208:	00800074 	movhi	r2,1
    e20c:	108ce004 	addi	r2,r2,13184
    e210:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e214:	e037883a 	mov	sp,fp
    e218:	df000017 	ldw	fp,0(sp)
    e21c:	dec00104 	addi	sp,sp,4
    e220:	f800283a 	ret

0000e224 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e224:	defffd04 	addi	sp,sp,-12
    e228:	df000215 	stw	fp,8(sp)
    e22c:	df000204 	addi	fp,sp,8
    e230:	e13ffe15 	stw	r4,-8(fp)
    e234:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e238:	00000506 	br	e250 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e23c:	e0bfff17 	ldw	r2,-4(fp)
    e240:	1090000c 	andi	r2,r2,16384
    e244:	10000226 	beq	r2,zero,e250 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e248:	00bffd44 	movi	r2,-11
    e24c:	00000b06 	br	e27c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e250:	e0bffe17 	ldw	r2,-8(fp)
    e254:	10c00d17 	ldw	r3,52(r2)
    e258:	e0bffe17 	ldw	r2,-8(fp)
    e25c:	10800c17 	ldw	r2,48(r2)
    e260:	18800526 	beq	r3,r2,e278 <altera_avalon_jtag_uart_close+0x54>
    e264:	e0bffe17 	ldw	r2,-8(fp)
    e268:	10c00917 	ldw	r3,36(r2)
    e26c:	e0bffe17 	ldw	r2,-8(fp)
    e270:	10800117 	ldw	r2,4(r2)
    e274:	18bff136 	bltu	r3,r2,e23c <__alt_data_end+0xfffc4e5c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e278:	0005883a 	mov	r2,zero
}
    e27c:	e037883a 	mov	sp,fp
    e280:	df000017 	ldw	fp,0(sp)
    e284:	dec00104 	addi	sp,sp,4
    e288:	f800283a 	ret

0000e28c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e28c:	defffa04 	addi	sp,sp,-24
    e290:	df000515 	stw	fp,20(sp)
    e294:	df000504 	addi	fp,sp,20
    e298:	e13ffd15 	stw	r4,-12(fp)
    e29c:	e17ffe15 	stw	r5,-8(fp)
    e2a0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    e2a4:	00bff9c4 	movi	r2,-25
    e2a8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    e2ac:	e0bffe17 	ldw	r2,-8(fp)
    e2b0:	10da8060 	cmpeqi	r3,r2,27137
    e2b4:	1800031e 	bne	r3,zero,e2c4 <altera_avalon_jtag_uart_ioctl+0x38>
    e2b8:	109a80a0 	cmpeqi	r2,r2,27138
    e2bc:	1000181e 	bne	r2,zero,e320 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    e2c0:	00002906 	br	e368 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e2c4:	e0bffd17 	ldw	r2,-12(fp)
    e2c8:	10c00117 	ldw	r3,4(r2)
    e2cc:	00a00034 	movhi	r2,32768
    e2d0:	10bfffc4 	addi	r2,r2,-1
    e2d4:	18802126 	beq	r3,r2,e35c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    e2d8:	e0bfff17 	ldw	r2,-4(fp)
    e2dc:	10800017 	ldw	r2,0(r2)
    e2e0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e2e4:	e0bffc17 	ldw	r2,-16(fp)
    e2e8:	10800090 	cmplti	r2,r2,2
    e2ec:	1000061e 	bne	r2,zero,e308 <altera_avalon_jtag_uart_ioctl+0x7c>
    e2f0:	e0fffc17 	ldw	r3,-16(fp)
    e2f4:	00a00034 	movhi	r2,32768
    e2f8:	10bfffc4 	addi	r2,r2,-1
    e2fc:	18800226 	beq	r3,r2,e308 <altera_avalon_jtag_uart_ioctl+0x7c>
    e300:	e0bffc17 	ldw	r2,-16(fp)
    e304:	00000206 	br	e310 <altera_avalon_jtag_uart_ioctl+0x84>
    e308:	00a00034 	movhi	r2,32768
    e30c:	10bfff84 	addi	r2,r2,-2
    e310:	e0fffd17 	ldw	r3,-12(fp)
    e314:	18800115 	stw	r2,4(r3)
      rc = 0;
    e318:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e31c:	00000f06 	br	e35c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e320:	e0bffd17 	ldw	r2,-12(fp)
    e324:	10c00117 	ldw	r3,4(r2)
    e328:	00a00034 	movhi	r2,32768
    e32c:	10bfffc4 	addi	r2,r2,-1
    e330:	18800c26 	beq	r3,r2,e364 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e334:	e0bffd17 	ldw	r2,-12(fp)
    e338:	10c00917 	ldw	r3,36(r2)
    e33c:	e0bffd17 	ldw	r2,-12(fp)
    e340:	10800117 	ldw	r2,4(r2)
    e344:	1885803a 	cmpltu	r2,r3,r2
    e348:	10c03fcc 	andi	r3,r2,255
    e34c:	e0bfff17 	ldw	r2,-4(fp)
    e350:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e354:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e358:	00000206 	br	e364 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    e35c:	0001883a 	nop
    e360:	00000106 	br	e368 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    e364:	0001883a 	nop

  default:
    break;
  }

  return rc;
    e368:	e0bffb17 	ldw	r2,-20(fp)
}
    e36c:	e037883a 	mov	sp,fp
    e370:	df000017 	ldw	fp,0(sp)
    e374:	dec00104 	addi	sp,sp,4
    e378:	f800283a 	ret

0000e37c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e37c:	defff304 	addi	sp,sp,-52
    e380:	dfc00c15 	stw	ra,48(sp)
    e384:	df000b15 	stw	fp,44(sp)
    e388:	df000b04 	addi	fp,sp,44
    e38c:	e13ffc15 	stw	r4,-16(fp)
    e390:	e17ffd15 	stw	r5,-12(fp)
    e394:	e1bffe15 	stw	r6,-8(fp)
    e398:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    e39c:	e0bffd17 	ldw	r2,-12(fp)
    e3a0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e3a4:	00004706 	br	e4c4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e3a8:	e0bffc17 	ldw	r2,-16(fp)
    e3ac:	10800a17 	ldw	r2,40(r2)
    e3b0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    e3b4:	e0bffc17 	ldw	r2,-16(fp)
    e3b8:	10800b17 	ldw	r2,44(r2)
    e3bc:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    e3c0:	e0fff717 	ldw	r3,-36(fp)
    e3c4:	e0bff817 	ldw	r2,-32(fp)
    e3c8:	18800536 	bltu	r3,r2,e3e0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e3cc:	e0fff717 	ldw	r3,-36(fp)
    e3d0:	e0bff817 	ldw	r2,-32(fp)
    e3d4:	1885c83a 	sub	r2,r3,r2
    e3d8:	e0bff615 	stw	r2,-40(fp)
    e3dc:	00000406 	br	e3f0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e3e0:	00c20004 	movi	r3,2048
    e3e4:	e0bff817 	ldw	r2,-32(fp)
    e3e8:	1885c83a 	sub	r2,r3,r2
    e3ec:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e3f0:	e0bff617 	ldw	r2,-40(fp)
    e3f4:	10001e26 	beq	r2,zero,e470 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e3f8:	e0fffe17 	ldw	r3,-8(fp)
    e3fc:	e0bff617 	ldw	r2,-40(fp)
    e400:	1880022e 	bgeu	r3,r2,e40c <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e404:	e0bffe17 	ldw	r2,-8(fp)
    e408:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e40c:	e0bffc17 	ldw	r2,-16(fp)
    e410:	10c00e04 	addi	r3,r2,56
    e414:	e0bff817 	ldw	r2,-32(fp)
    e418:	1885883a 	add	r2,r3,r2
    e41c:	e1bff617 	ldw	r6,-40(fp)
    e420:	100b883a 	mov	r5,r2
    e424:	e13ff517 	ldw	r4,-44(fp)
    e428:	0005f300 	call	5f30 <memcpy>
      ptr   += n;
    e42c:	e0fff517 	ldw	r3,-44(fp)
    e430:	e0bff617 	ldw	r2,-40(fp)
    e434:	1885883a 	add	r2,r3,r2
    e438:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    e43c:	e0fffe17 	ldw	r3,-8(fp)
    e440:	e0bff617 	ldw	r2,-40(fp)
    e444:	1885c83a 	sub	r2,r3,r2
    e448:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e44c:	e0fff817 	ldw	r3,-32(fp)
    e450:	e0bff617 	ldw	r2,-40(fp)
    e454:	1885883a 	add	r2,r3,r2
    e458:	10c1ffcc 	andi	r3,r2,2047
    e45c:	e0bffc17 	ldw	r2,-16(fp)
    e460:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e464:	e0bffe17 	ldw	r2,-8(fp)
    e468:	00bfcf16 	blt	zero,r2,e3a8 <__alt_data_end+0xfffc4fc8>
    e46c:	00000106 	br	e474 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    e470:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    e474:	e0fff517 	ldw	r3,-44(fp)
    e478:	e0bffd17 	ldw	r2,-12(fp)
    e47c:	1880141e 	bne	r3,r2,e4d0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e480:	e0bfff17 	ldw	r2,-4(fp)
    e484:	1090000c 	andi	r2,r2,16384
    e488:	1000131e 	bne	r2,zero,e4d8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e48c:	0001883a 	nop
    e490:	e0bffc17 	ldw	r2,-16(fp)
    e494:	10c00a17 	ldw	r3,40(r2)
    e498:	e0bff717 	ldw	r2,-36(fp)
    e49c:	1880051e 	bne	r3,r2,e4b4 <altera_avalon_jtag_uart_read+0x138>
    e4a0:	e0bffc17 	ldw	r2,-16(fp)
    e4a4:	10c00917 	ldw	r3,36(r2)
    e4a8:	e0bffc17 	ldw	r2,-16(fp)
    e4ac:	10800117 	ldw	r2,4(r2)
    e4b0:	18bff736 	bltu	r3,r2,e490 <__alt_data_end+0xfffc50b0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e4b4:	e0bffc17 	ldw	r2,-16(fp)
    e4b8:	10c00a17 	ldw	r3,40(r2)
    e4bc:	e0bff717 	ldw	r2,-36(fp)
    e4c0:	18800726 	beq	r3,r2,e4e0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e4c4:	e0bffe17 	ldw	r2,-8(fp)
    e4c8:	00bfb716 	blt	zero,r2,e3a8 <__alt_data_end+0xfffc4fc8>
    e4cc:	00000506 	br	e4e4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    e4d0:	0001883a 	nop
    e4d4:	00000306 	br	e4e4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    e4d8:	0001883a 	nop
    e4dc:	00000106 	br	e4e4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    e4e0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e4e4:	e0fff517 	ldw	r3,-44(fp)
    e4e8:	e0bffd17 	ldw	r2,-12(fp)
    e4ec:	18801826 	beq	r3,r2,e550 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e4f0:	0005303a 	rdctl	r2,status
    e4f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e4f8:	e0fffb17 	ldw	r3,-20(fp)
    e4fc:	00bfff84 	movi	r2,-2
    e500:	1884703a 	and	r2,r3,r2
    e504:	1001703a 	wrctl	status,r2
  
  return context;
    e508:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e50c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e510:	e0bffc17 	ldw	r2,-16(fp)
    e514:	10800817 	ldw	r2,32(r2)
    e518:	10c00054 	ori	r3,r2,1
    e51c:	e0bffc17 	ldw	r2,-16(fp)
    e520:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e524:	e0bffc17 	ldw	r2,-16(fp)
    e528:	10800017 	ldw	r2,0(r2)
    e52c:	10800104 	addi	r2,r2,4
    e530:	1007883a 	mov	r3,r2
    e534:	e0bffc17 	ldw	r2,-16(fp)
    e538:	10800817 	ldw	r2,32(r2)
    e53c:	18800035 	stwio	r2,0(r3)
    e540:	e0bffa17 	ldw	r2,-24(fp)
    e544:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e548:	e0bff917 	ldw	r2,-28(fp)
    e54c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e550:	e0fff517 	ldw	r3,-44(fp)
    e554:	e0bffd17 	ldw	r2,-12(fp)
    e558:	18800426 	beq	r3,r2,e56c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e55c:	e0fff517 	ldw	r3,-44(fp)
    e560:	e0bffd17 	ldw	r2,-12(fp)
    e564:	1885c83a 	sub	r2,r3,r2
    e568:	00000606 	br	e584 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e56c:	e0bfff17 	ldw	r2,-4(fp)
    e570:	1090000c 	andi	r2,r2,16384
    e574:	10000226 	beq	r2,zero,e580 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e578:	00bffd44 	movi	r2,-11
    e57c:	00000106 	br	e584 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e580:	00bffec4 	movi	r2,-5
}
    e584:	e037883a 	mov	sp,fp
    e588:	dfc00117 	ldw	ra,4(sp)
    e58c:	df000017 	ldw	fp,0(sp)
    e590:	dec00204 	addi	sp,sp,8
    e594:	f800283a 	ret

0000e598 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e598:	defff304 	addi	sp,sp,-52
    e59c:	dfc00c15 	stw	ra,48(sp)
    e5a0:	df000b15 	stw	fp,44(sp)
    e5a4:	df000b04 	addi	fp,sp,44
    e5a8:	e13ffc15 	stw	r4,-16(fp)
    e5ac:	e17ffd15 	stw	r5,-12(fp)
    e5b0:	e1bffe15 	stw	r6,-8(fp)
    e5b4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e5b8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e5bc:	e0bffd17 	ldw	r2,-12(fp)
    e5c0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e5c4:	00003706 	br	e6a4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e5c8:	e0bffc17 	ldw	r2,-16(fp)
    e5cc:	10800c17 	ldw	r2,48(r2)
    e5d0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    e5d4:	e0bffc17 	ldw	r2,-16(fp)
    e5d8:	10800d17 	ldw	r2,52(r2)
    e5dc:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    e5e0:	e0fff917 	ldw	r3,-28(fp)
    e5e4:	e0bff517 	ldw	r2,-44(fp)
    e5e8:	1880062e 	bgeu	r3,r2,e604 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e5ec:	e0fff517 	ldw	r3,-44(fp)
    e5f0:	e0bff917 	ldw	r2,-28(fp)
    e5f4:	1885c83a 	sub	r2,r3,r2
    e5f8:	10bfffc4 	addi	r2,r2,-1
    e5fc:	e0bff615 	stw	r2,-40(fp)
    e600:	00000b06 	br	e630 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e604:	e0bff517 	ldw	r2,-44(fp)
    e608:	10000526 	beq	r2,zero,e620 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e60c:	00c20004 	movi	r3,2048
    e610:	e0bff917 	ldw	r2,-28(fp)
    e614:	1885c83a 	sub	r2,r3,r2
    e618:	e0bff615 	stw	r2,-40(fp)
    e61c:	00000406 	br	e630 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e620:	00c1ffc4 	movi	r3,2047
    e624:	e0bff917 	ldw	r2,-28(fp)
    e628:	1885c83a 	sub	r2,r3,r2
    e62c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e630:	e0bff617 	ldw	r2,-40(fp)
    e634:	10001e26 	beq	r2,zero,e6b0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e638:	e0fffe17 	ldw	r3,-8(fp)
    e63c:	e0bff617 	ldw	r2,-40(fp)
    e640:	1880022e 	bgeu	r3,r2,e64c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e644:	e0bffe17 	ldw	r2,-8(fp)
    e648:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e64c:	e0bffc17 	ldw	r2,-16(fp)
    e650:	10c20e04 	addi	r3,r2,2104
    e654:	e0bff917 	ldw	r2,-28(fp)
    e658:	1885883a 	add	r2,r3,r2
    e65c:	e1bff617 	ldw	r6,-40(fp)
    e660:	e17ffd17 	ldw	r5,-12(fp)
    e664:	1009883a 	mov	r4,r2
    e668:	0005f300 	call	5f30 <memcpy>
      ptr   += n;
    e66c:	e0fffd17 	ldw	r3,-12(fp)
    e670:	e0bff617 	ldw	r2,-40(fp)
    e674:	1885883a 	add	r2,r3,r2
    e678:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e67c:	e0fffe17 	ldw	r3,-8(fp)
    e680:	e0bff617 	ldw	r2,-40(fp)
    e684:	1885c83a 	sub	r2,r3,r2
    e688:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e68c:	e0fff917 	ldw	r3,-28(fp)
    e690:	e0bff617 	ldw	r2,-40(fp)
    e694:	1885883a 	add	r2,r3,r2
    e698:	10c1ffcc 	andi	r3,r2,2047
    e69c:	e0bffc17 	ldw	r2,-16(fp)
    e6a0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e6a4:	e0bffe17 	ldw	r2,-8(fp)
    e6a8:	00bfc716 	blt	zero,r2,e5c8 <__alt_data_end+0xfffc51e8>
    e6ac:	00000106 	br	e6b4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    e6b0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e6b4:	0005303a 	rdctl	r2,status
    e6b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e6bc:	e0fffb17 	ldw	r3,-20(fp)
    e6c0:	00bfff84 	movi	r2,-2
    e6c4:	1884703a 	and	r2,r3,r2
    e6c8:	1001703a 	wrctl	status,r2
  
  return context;
    e6cc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e6d0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e6d4:	e0bffc17 	ldw	r2,-16(fp)
    e6d8:	10800817 	ldw	r2,32(r2)
    e6dc:	10c00094 	ori	r3,r2,2
    e6e0:	e0bffc17 	ldw	r2,-16(fp)
    e6e4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e6e8:	e0bffc17 	ldw	r2,-16(fp)
    e6ec:	10800017 	ldw	r2,0(r2)
    e6f0:	10800104 	addi	r2,r2,4
    e6f4:	1007883a 	mov	r3,r2
    e6f8:	e0bffc17 	ldw	r2,-16(fp)
    e6fc:	10800817 	ldw	r2,32(r2)
    e700:	18800035 	stwio	r2,0(r3)
    e704:	e0bffa17 	ldw	r2,-24(fp)
    e708:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e70c:	e0bff817 	ldw	r2,-32(fp)
    e710:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e714:	e0bffe17 	ldw	r2,-8(fp)
    e718:	0080100e 	bge	zero,r2,e75c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e71c:	e0bfff17 	ldw	r2,-4(fp)
    e720:	1090000c 	andi	r2,r2,16384
    e724:	1000101e 	bne	r2,zero,e768 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e728:	0001883a 	nop
    e72c:	e0bffc17 	ldw	r2,-16(fp)
    e730:	10c00d17 	ldw	r3,52(r2)
    e734:	e0bff517 	ldw	r2,-44(fp)
    e738:	1880051e 	bne	r3,r2,e750 <altera_avalon_jtag_uart_write+0x1b8>
    e73c:	e0bffc17 	ldw	r2,-16(fp)
    e740:	10c00917 	ldw	r3,36(r2)
    e744:	e0bffc17 	ldw	r2,-16(fp)
    e748:	10800117 	ldw	r2,4(r2)
    e74c:	18bff736 	bltu	r3,r2,e72c <__alt_data_end+0xfffc534c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e750:	e0bffc17 	ldw	r2,-16(fp)
    e754:	10800917 	ldw	r2,36(r2)
    e758:	1000051e 	bne	r2,zero,e770 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e75c:	e0bffe17 	ldw	r2,-8(fp)
    e760:	00bfd016 	blt	zero,r2,e6a4 <__alt_data_end+0xfffc52c4>
    e764:	00000306 	br	e774 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    e768:	0001883a 	nop
    e76c:	00000106 	br	e774 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    e770:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e774:	e0fffd17 	ldw	r3,-12(fp)
    e778:	e0bff717 	ldw	r2,-36(fp)
    e77c:	18800426 	beq	r3,r2,e790 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e780:	e0fffd17 	ldw	r3,-12(fp)
    e784:	e0bff717 	ldw	r2,-36(fp)
    e788:	1885c83a 	sub	r2,r3,r2
    e78c:	00000606 	br	e7a8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e790:	e0bfff17 	ldw	r2,-4(fp)
    e794:	1090000c 	andi	r2,r2,16384
    e798:	10000226 	beq	r2,zero,e7a4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e79c:	00bffd44 	movi	r2,-11
    e7a0:	00000106 	br	e7a8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e7a4:	00bffec4 	movi	r2,-5
}
    e7a8:	e037883a 	mov	sp,fp
    e7ac:	dfc00117 	ldw	ra,4(sp)
    e7b0:	df000017 	ldw	fp,0(sp)
    e7b4:	dec00204 	addi	sp,sp,8
    e7b8:	f800283a 	ret

0000e7bc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e7bc:	defff504 	addi	sp,sp,-44
    e7c0:	df000a15 	stw	fp,40(sp)
    e7c4:	df000a04 	addi	fp,sp,40
    e7c8:	e13ffc15 	stw	r4,-16(fp)
    e7cc:	e17ffd15 	stw	r5,-12(fp)
    e7d0:	e1bffe15 	stw	r6,-8(fp)
    e7d4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e7d8:	e03ff615 	stw	zero,-40(fp)
    e7dc:	00800074 	movhi	r2,1
    e7e0:	108ce004 	addi	r2,r2,13184
    e7e4:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
    e7e8:	10003f26 	beq	r2,zero,e8e8 <alt_alarm_start+0x12c>
  {
    if (alarm)
    e7ec:	e0bffc17 	ldw	r2,-16(fp)
    e7f0:	10003b26 	beq	r2,zero,e8e0 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
    e7f4:	e0bffc17 	ldw	r2,-16(fp)
    e7f8:	e0fffe17 	ldw	r3,-8(fp)
    e7fc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e800:	e0bffc17 	ldw	r2,-16(fp)
    e804:	e0ffff17 	ldw	r3,-4(fp)
    e808:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e80c:	0005303a 	rdctl	r2,status
    e810:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e814:	e0fff917 	ldw	r3,-28(fp)
    e818:	00bfff84 	movi	r2,-2
    e81c:	1884703a 	and	r2,r3,r2
    e820:	1001703a 	wrctl	status,r2
  
  return context;
    e824:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    e828:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e82c:	00800074 	movhi	r2,1
    e830:	108ce104 	addi	r2,r2,13188
    e834:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
    e838:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e83c:	e0fffd17 	ldw	r3,-12(fp)
    e840:	e0bff617 	ldw	r2,-40(fp)
    e844:	1885883a 	add	r2,r3,r2
    e848:	10c00044 	addi	r3,r2,1
    e84c:	e0bffc17 	ldw	r2,-16(fp)
    e850:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e854:	e0bffc17 	ldw	r2,-16(fp)
    e858:	10c00217 	ldw	r3,8(r2)
    e85c:	e0bff617 	ldw	r2,-40(fp)
    e860:	1880042e 	bgeu	r3,r2,e874 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
    e864:	e0bffc17 	ldw	r2,-16(fp)
    e868:	00c00044 	movi	r3,1
    e86c:	10c00405 	stb	r3,16(r2)
    e870:	00000206 	br	e87c <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
    e874:	e0bffc17 	ldw	r2,-16(fp)
    e878:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e87c:	e0fffc17 	ldw	r3,-16(fp)
    e880:	00800074 	movhi	r2,1
    e884:	10861804 	addi	r2,r2,6240
    e888:	e0bffa15 	stw	r2,-24(fp)
    e88c:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e890:	e0bffb17 	ldw	r2,-20(fp)
    e894:	e0fffa17 	ldw	r3,-24(fp)
    e898:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e89c:	e0bffa17 	ldw	r2,-24(fp)
    e8a0:	10c00017 	ldw	r3,0(r2)
    e8a4:	e0bffb17 	ldw	r2,-20(fp)
    e8a8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e8ac:	e0bffa17 	ldw	r2,-24(fp)
    e8b0:	10800017 	ldw	r2,0(r2)
    e8b4:	e0fffb17 	ldw	r3,-20(fp)
    e8b8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e8bc:	e0bffa17 	ldw	r2,-24(fp)
    e8c0:	e0fffb17 	ldw	r3,-20(fp)
    e8c4:	10c00015 	stw	r3,0(r2)
    e8c8:	e0bff817 	ldw	r2,-32(fp)
    e8cc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e8d0:	e0bff717 	ldw	r2,-36(fp)
    e8d4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e8d8:	0005883a 	mov	r2,zero
    e8dc:	00000306 	br	e8ec <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
    e8e0:	00bffa84 	movi	r2,-22
    e8e4:	00000106 	br	e8ec <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
    e8e8:	00bfde84 	movi	r2,-134
  }
}
    e8ec:	e037883a 	mov	sp,fp
    e8f0:	df000017 	ldw	fp,0(sp)
    e8f4:	dec00104 	addi	sp,sp,4
    e8f8:	f800283a 	ret

0000e8fc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e8fc:	deffff04 	addi	sp,sp,-4
    e900:	df000015 	stw	fp,0(sp)
    e904:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e908:	0001883a 	nop
    e90c:	e037883a 	mov	sp,fp
    e910:	df000017 	ldw	fp,0(sp)
    e914:	dec00104 	addi	sp,sp,4
    e918:	f800283a 	ret

0000e91c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e91c:	defffe04 	addi	sp,sp,-8
    e920:	dfc00115 	stw	ra,4(sp)
    e924:	df000015 	stw	fp,0(sp)
    e928:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e92c:	00800074 	movhi	r2,1
    e930:	10861504 	addi	r2,r2,6228
    e934:	10800017 	ldw	r2,0(r2)
    e938:	10000526 	beq	r2,zero,e950 <alt_get_errno+0x34>
    e93c:	00800074 	movhi	r2,1
    e940:	10861504 	addi	r2,r2,6228
    e944:	10800017 	ldw	r2,0(r2)
    e948:	103ee83a 	callr	r2
    e94c:	00000206 	br	e958 <alt_get_errno+0x3c>
    e950:	00800074 	movhi	r2,1
    e954:	108cdb04 	addi	r2,r2,13164
}
    e958:	e037883a 	mov	sp,fp
    e95c:	dfc00117 	ldw	ra,4(sp)
    e960:	df000017 	ldw	fp,0(sp)
    e964:	dec00204 	addi	sp,sp,8
    e968:	f800283a 	ret

0000e96c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e96c:	defffa04 	addi	sp,sp,-24
    e970:	dfc00515 	stw	ra,20(sp)
    e974:	df000415 	stw	fp,16(sp)
    e978:	df000404 	addi	fp,sp,16
    e97c:	e13ffe15 	stw	r4,-8(fp)
    e980:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e984:	e0bffe17 	ldw	r2,-8(fp)
    e988:	10000326 	beq	r2,zero,e998 <alt_dev_llist_insert+0x2c>
    e98c:	e0bffe17 	ldw	r2,-8(fp)
    e990:	10800217 	ldw	r2,8(r2)
    e994:	1000061e 	bne	r2,zero,e9b0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e998:	000e91c0 	call	e91c <alt_get_errno>
    e99c:	1007883a 	mov	r3,r2
    e9a0:	00800584 	movi	r2,22
    e9a4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e9a8:	00bffa84 	movi	r2,-22
    e9ac:	00001306 	br	e9fc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e9b0:	e0bffe17 	ldw	r2,-8(fp)
    e9b4:	e0ffff17 	ldw	r3,-4(fp)
    e9b8:	e0fffc15 	stw	r3,-16(fp)
    e9bc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e9c0:	e0bffd17 	ldw	r2,-12(fp)
    e9c4:	e0fffc17 	ldw	r3,-16(fp)
    e9c8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e9cc:	e0bffc17 	ldw	r2,-16(fp)
    e9d0:	10c00017 	ldw	r3,0(r2)
    e9d4:	e0bffd17 	ldw	r2,-12(fp)
    e9d8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e9dc:	e0bffc17 	ldw	r2,-16(fp)
    e9e0:	10800017 	ldw	r2,0(r2)
    e9e4:	e0fffd17 	ldw	r3,-12(fp)
    e9e8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e9ec:	e0bffc17 	ldw	r2,-16(fp)
    e9f0:	e0fffd17 	ldw	r3,-12(fp)
    e9f4:	10c00015 	stw	r3,0(r2)

  return 0;  
    e9f8:	0005883a 	mov	r2,zero
}
    e9fc:	e037883a 	mov	sp,fp
    ea00:	dfc00117 	ldw	ra,4(sp)
    ea04:	df000017 	ldw	fp,0(sp)
    ea08:	dec00204 	addi	sp,sp,8
    ea0c:	f800283a 	ret

0000ea10 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    ea10:	defffd04 	addi	sp,sp,-12
    ea14:	dfc00215 	stw	ra,8(sp)
    ea18:	df000115 	stw	fp,4(sp)
    ea1c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    ea20:	00800074 	movhi	r2,1
    ea24:	10be8c04 	addi	r2,r2,-1488
    ea28:	e0bfff15 	stw	r2,-4(fp)
    ea2c:	00000606 	br	ea48 <_do_ctors+0x38>
        (*ctor) (); 
    ea30:	e0bfff17 	ldw	r2,-4(fp)
    ea34:	10800017 	ldw	r2,0(r2)
    ea38:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    ea3c:	e0bfff17 	ldw	r2,-4(fp)
    ea40:	10bfff04 	addi	r2,r2,-4
    ea44:	e0bfff15 	stw	r2,-4(fp)
    ea48:	e0ffff17 	ldw	r3,-4(fp)
    ea4c:	00800074 	movhi	r2,1
    ea50:	10be8d04 	addi	r2,r2,-1484
    ea54:	18bff62e 	bgeu	r3,r2,ea30 <__alt_data_end+0xfffc5650>
        (*ctor) (); 
}
    ea58:	0001883a 	nop
    ea5c:	e037883a 	mov	sp,fp
    ea60:	dfc00117 	ldw	ra,4(sp)
    ea64:	df000017 	ldw	fp,0(sp)
    ea68:	dec00204 	addi	sp,sp,8
    ea6c:	f800283a 	ret

0000ea70 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    ea70:	defffd04 	addi	sp,sp,-12
    ea74:	dfc00215 	stw	ra,8(sp)
    ea78:	df000115 	stw	fp,4(sp)
    ea7c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ea80:	00800074 	movhi	r2,1
    ea84:	10be8c04 	addi	r2,r2,-1488
    ea88:	e0bfff15 	stw	r2,-4(fp)
    ea8c:	00000606 	br	eaa8 <_do_dtors+0x38>
        (*dtor) (); 
    ea90:	e0bfff17 	ldw	r2,-4(fp)
    ea94:	10800017 	ldw	r2,0(r2)
    ea98:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ea9c:	e0bfff17 	ldw	r2,-4(fp)
    eaa0:	10bfff04 	addi	r2,r2,-4
    eaa4:	e0bfff15 	stw	r2,-4(fp)
    eaa8:	e0ffff17 	ldw	r3,-4(fp)
    eaac:	00800074 	movhi	r2,1
    eab0:	10be8d04 	addi	r2,r2,-1484
    eab4:	18bff62e 	bgeu	r3,r2,ea90 <__alt_data_end+0xfffc56b0>
        (*dtor) (); 
}
    eab8:	0001883a 	nop
    eabc:	e037883a 	mov	sp,fp
    eac0:	dfc00117 	ldw	ra,4(sp)
    eac4:	df000017 	ldw	fp,0(sp)
    eac8:	dec00204 	addi	sp,sp,8
    eacc:	f800283a 	ret

0000ead0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    ead0:	deffff04 	addi	sp,sp,-4
    ead4:	df000015 	stw	fp,0(sp)
    ead8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    eadc:	0001883a 	nop
    eae0:	e037883a 	mov	sp,fp
    eae4:	df000017 	ldw	fp,0(sp)
    eae8:	dec00104 	addi	sp,sp,4
    eaec:	f800283a 	ret

0000eaf0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    eaf0:	defff904 	addi	sp,sp,-28
    eaf4:	dfc00615 	stw	ra,24(sp)
    eaf8:	df000515 	stw	fp,20(sp)
    eafc:	df000504 	addi	fp,sp,20
    eb00:	e13ffc15 	stw	r4,-16(fp)
    eb04:	e17ffd15 	stw	r5,-12(fp)
    eb08:	e1bffe15 	stw	r6,-8(fp)
    eb0c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    eb10:	e0800217 	ldw	r2,8(fp)
    eb14:	d8800015 	stw	r2,0(sp)
    eb18:	e1ffff17 	ldw	r7,-4(fp)
    eb1c:	e1bffe17 	ldw	r6,-8(fp)
    eb20:	e17ffd17 	ldw	r5,-12(fp)
    eb24:	e13ffc17 	ldw	r4,-16(fp)
    eb28:	000ecd00 	call	ecd0 <alt_iic_isr_register>
}  
    eb2c:	e037883a 	mov	sp,fp
    eb30:	dfc00117 	ldw	ra,4(sp)
    eb34:	df000017 	ldw	fp,0(sp)
    eb38:	dec00204 	addi	sp,sp,8
    eb3c:	f800283a 	ret

0000eb40 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    eb40:	defff904 	addi	sp,sp,-28
    eb44:	df000615 	stw	fp,24(sp)
    eb48:	df000604 	addi	fp,sp,24
    eb4c:	e13ffe15 	stw	r4,-8(fp)
    eb50:	e17fff15 	stw	r5,-4(fp)
    eb54:	e0bfff17 	ldw	r2,-4(fp)
    eb58:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eb5c:	0005303a 	rdctl	r2,status
    eb60:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb64:	e0fffb17 	ldw	r3,-20(fp)
    eb68:	00bfff84 	movi	r2,-2
    eb6c:	1884703a 	and	r2,r3,r2
    eb70:	1001703a 	wrctl	status,r2
  
  return context;
    eb74:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    eb78:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    eb7c:	00c00044 	movi	r3,1
    eb80:	e0bffa17 	ldw	r2,-24(fp)
    eb84:	1884983a 	sll	r2,r3,r2
    eb88:	1007883a 	mov	r3,r2
    eb8c:	00800074 	movhi	r2,1
    eb90:	108cdf04 	addi	r2,r2,13180
    eb94:	10800017 	ldw	r2,0(r2)
    eb98:	1886b03a 	or	r3,r3,r2
    eb9c:	00800074 	movhi	r2,1
    eba0:	108cdf04 	addi	r2,r2,13180
    eba4:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    eba8:	00800074 	movhi	r2,1
    ebac:	108cdf04 	addi	r2,r2,13180
    ebb0:	10800017 	ldw	r2,0(r2)
    ebb4:	100170fa 	wrctl	ienable,r2
    ebb8:	e0bffc17 	ldw	r2,-16(fp)
    ebbc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ebc0:	e0bffd17 	ldw	r2,-12(fp)
    ebc4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    ebc8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    ebcc:	0001883a 	nop
}
    ebd0:	e037883a 	mov	sp,fp
    ebd4:	df000017 	ldw	fp,0(sp)
    ebd8:	dec00104 	addi	sp,sp,4
    ebdc:	f800283a 	ret

0000ebe0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    ebe0:	defff904 	addi	sp,sp,-28
    ebe4:	df000615 	stw	fp,24(sp)
    ebe8:	df000604 	addi	fp,sp,24
    ebec:	e13ffe15 	stw	r4,-8(fp)
    ebf0:	e17fff15 	stw	r5,-4(fp)
    ebf4:	e0bfff17 	ldw	r2,-4(fp)
    ebf8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ebfc:	0005303a 	rdctl	r2,status
    ec00:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ec04:	e0fffb17 	ldw	r3,-20(fp)
    ec08:	00bfff84 	movi	r2,-2
    ec0c:	1884703a 	and	r2,r3,r2
    ec10:	1001703a 	wrctl	status,r2
  
  return context;
    ec14:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    ec18:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    ec1c:	00c00044 	movi	r3,1
    ec20:	e0bffa17 	ldw	r2,-24(fp)
    ec24:	1884983a 	sll	r2,r3,r2
    ec28:	0084303a 	nor	r2,zero,r2
    ec2c:	1007883a 	mov	r3,r2
    ec30:	00800074 	movhi	r2,1
    ec34:	108cdf04 	addi	r2,r2,13180
    ec38:	10800017 	ldw	r2,0(r2)
    ec3c:	1886703a 	and	r3,r3,r2
    ec40:	00800074 	movhi	r2,1
    ec44:	108cdf04 	addi	r2,r2,13180
    ec48:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    ec4c:	00800074 	movhi	r2,1
    ec50:	108cdf04 	addi	r2,r2,13180
    ec54:	10800017 	ldw	r2,0(r2)
    ec58:	100170fa 	wrctl	ienable,r2
    ec5c:	e0bffc17 	ldw	r2,-16(fp)
    ec60:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ec64:	e0bffd17 	ldw	r2,-12(fp)
    ec68:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    ec6c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    ec70:	0001883a 	nop
}
    ec74:	e037883a 	mov	sp,fp
    ec78:	df000017 	ldw	fp,0(sp)
    ec7c:	dec00104 	addi	sp,sp,4
    ec80:	f800283a 	ret

0000ec84 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    ec84:	defffc04 	addi	sp,sp,-16
    ec88:	df000315 	stw	fp,12(sp)
    ec8c:	df000304 	addi	fp,sp,12
    ec90:	e13ffe15 	stw	r4,-8(fp)
    ec94:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    ec98:	000530fa 	rdctl	r2,ienable
    ec9c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    eca0:	00c00044 	movi	r3,1
    eca4:	e0bfff17 	ldw	r2,-4(fp)
    eca8:	1884983a 	sll	r2,r3,r2
    ecac:	1007883a 	mov	r3,r2
    ecb0:	e0bffd17 	ldw	r2,-12(fp)
    ecb4:	1884703a 	and	r2,r3,r2
    ecb8:	1004c03a 	cmpne	r2,r2,zero
    ecbc:	10803fcc 	andi	r2,r2,255
}
    ecc0:	e037883a 	mov	sp,fp
    ecc4:	df000017 	ldw	fp,0(sp)
    ecc8:	dec00104 	addi	sp,sp,4
    eccc:	f800283a 	ret

0000ecd0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ecd0:	defff504 	addi	sp,sp,-44
    ecd4:	dfc00a15 	stw	ra,40(sp)
    ecd8:	df000915 	stw	fp,36(sp)
    ecdc:	df000904 	addi	fp,sp,36
    ece0:	e13ffc15 	stw	r4,-16(fp)
    ece4:	e17ffd15 	stw	r5,-12(fp)
    ece8:	e1bffe15 	stw	r6,-8(fp)
    ecec:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    ecf0:	00bffa84 	movi	r2,-22
    ecf4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    ecf8:	e0bffd17 	ldw	r2,-12(fp)
    ecfc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    ed00:	e0bff817 	ldw	r2,-32(fp)
    ed04:	10800808 	cmpgei	r2,r2,32
    ed08:	1000271e 	bne	r2,zero,eda8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ed0c:	0005303a 	rdctl	r2,status
    ed10:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ed14:	e0fffb17 	ldw	r3,-20(fp)
    ed18:	00bfff84 	movi	r2,-2
    ed1c:	1884703a 	and	r2,r3,r2
    ed20:	1001703a 	wrctl	status,r2
  
  return context;
    ed24:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    ed28:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    ed2c:	00800074 	movhi	r2,1
    ed30:	108ced04 	addi	r2,r2,13236
    ed34:	e0fff817 	ldw	r3,-32(fp)
    ed38:	180690fa 	slli	r3,r3,3
    ed3c:	10c5883a 	add	r2,r2,r3
    ed40:	e0fffe17 	ldw	r3,-8(fp)
    ed44:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    ed48:	00800074 	movhi	r2,1
    ed4c:	108ced04 	addi	r2,r2,13236
    ed50:	e0fff817 	ldw	r3,-32(fp)
    ed54:	180690fa 	slli	r3,r3,3
    ed58:	10c5883a 	add	r2,r2,r3
    ed5c:	10800104 	addi	r2,r2,4
    ed60:	e0ffff17 	ldw	r3,-4(fp)
    ed64:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    ed68:	e0bffe17 	ldw	r2,-8(fp)
    ed6c:	10000526 	beq	r2,zero,ed84 <alt_iic_isr_register+0xb4>
    ed70:	e0bff817 	ldw	r2,-32(fp)
    ed74:	100b883a 	mov	r5,r2
    ed78:	e13ffc17 	ldw	r4,-16(fp)
    ed7c:	000eb400 	call	eb40 <alt_ic_irq_enable>
    ed80:	00000406 	br	ed94 <alt_iic_isr_register+0xc4>
    ed84:	e0bff817 	ldw	r2,-32(fp)
    ed88:	100b883a 	mov	r5,r2
    ed8c:	e13ffc17 	ldw	r4,-16(fp)
    ed90:	000ebe00 	call	ebe0 <alt_ic_irq_disable>
    ed94:	e0bff715 	stw	r2,-36(fp)
    ed98:	e0bffa17 	ldw	r2,-24(fp)
    ed9c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    eda0:	e0bff917 	ldw	r2,-28(fp)
    eda4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    eda8:	e0bff717 	ldw	r2,-36(fp)
}
    edac:	e037883a 	mov	sp,fp
    edb0:	dfc00117 	ldw	ra,4(sp)
    edb4:	df000017 	ldw	fp,0(sp)
    edb8:	dec00204 	addi	sp,sp,8
    edbc:	f800283a 	ret

0000edc0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    edc0:	defff804 	addi	sp,sp,-32
    edc4:	dfc00715 	stw	ra,28(sp)
    edc8:	df000615 	stw	fp,24(sp)
    edcc:	dc000515 	stw	r16,20(sp)
    edd0:	df000604 	addi	fp,sp,24
    edd4:	e13ffb15 	stw	r4,-20(fp)
    edd8:	e17ffc15 	stw	r5,-16(fp)
    eddc:	e1bffd15 	stw	r6,-12(fp)
    ede0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    ede4:	e1bffe17 	ldw	r6,-8(fp)
    ede8:	e17ffd17 	ldw	r5,-12(fp)
    edec:	e13ffc17 	ldw	r4,-16(fp)
    edf0:	000f0640 	call	f064 <open>
    edf4:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    edf8:	e0bffa17 	ldw	r2,-24(fp)
    edfc:	10002216 	blt	r2,zero,ee88 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    ee00:	04000074 	movhi	r16,1
    ee04:	84019204 	addi	r16,r16,1608
    ee08:	e0bffa17 	ldw	r2,-24(fp)
    ee0c:	01400304 	movi	r5,12
    ee10:	1009883a 	mov	r4,r2
    ee14:	000a9b00 	call	a9b0 <__mulsi3>
    ee18:	8085883a 	add	r2,r16,r2
    ee1c:	10c00017 	ldw	r3,0(r2)
    ee20:	e0bffb17 	ldw	r2,-20(fp)
    ee24:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    ee28:	04000074 	movhi	r16,1
    ee2c:	84019204 	addi	r16,r16,1608
    ee30:	e0bffa17 	ldw	r2,-24(fp)
    ee34:	01400304 	movi	r5,12
    ee38:	1009883a 	mov	r4,r2
    ee3c:	000a9b00 	call	a9b0 <__mulsi3>
    ee40:	8085883a 	add	r2,r16,r2
    ee44:	10800104 	addi	r2,r2,4
    ee48:	10c00017 	ldw	r3,0(r2)
    ee4c:	e0bffb17 	ldw	r2,-20(fp)
    ee50:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    ee54:	04000074 	movhi	r16,1
    ee58:	84019204 	addi	r16,r16,1608
    ee5c:	e0bffa17 	ldw	r2,-24(fp)
    ee60:	01400304 	movi	r5,12
    ee64:	1009883a 	mov	r4,r2
    ee68:	000a9b00 	call	a9b0 <__mulsi3>
    ee6c:	8085883a 	add	r2,r16,r2
    ee70:	10800204 	addi	r2,r2,8
    ee74:	10c00017 	ldw	r3,0(r2)
    ee78:	e0bffb17 	ldw	r2,-20(fp)
    ee7c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    ee80:	e13ffa17 	ldw	r4,-24(fp)
    ee84:	000da000 	call	da00 <alt_release_fd>
  }
} 
    ee88:	0001883a 	nop
    ee8c:	e6ffff04 	addi	sp,fp,-4
    ee90:	dfc00217 	ldw	ra,8(sp)
    ee94:	df000117 	ldw	fp,4(sp)
    ee98:	dc000017 	ldw	r16,0(sp)
    ee9c:	dec00304 	addi	sp,sp,12
    eea0:	f800283a 	ret

0000eea4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    eea4:	defffb04 	addi	sp,sp,-20
    eea8:	dfc00415 	stw	ra,16(sp)
    eeac:	df000315 	stw	fp,12(sp)
    eeb0:	df000304 	addi	fp,sp,12
    eeb4:	e13ffd15 	stw	r4,-12(fp)
    eeb8:	e17ffe15 	stw	r5,-8(fp)
    eebc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    eec0:	01c07fc4 	movi	r7,511
    eec4:	01800044 	movi	r6,1
    eec8:	e17ffd17 	ldw	r5,-12(fp)
    eecc:	01000074 	movhi	r4,1
    eed0:	21019504 	addi	r4,r4,1620
    eed4:	000edc00 	call	edc0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    eed8:	01c07fc4 	movi	r7,511
    eedc:	000d883a 	mov	r6,zero
    eee0:	e17ffe17 	ldw	r5,-8(fp)
    eee4:	01000074 	movhi	r4,1
    eee8:	21019204 	addi	r4,r4,1608
    eeec:	000edc00 	call	edc0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    eef0:	01c07fc4 	movi	r7,511
    eef4:	01800044 	movi	r6,1
    eef8:	e17fff17 	ldw	r5,-4(fp)
    eefc:	01000074 	movhi	r4,1
    ef00:	21019804 	addi	r4,r4,1632
    ef04:	000edc00 	call	edc0 <alt_open_fd>
}  
    ef08:	0001883a 	nop
    ef0c:	e037883a 	mov	sp,fp
    ef10:	dfc00117 	ldw	ra,4(sp)
    ef14:	df000017 	ldw	fp,0(sp)
    ef18:	dec00204 	addi	sp,sp,8
    ef1c:	f800283a 	ret

0000ef20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ef20:	defffe04 	addi	sp,sp,-8
    ef24:	dfc00115 	stw	ra,4(sp)
    ef28:	df000015 	stw	fp,0(sp)
    ef2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ef30:	00800074 	movhi	r2,1
    ef34:	10861504 	addi	r2,r2,6228
    ef38:	10800017 	ldw	r2,0(r2)
    ef3c:	10000526 	beq	r2,zero,ef54 <alt_get_errno+0x34>
    ef40:	00800074 	movhi	r2,1
    ef44:	10861504 	addi	r2,r2,6228
    ef48:	10800017 	ldw	r2,0(r2)
    ef4c:	103ee83a 	callr	r2
    ef50:	00000206 	br	ef5c <alt_get_errno+0x3c>
    ef54:	00800074 	movhi	r2,1
    ef58:	108cdb04 	addi	r2,r2,13164
}
    ef5c:	e037883a 	mov	sp,fp
    ef60:	dfc00117 	ldw	ra,4(sp)
    ef64:	df000017 	ldw	fp,0(sp)
    ef68:	dec00204 	addi	sp,sp,8
    ef6c:	f800283a 	ret

0000ef70 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    ef70:	defffb04 	addi	sp,sp,-20
    ef74:	dfc00415 	stw	ra,16(sp)
    ef78:	df000315 	stw	fp,12(sp)
    ef7c:	dc000215 	stw	r16,8(sp)
    ef80:	df000304 	addi	fp,sp,12
    ef84:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    ef88:	e0bffe17 	ldw	r2,-8(fp)
    ef8c:	10800217 	ldw	r2,8(r2)
    ef90:	10d00034 	orhi	r3,r2,16384
    ef94:	e0bffe17 	ldw	r2,-8(fp)
    ef98:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ef9c:	e03ffd15 	stw	zero,-12(fp)
    efa0:	00002306 	br	f030 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    efa4:	04000074 	movhi	r16,1
    efa8:	84019204 	addi	r16,r16,1608
    efac:	e0bffd17 	ldw	r2,-12(fp)
    efb0:	01400304 	movi	r5,12
    efb4:	1009883a 	mov	r4,r2
    efb8:	000a9b00 	call	a9b0 <__mulsi3>
    efbc:	8085883a 	add	r2,r16,r2
    efc0:	10c00017 	ldw	r3,0(r2)
    efc4:	e0bffe17 	ldw	r2,-8(fp)
    efc8:	10800017 	ldw	r2,0(r2)
    efcc:	1880151e 	bne	r3,r2,f024 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    efd0:	04000074 	movhi	r16,1
    efd4:	84019204 	addi	r16,r16,1608
    efd8:	e0bffd17 	ldw	r2,-12(fp)
    efdc:	01400304 	movi	r5,12
    efe0:	1009883a 	mov	r4,r2
    efe4:	000a9b00 	call	a9b0 <__mulsi3>
    efe8:	8085883a 	add	r2,r16,r2
    efec:	10800204 	addi	r2,r2,8
    eff0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    eff4:	10000b0e 	bge	r2,zero,f024 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    eff8:	01400304 	movi	r5,12
    effc:	e13ffd17 	ldw	r4,-12(fp)
    f000:	000a9b00 	call	a9b0 <__mulsi3>
    f004:	1007883a 	mov	r3,r2
    f008:	00800074 	movhi	r2,1
    f00c:	10819204 	addi	r2,r2,1608
    f010:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    f014:	e0bffe17 	ldw	r2,-8(fp)
    f018:	18800226 	beq	r3,r2,f024 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    f01c:	00bffcc4 	movi	r2,-13
    f020:	00000a06 	br	f04c <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    f024:	e0bffd17 	ldw	r2,-12(fp)
    f028:	10800044 	addi	r2,r2,1
    f02c:	e0bffd15 	stw	r2,-12(fp)
    f030:	00800074 	movhi	r2,1
    f034:	10861404 	addi	r2,r2,6224
    f038:	10800017 	ldw	r2,0(r2)
    f03c:	1007883a 	mov	r3,r2
    f040:	e0bffd17 	ldw	r2,-12(fp)
    f044:	18bfd72e 	bgeu	r3,r2,efa4 <__alt_data_end+0xfffc5bc4>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    f048:	0005883a 	mov	r2,zero
}
    f04c:	e6ffff04 	addi	sp,fp,-4
    f050:	dfc00217 	ldw	ra,8(sp)
    f054:	df000117 	ldw	fp,4(sp)
    f058:	dc000017 	ldw	r16,0(sp)
    f05c:	dec00304 	addi	sp,sp,12
    f060:	f800283a 	ret

0000f064 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    f064:	defff604 	addi	sp,sp,-40
    f068:	dfc00915 	stw	ra,36(sp)
    f06c:	df000815 	stw	fp,32(sp)
    f070:	df000804 	addi	fp,sp,32
    f074:	e13ffd15 	stw	r4,-12(fp)
    f078:	e17ffe15 	stw	r5,-8(fp)
    f07c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    f080:	00bfffc4 	movi	r2,-1
    f084:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    f088:	00bffb44 	movi	r2,-19
    f08c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    f090:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    f094:	01400074 	movhi	r5,1
    f098:	29461204 	addi	r5,r5,6216
    f09c:	e13ffd17 	ldw	r4,-12(fp)
    f0a0:	000f38c0 	call	f38c <alt_find_dev>
    f0a4:	e0bff815 	stw	r2,-32(fp)
    f0a8:	e0bff817 	ldw	r2,-32(fp)
    f0ac:	1000051e 	bne	r2,zero,f0c4 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    f0b0:	e13ffd17 	ldw	r4,-12(fp)
    f0b4:	000f41c0 	call	f41c <alt_find_file>
    f0b8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    f0bc:	00800044 	movi	r2,1
    f0c0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    f0c4:	e0bff817 	ldw	r2,-32(fp)
    f0c8:	10002b26 	beq	r2,zero,f178 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    f0cc:	e13ff817 	ldw	r4,-32(fp)
    f0d0:	000f5300 	call	f530 <alt_get_fd>
    f0d4:	e0bff915 	stw	r2,-28(fp)
    f0d8:	e0bff917 	ldw	r2,-28(fp)
    f0dc:	1000030e 	bge	r2,zero,f0ec <open+0x88>
    {
      status = index;
    f0e0:	e0bff917 	ldw	r2,-28(fp)
    f0e4:	e0bffa15 	stw	r2,-24(fp)
    f0e8:	00002506 	br	f180 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    f0ec:	01400304 	movi	r5,12
    f0f0:	e13ff917 	ldw	r4,-28(fp)
    f0f4:	000a9b00 	call	a9b0 <__mulsi3>
    f0f8:	1007883a 	mov	r3,r2
    f0fc:	00800074 	movhi	r2,1
    f100:	10819204 	addi	r2,r2,1608
    f104:	1885883a 	add	r2,r3,r2
    f108:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f10c:	e0fffe17 	ldw	r3,-8(fp)
    f110:	00900034 	movhi	r2,16384
    f114:	10bfffc4 	addi	r2,r2,-1
    f118:	1886703a 	and	r3,r3,r2
    f11c:	e0bffc17 	ldw	r2,-16(fp)
    f120:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    f124:	e0bffb17 	ldw	r2,-20(fp)
    f128:	1000051e 	bne	r2,zero,f140 <open+0xdc>
    f12c:	e13ffc17 	ldw	r4,-16(fp)
    f130:	000ef700 	call	ef70 <alt_file_locked>
    f134:	e0bffa15 	stw	r2,-24(fp)
    f138:	e0bffa17 	ldw	r2,-24(fp)
    f13c:	10001016 	blt	r2,zero,f180 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    f140:	e0bff817 	ldw	r2,-32(fp)
    f144:	10800317 	ldw	r2,12(r2)
    f148:	10000826 	beq	r2,zero,f16c <open+0x108>
    f14c:	e0bff817 	ldw	r2,-32(fp)
    f150:	10800317 	ldw	r2,12(r2)
    f154:	e1ffff17 	ldw	r7,-4(fp)
    f158:	e1bffe17 	ldw	r6,-8(fp)
    f15c:	e17ffd17 	ldw	r5,-12(fp)
    f160:	e13ffc17 	ldw	r4,-16(fp)
    f164:	103ee83a 	callr	r2
    f168:	00000106 	br	f170 <open+0x10c>
    f16c:	0005883a 	mov	r2,zero
    f170:	e0bffa15 	stw	r2,-24(fp)
    f174:	00000206 	br	f180 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    f178:	00bffb44 	movi	r2,-19
    f17c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    f180:	e0bffa17 	ldw	r2,-24(fp)
    f184:	1000090e 	bge	r2,zero,f1ac <open+0x148>
  {
    alt_release_fd (index);  
    f188:	e13ff917 	ldw	r4,-28(fp)
    f18c:	000da000 	call	da00 <alt_release_fd>
    ALT_ERRNO = -status;
    f190:	000ef200 	call	ef20 <alt_get_errno>
    f194:	1007883a 	mov	r3,r2
    f198:	e0bffa17 	ldw	r2,-24(fp)
    f19c:	0085c83a 	sub	r2,zero,r2
    f1a0:	18800015 	stw	r2,0(r3)
    return -1;
    f1a4:	00bfffc4 	movi	r2,-1
    f1a8:	00000106 	br	f1b0 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    f1ac:	e0bff917 	ldw	r2,-28(fp)
}
    f1b0:	e037883a 	mov	sp,fp
    f1b4:	dfc00117 	ldw	ra,4(sp)
    f1b8:	df000017 	ldw	fp,0(sp)
    f1bc:	dec00204 	addi	sp,sp,8
    f1c0:	f800283a 	ret

0000f1c4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    f1c4:	defffa04 	addi	sp,sp,-24
    f1c8:	df000515 	stw	fp,20(sp)
    f1cc:	df000504 	addi	fp,sp,20
    f1d0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f1d4:	0005303a 	rdctl	r2,status
    f1d8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f1dc:	e0fffc17 	ldw	r3,-16(fp)
    f1e0:	00bfff84 	movi	r2,-2
    f1e4:	1884703a 	and	r2,r3,r2
    f1e8:	1001703a 	wrctl	status,r2
  
  return context;
    f1ec:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    f1f0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    f1f4:	e0bfff17 	ldw	r2,-4(fp)
    f1f8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    f1fc:	e0bffd17 	ldw	r2,-12(fp)
    f200:	10800017 	ldw	r2,0(r2)
    f204:	e0fffd17 	ldw	r3,-12(fp)
    f208:	18c00117 	ldw	r3,4(r3)
    f20c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    f210:	e0bffd17 	ldw	r2,-12(fp)
    f214:	10800117 	ldw	r2,4(r2)
    f218:	e0fffd17 	ldw	r3,-12(fp)
    f21c:	18c00017 	ldw	r3,0(r3)
    f220:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    f224:	e0bffd17 	ldw	r2,-12(fp)
    f228:	e0fffd17 	ldw	r3,-12(fp)
    f22c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    f230:	e0bffd17 	ldw	r2,-12(fp)
    f234:	e0fffd17 	ldw	r3,-12(fp)
    f238:	10c00015 	stw	r3,0(r2)
    f23c:	e0bffb17 	ldw	r2,-20(fp)
    f240:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f244:	e0bffe17 	ldw	r2,-8(fp)
    f248:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    f24c:	0001883a 	nop
    f250:	e037883a 	mov	sp,fp
    f254:	df000017 	ldw	fp,0(sp)
    f258:	dec00104 	addi	sp,sp,4
    f25c:	f800283a 	ret

0000f260 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    f260:	defffb04 	addi	sp,sp,-20
    f264:	dfc00415 	stw	ra,16(sp)
    f268:	df000315 	stw	fp,12(sp)
    f26c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    f270:	d0a00e17 	ldw	r2,-32712(gp)
    f274:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    f278:	d0a6d717 	ldw	r2,-25764(gp)
    f27c:	10800044 	addi	r2,r2,1
    f280:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f284:	00002e06 	br	f340 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    f288:	e0bffd17 	ldw	r2,-12(fp)
    f28c:	10800017 	ldw	r2,0(r2)
    f290:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    f294:	e0bffd17 	ldw	r2,-12(fp)
    f298:	10800403 	ldbu	r2,16(r2)
    f29c:	10803fcc 	andi	r2,r2,255
    f2a0:	10000426 	beq	r2,zero,f2b4 <alt_tick+0x54>
    f2a4:	d0a6d717 	ldw	r2,-25764(gp)
    f2a8:	1000021e 	bne	r2,zero,f2b4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    f2ac:	e0bffd17 	ldw	r2,-12(fp)
    f2b0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    f2b4:	e0bffd17 	ldw	r2,-12(fp)
    f2b8:	10800217 	ldw	r2,8(r2)
    f2bc:	d0e6d717 	ldw	r3,-25764(gp)
    f2c0:	18801d36 	bltu	r3,r2,f338 <alt_tick+0xd8>
    f2c4:	e0bffd17 	ldw	r2,-12(fp)
    f2c8:	10800403 	ldbu	r2,16(r2)
    f2cc:	10803fcc 	andi	r2,r2,255
    f2d0:	1000191e 	bne	r2,zero,f338 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    f2d4:	e0bffd17 	ldw	r2,-12(fp)
    f2d8:	10800317 	ldw	r2,12(r2)
    f2dc:	e0fffd17 	ldw	r3,-12(fp)
    f2e0:	18c00517 	ldw	r3,20(r3)
    f2e4:	1809883a 	mov	r4,r3
    f2e8:	103ee83a 	callr	r2
    f2ec:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    f2f0:	e0bfff17 	ldw	r2,-4(fp)
    f2f4:	1000031e 	bne	r2,zero,f304 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    f2f8:	e13ffd17 	ldw	r4,-12(fp)
    f2fc:	000f1c40 	call	f1c4 <alt_alarm_stop>
    f300:	00000d06 	br	f338 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    f304:	e0bffd17 	ldw	r2,-12(fp)
    f308:	10c00217 	ldw	r3,8(r2)
    f30c:	e0bfff17 	ldw	r2,-4(fp)
    f310:	1887883a 	add	r3,r3,r2
    f314:	e0bffd17 	ldw	r2,-12(fp)
    f318:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    f31c:	e0bffd17 	ldw	r2,-12(fp)
    f320:	10c00217 	ldw	r3,8(r2)
    f324:	d0a6d717 	ldw	r2,-25764(gp)
    f328:	1880032e 	bgeu	r3,r2,f338 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    f32c:	e0bffd17 	ldw	r2,-12(fp)
    f330:	00c00044 	movi	r3,1
    f334:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    f338:	e0bffe17 	ldw	r2,-8(fp)
    f33c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f340:	e0fffd17 	ldw	r3,-12(fp)
    f344:	d0a00e04 	addi	r2,gp,-32712
    f348:	18bfcf1e 	bne	r3,r2,f288 <__alt_data_end+0xfffc5ea8>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f34c:	0001883a 	nop
}
    f350:	0001883a 	nop
    f354:	e037883a 	mov	sp,fp
    f358:	dfc00117 	ldw	ra,4(sp)
    f35c:	df000017 	ldw	fp,0(sp)
    f360:	dec00204 	addi	sp,sp,8
    f364:	f800283a 	ret

0000f368 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    f368:	deffff04 	addi	sp,sp,-4
    f36c:	df000015 	stw	fp,0(sp)
    f370:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    f374:	000170fa 	wrctl	ienable,zero
}
    f378:	0001883a 	nop
    f37c:	e037883a 	mov	sp,fp
    f380:	df000017 	ldw	fp,0(sp)
    f384:	dec00104 	addi	sp,sp,4
    f388:	f800283a 	ret

0000f38c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f38c:	defffa04 	addi	sp,sp,-24
    f390:	dfc00515 	stw	ra,20(sp)
    f394:	df000415 	stw	fp,16(sp)
    f398:	df000404 	addi	fp,sp,16
    f39c:	e13ffe15 	stw	r4,-8(fp)
    f3a0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f3a4:	e0bfff17 	ldw	r2,-4(fp)
    f3a8:	10800017 	ldw	r2,0(r2)
    f3ac:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f3b0:	e13ffe17 	ldw	r4,-8(fp)
    f3b4:	000047c0 	call	47c <strlen>
    f3b8:	10800044 	addi	r2,r2,1
    f3bc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f3c0:	00000d06 	br	f3f8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f3c4:	e0bffc17 	ldw	r2,-16(fp)
    f3c8:	10800217 	ldw	r2,8(r2)
    f3cc:	e0fffd17 	ldw	r3,-12(fp)
    f3d0:	180d883a 	mov	r6,r3
    f3d4:	e17ffe17 	ldw	r5,-8(fp)
    f3d8:	1009883a 	mov	r4,r2
    f3dc:	000f6ec0 	call	f6ec <memcmp>
    f3e0:	1000021e 	bne	r2,zero,f3ec <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f3e4:	e0bffc17 	ldw	r2,-16(fp)
    f3e8:	00000706 	br	f408 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f3ec:	e0bffc17 	ldw	r2,-16(fp)
    f3f0:	10800017 	ldw	r2,0(r2)
    f3f4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f3f8:	e0fffc17 	ldw	r3,-16(fp)
    f3fc:	e0bfff17 	ldw	r2,-4(fp)
    f400:	18bff01e 	bne	r3,r2,f3c4 <__alt_data_end+0xfffc5fe4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    f404:	0005883a 	mov	r2,zero
}
    f408:	e037883a 	mov	sp,fp
    f40c:	dfc00117 	ldw	ra,4(sp)
    f410:	df000017 	ldw	fp,0(sp)
    f414:	dec00204 	addi	sp,sp,8
    f418:	f800283a 	ret

0000f41c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f41c:	defffb04 	addi	sp,sp,-20
    f420:	dfc00415 	stw	ra,16(sp)
    f424:	df000315 	stw	fp,12(sp)
    f428:	df000304 	addi	fp,sp,12
    f42c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f430:	00800074 	movhi	r2,1
    f434:	10861004 	addi	r2,r2,6208
    f438:	10800017 	ldw	r2,0(r2)
    f43c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f440:	00003106 	br	f508 <alt_find_file+0xec>
  {
    len = strlen(next->name);
    f444:	e0bffd17 	ldw	r2,-12(fp)
    f448:	10800217 	ldw	r2,8(r2)
    f44c:	1009883a 	mov	r4,r2
    f450:	000047c0 	call	47c <strlen>
    f454:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    f458:	e0bffd17 	ldw	r2,-12(fp)
    f45c:	10c00217 	ldw	r3,8(r2)
    f460:	e0bffe17 	ldw	r2,-8(fp)
    f464:	10bfffc4 	addi	r2,r2,-1
    f468:	1885883a 	add	r2,r3,r2
    f46c:	10800003 	ldbu	r2,0(r2)
    f470:	10803fcc 	andi	r2,r2,255
    f474:	1080201c 	xori	r2,r2,128
    f478:	10bfe004 	addi	r2,r2,-128
    f47c:	10800bd8 	cmpnei	r2,r2,47
    f480:	1000031e 	bne	r2,zero,f490 <alt_find_file+0x74>
    {
      len -= 1;
    f484:	e0bffe17 	ldw	r2,-8(fp)
    f488:	10bfffc4 	addi	r2,r2,-1
    f48c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f490:	e0bffe17 	ldw	r2,-8(fp)
    f494:	e0ffff17 	ldw	r3,-4(fp)
    f498:	1885883a 	add	r2,r3,r2
    f49c:	10800003 	ldbu	r2,0(r2)
    f4a0:	10803fcc 	andi	r2,r2,255
    f4a4:	1080201c 	xori	r2,r2,128
    f4a8:	10bfe004 	addi	r2,r2,-128
    f4ac:	10800be0 	cmpeqi	r2,r2,47
    f4b0:	1000081e 	bne	r2,zero,f4d4 <alt_find_file+0xb8>
    f4b4:	e0bffe17 	ldw	r2,-8(fp)
    f4b8:	e0ffff17 	ldw	r3,-4(fp)
    f4bc:	1885883a 	add	r2,r3,r2
    f4c0:	10800003 	ldbu	r2,0(r2)
    f4c4:	10803fcc 	andi	r2,r2,255
    f4c8:	1080201c 	xori	r2,r2,128
    f4cc:	10bfe004 	addi	r2,r2,-128
    f4d0:	10000a1e 	bne	r2,zero,f4fc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    f4d4:	e0bffd17 	ldw	r2,-12(fp)
    f4d8:	10800217 	ldw	r2,8(r2)
    f4dc:	e0fffe17 	ldw	r3,-8(fp)
    f4e0:	180d883a 	mov	r6,r3
    f4e4:	e17fff17 	ldw	r5,-4(fp)
    f4e8:	1009883a 	mov	r4,r2
    f4ec:	000f6ec0 	call	f6ec <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f4f0:	1000021e 	bne	r2,zero,f4fc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    f4f4:	e0bffd17 	ldw	r2,-12(fp)
    f4f8:	00000806 	br	f51c <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
    f4fc:	e0bffd17 	ldw	r2,-12(fp)
    f500:	10800017 	ldw	r2,0(r2)
    f504:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f508:	e0fffd17 	ldw	r3,-12(fp)
    f50c:	00800074 	movhi	r2,1
    f510:	10861004 	addi	r2,r2,6208
    f514:	18bfcb1e 	bne	r3,r2,f444 <__alt_data_end+0xfffc6064>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    f518:	0005883a 	mov	r2,zero
}
    f51c:	e037883a 	mov	sp,fp
    f520:	dfc00117 	ldw	ra,4(sp)
    f524:	df000017 	ldw	fp,0(sp)
    f528:	dec00204 	addi	sp,sp,8
    f52c:	f800283a 	ret

0000f530 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f530:	defffa04 	addi	sp,sp,-24
    f534:	dfc00515 	stw	ra,20(sp)
    f538:	df000415 	stw	fp,16(sp)
    f53c:	dc000315 	stw	r16,12(sp)
    f540:	df000404 	addi	fp,sp,16
    f544:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    f548:	00bffa04 	movi	r2,-24
    f54c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f550:	e03ffc15 	stw	zero,-16(fp)
    f554:	00002106 	br	f5dc <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
    f558:	04000074 	movhi	r16,1
    f55c:	84019204 	addi	r16,r16,1608
    f560:	e0bffc17 	ldw	r2,-16(fp)
    f564:	01400304 	movi	r5,12
    f568:	1009883a 	mov	r4,r2
    f56c:	000a9b00 	call	a9b0 <__mulsi3>
    f570:	8085883a 	add	r2,r16,r2
    f574:	10800017 	ldw	r2,0(r2)
    f578:	1000151e 	bne	r2,zero,f5d0 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
    f57c:	04000074 	movhi	r16,1
    f580:	84019204 	addi	r16,r16,1608
    f584:	e0bffc17 	ldw	r2,-16(fp)
    f588:	01400304 	movi	r5,12
    f58c:	1009883a 	mov	r4,r2
    f590:	000a9b00 	call	a9b0 <__mulsi3>
    f594:	8085883a 	add	r2,r16,r2
    f598:	e0fffe17 	ldw	r3,-8(fp)
    f59c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    f5a0:	00800074 	movhi	r2,1
    f5a4:	10861404 	addi	r2,r2,6224
    f5a8:	10c00017 	ldw	r3,0(r2)
    f5ac:	e0bffc17 	ldw	r2,-16(fp)
    f5b0:	1880040e 	bge	r3,r2,f5c4 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
    f5b4:	00800074 	movhi	r2,1
    f5b8:	10861404 	addi	r2,r2,6224
    f5bc:	e0fffc17 	ldw	r3,-16(fp)
    f5c0:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
    f5c4:	e0bffc17 	ldw	r2,-16(fp)
    f5c8:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    f5cc:	00000606 	br	f5e8 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f5d0:	e0bffc17 	ldw	r2,-16(fp)
    f5d4:	10800044 	addi	r2,r2,1
    f5d8:	e0bffc15 	stw	r2,-16(fp)
    f5dc:	e0bffc17 	ldw	r2,-16(fp)
    f5e0:	10800810 	cmplti	r2,r2,32
    f5e4:	103fdc1e 	bne	r2,zero,f558 <__alt_data_end+0xfffc6178>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f5e8:	e0bffd17 	ldw	r2,-12(fp)
}
    f5ec:	e6ffff04 	addi	sp,fp,-4
    f5f0:	dfc00217 	ldw	ra,8(sp)
    f5f4:	df000117 	ldw	fp,4(sp)
    f5f8:	dc000017 	ldw	r16,0(sp)
    f5fc:	dec00304 	addi	sp,sp,12
    f600:	f800283a 	ret

0000f604 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f604:	defffe04 	addi	sp,sp,-8
    f608:	df000115 	stw	fp,4(sp)
    f60c:	df000104 	addi	fp,sp,4
    f610:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f614:	e0bfff17 	ldw	r2,-4(fp)
    f618:	10bffe84 	addi	r2,r2,-6
    f61c:	10c00428 	cmpgeui	r3,r2,16
    f620:	18001a1e 	bne	r3,zero,f68c <alt_exception_cause_generated_bad_addr+0x88>
    f624:	100690ba 	slli	r3,r2,2
    f628:	00800074 	movhi	r2,1
    f62c:	10bd8f04 	addi	r2,r2,-2500
    f630:	1885883a 	add	r2,r3,r2
    f634:	10800017 	ldw	r2,0(r2)
    f638:	1000683a 	jmp	r2
    f63c:	0000f67c 	xorhi	zero,zero,985
    f640:	0000f67c 	xorhi	zero,zero,985
    f644:	0000f68c 	andi	zero,zero,986
    f648:	0000f68c 	andi	zero,zero,986
    f64c:	0000f68c 	andi	zero,zero,986
    f650:	0000f67c 	xorhi	zero,zero,985
    f654:	0000f684 	movi	zero,986
    f658:	0000f68c 	andi	zero,zero,986
    f65c:	0000f67c 	xorhi	zero,zero,985
    f660:	0000f67c 	xorhi	zero,zero,985
    f664:	0000f68c 	andi	zero,zero,986
    f668:	0000f67c 	xorhi	zero,zero,985
    f66c:	0000f684 	movi	zero,986
    f670:	0000f68c 	andi	zero,zero,986
    f674:	0000f68c 	andi	zero,zero,986
    f678:	0000f67c 	xorhi	zero,zero,985
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f67c:	00800044 	movi	r2,1
    f680:	00000306 	br	f690 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f684:	0005883a 	mov	r2,zero
    f688:	00000106 	br	f690 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    f68c:	0005883a 	mov	r2,zero
  }
}
    f690:	e037883a 	mov	sp,fp
    f694:	df000017 	ldw	fp,0(sp)
    f698:	dec00104 	addi	sp,sp,4
    f69c:	f800283a 	ret

0000f6a0 <atexit>:
    f6a0:	200b883a 	mov	r5,r4
    f6a4:	000f883a 	mov	r7,zero
    f6a8:	000d883a 	mov	r6,zero
    f6ac:	0009883a 	mov	r4,zero
    f6b0:	000f7681 	jmpi	f768 <__register_exitproc>

0000f6b4 <exit>:
    f6b4:	defffe04 	addi	sp,sp,-8
    f6b8:	000b883a 	mov	r5,zero
    f6bc:	dc000015 	stw	r16,0(sp)
    f6c0:	dfc00115 	stw	ra,4(sp)
    f6c4:	2021883a 	mov	r16,r4
    f6c8:	000f8800 	call	f880 <__call_exitprocs>
    f6cc:	00800074 	movhi	r2,1
    f6d0:	10860a04 	addi	r2,r2,6184
    f6d4:	11000017 	ldw	r4,0(r2)
    f6d8:	20800f17 	ldw	r2,60(r4)
    f6dc:	10000126 	beq	r2,zero,f6e4 <exit+0x30>
    f6e0:	103ee83a 	callr	r2
    f6e4:	8009883a 	mov	r4,r16
    f6e8:	000fa000 	call	fa00 <_exit>

0000f6ec <memcmp>:
    f6ec:	01c000c4 	movi	r7,3
    f6f0:	3980192e 	bgeu	r7,r6,f758 <memcmp+0x6c>
    f6f4:	2144b03a 	or	r2,r4,r5
    f6f8:	11c4703a 	and	r2,r2,r7
    f6fc:	10000f26 	beq	r2,zero,f73c <memcmp+0x50>
    f700:	20800003 	ldbu	r2,0(r4)
    f704:	28c00003 	ldbu	r3,0(r5)
    f708:	10c0151e 	bne	r2,r3,f760 <memcmp+0x74>
    f70c:	31bfff84 	addi	r6,r6,-2
    f710:	01ffffc4 	movi	r7,-1
    f714:	00000406 	br	f728 <memcmp+0x3c>
    f718:	20800003 	ldbu	r2,0(r4)
    f71c:	28c00003 	ldbu	r3,0(r5)
    f720:	31bfffc4 	addi	r6,r6,-1
    f724:	10c00e1e 	bne	r2,r3,f760 <memcmp+0x74>
    f728:	21000044 	addi	r4,r4,1
    f72c:	29400044 	addi	r5,r5,1
    f730:	31fff91e 	bne	r6,r7,f718 <__alt_data_end+0xfffc6338>
    f734:	0005883a 	mov	r2,zero
    f738:	f800283a 	ret
    f73c:	20c00017 	ldw	r3,0(r4)
    f740:	28800017 	ldw	r2,0(r5)
    f744:	18bfee1e 	bne	r3,r2,f700 <__alt_data_end+0xfffc6320>
    f748:	31bfff04 	addi	r6,r6,-4
    f74c:	21000104 	addi	r4,r4,4
    f750:	29400104 	addi	r5,r5,4
    f754:	39bff936 	bltu	r7,r6,f73c <__alt_data_end+0xfffc635c>
    f758:	303fe91e 	bne	r6,zero,f700 <__alt_data_end+0xfffc6320>
    f75c:	003ff506 	br	f734 <__alt_data_end+0xfffc6354>
    f760:	10c5c83a 	sub	r2,r2,r3
    f764:	f800283a 	ret

0000f768 <__register_exitproc>:
    f768:	defffa04 	addi	sp,sp,-24
    f76c:	dc000315 	stw	r16,12(sp)
    f770:	04000074 	movhi	r16,1
    f774:	84060a04 	addi	r16,r16,6184
    f778:	80c00017 	ldw	r3,0(r16)
    f77c:	dc400415 	stw	r17,16(sp)
    f780:	dfc00515 	stw	ra,20(sp)
    f784:	18805217 	ldw	r2,328(r3)
    f788:	2023883a 	mov	r17,r4
    f78c:	10003726 	beq	r2,zero,f86c <__register_exitproc+0x104>
    f790:	10c00117 	ldw	r3,4(r2)
    f794:	010007c4 	movi	r4,31
    f798:	20c00e16 	blt	r4,r3,f7d4 <__register_exitproc+0x6c>
    f79c:	1a000044 	addi	r8,r3,1
    f7a0:	8800221e 	bne	r17,zero,f82c <__register_exitproc+0xc4>
    f7a4:	18c00084 	addi	r3,r3,2
    f7a8:	18c7883a 	add	r3,r3,r3
    f7ac:	18c7883a 	add	r3,r3,r3
    f7b0:	12000115 	stw	r8,4(r2)
    f7b4:	10c7883a 	add	r3,r2,r3
    f7b8:	19400015 	stw	r5,0(r3)
    f7bc:	0005883a 	mov	r2,zero
    f7c0:	dfc00517 	ldw	ra,20(sp)
    f7c4:	dc400417 	ldw	r17,16(sp)
    f7c8:	dc000317 	ldw	r16,12(sp)
    f7cc:	dec00604 	addi	sp,sp,24
    f7d0:	f800283a 	ret
    f7d4:	00800034 	movhi	r2,0
    f7d8:	10800004 	addi	r2,r2,0
    f7dc:	10002626 	beq	r2,zero,f878 <__register_exitproc+0x110>
    f7e0:	01006404 	movi	r4,400
    f7e4:	d9400015 	stw	r5,0(sp)
    f7e8:	d9800115 	stw	r6,4(sp)
    f7ec:	d9c00215 	stw	r7,8(sp)
    f7f0:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f7f4:	d9400017 	ldw	r5,0(sp)
    f7f8:	d9800117 	ldw	r6,4(sp)
    f7fc:	d9c00217 	ldw	r7,8(sp)
    f800:	10001d26 	beq	r2,zero,f878 <__register_exitproc+0x110>
    f804:	81000017 	ldw	r4,0(r16)
    f808:	10000115 	stw	zero,4(r2)
    f80c:	02000044 	movi	r8,1
    f810:	22405217 	ldw	r9,328(r4)
    f814:	0007883a 	mov	r3,zero
    f818:	12400015 	stw	r9,0(r2)
    f81c:	20805215 	stw	r2,328(r4)
    f820:	10006215 	stw	zero,392(r2)
    f824:	10006315 	stw	zero,396(r2)
    f828:	883fde26 	beq	r17,zero,f7a4 <__alt_data_end+0xfffc63c4>
    f82c:	18c9883a 	add	r4,r3,r3
    f830:	2109883a 	add	r4,r4,r4
    f834:	1109883a 	add	r4,r2,r4
    f838:	21802215 	stw	r6,136(r4)
    f83c:	01800044 	movi	r6,1
    f840:	12406217 	ldw	r9,392(r2)
    f844:	30cc983a 	sll	r6,r6,r3
    f848:	4992b03a 	or	r9,r9,r6
    f84c:	12406215 	stw	r9,392(r2)
    f850:	21c04215 	stw	r7,264(r4)
    f854:	01000084 	movi	r4,2
    f858:	893fd21e 	bne	r17,r4,f7a4 <__alt_data_end+0xfffc63c4>
    f85c:	11006317 	ldw	r4,396(r2)
    f860:	218cb03a 	or	r6,r4,r6
    f864:	11806315 	stw	r6,396(r2)
    f868:	003fce06 	br	f7a4 <__alt_data_end+0xfffc63c4>
    f86c:	18805304 	addi	r2,r3,332
    f870:	18805215 	stw	r2,328(r3)
    f874:	003fc606 	br	f790 <__alt_data_end+0xfffc63b0>
    f878:	00bfffc4 	movi	r2,-1
    f87c:	003fd006 	br	f7c0 <__alt_data_end+0xfffc63e0>

0000f880 <__call_exitprocs>:
    f880:	defff504 	addi	sp,sp,-44
    f884:	df000915 	stw	fp,36(sp)
    f888:	dd400615 	stw	r21,24(sp)
    f88c:	dc800315 	stw	r18,12(sp)
    f890:	dfc00a15 	stw	ra,40(sp)
    f894:	ddc00815 	stw	r23,32(sp)
    f898:	dd800715 	stw	r22,28(sp)
    f89c:	dd000515 	stw	r20,20(sp)
    f8a0:	dcc00415 	stw	r19,16(sp)
    f8a4:	dc400215 	stw	r17,8(sp)
    f8a8:	dc000115 	stw	r16,4(sp)
    f8ac:	d9000015 	stw	r4,0(sp)
    f8b0:	2839883a 	mov	fp,r5
    f8b4:	04800044 	movi	r18,1
    f8b8:	057fffc4 	movi	r21,-1
    f8bc:	00800074 	movhi	r2,1
    f8c0:	10860a04 	addi	r2,r2,6184
    f8c4:	12000017 	ldw	r8,0(r2)
    f8c8:	45005217 	ldw	r20,328(r8)
    f8cc:	44c05204 	addi	r19,r8,328
    f8d0:	a0001c26 	beq	r20,zero,f944 <__call_exitprocs+0xc4>
    f8d4:	a0800117 	ldw	r2,4(r20)
    f8d8:	15ffffc4 	addi	r23,r2,-1
    f8dc:	b8000d16 	blt	r23,zero,f914 <__call_exitprocs+0x94>
    f8e0:	14000044 	addi	r16,r2,1
    f8e4:	8421883a 	add	r16,r16,r16
    f8e8:	8421883a 	add	r16,r16,r16
    f8ec:	84402004 	addi	r17,r16,128
    f8f0:	a463883a 	add	r17,r20,r17
    f8f4:	a421883a 	add	r16,r20,r16
    f8f8:	e0001e26 	beq	fp,zero,f974 <__call_exitprocs+0xf4>
    f8fc:	80804017 	ldw	r2,256(r16)
    f900:	e0801c26 	beq	fp,r2,f974 <__call_exitprocs+0xf4>
    f904:	bdffffc4 	addi	r23,r23,-1
    f908:	843fff04 	addi	r16,r16,-4
    f90c:	8c7fff04 	addi	r17,r17,-4
    f910:	bd7ff91e 	bne	r23,r21,f8f8 <__alt_data_end+0xfffc6518>
    f914:	00800034 	movhi	r2,0
    f918:	10800004 	addi	r2,r2,0
    f91c:	10000926 	beq	r2,zero,f944 <__call_exitprocs+0xc4>
    f920:	a0800117 	ldw	r2,4(r20)
    f924:	1000301e 	bne	r2,zero,f9e8 <__call_exitprocs+0x168>
    f928:	a0800017 	ldw	r2,0(r20)
    f92c:	10003226 	beq	r2,zero,f9f8 <__call_exitprocs+0x178>
    f930:	a009883a 	mov	r4,r20
    f934:	98800015 	stw	r2,0(r19)
    f938:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f93c:	9d000017 	ldw	r20,0(r19)
    f940:	a03fe41e 	bne	r20,zero,f8d4 <__alt_data_end+0xfffc64f4>
    f944:	dfc00a17 	ldw	ra,40(sp)
    f948:	df000917 	ldw	fp,36(sp)
    f94c:	ddc00817 	ldw	r23,32(sp)
    f950:	dd800717 	ldw	r22,28(sp)
    f954:	dd400617 	ldw	r21,24(sp)
    f958:	dd000517 	ldw	r20,20(sp)
    f95c:	dcc00417 	ldw	r19,16(sp)
    f960:	dc800317 	ldw	r18,12(sp)
    f964:	dc400217 	ldw	r17,8(sp)
    f968:	dc000117 	ldw	r16,4(sp)
    f96c:	dec00b04 	addi	sp,sp,44
    f970:	f800283a 	ret
    f974:	a0800117 	ldw	r2,4(r20)
    f978:	80c00017 	ldw	r3,0(r16)
    f97c:	10bfffc4 	addi	r2,r2,-1
    f980:	15c01426 	beq	r2,r23,f9d4 <__call_exitprocs+0x154>
    f984:	80000015 	stw	zero,0(r16)
    f988:	183fde26 	beq	r3,zero,f904 <__alt_data_end+0xfffc6524>
    f98c:	95c8983a 	sll	r4,r18,r23
    f990:	a0806217 	ldw	r2,392(r20)
    f994:	a5800117 	ldw	r22,4(r20)
    f998:	2084703a 	and	r2,r4,r2
    f99c:	10000b26 	beq	r2,zero,f9cc <__call_exitprocs+0x14c>
    f9a0:	a0806317 	ldw	r2,396(r20)
    f9a4:	2088703a 	and	r4,r4,r2
    f9a8:	20000c1e 	bne	r4,zero,f9dc <__call_exitprocs+0x15c>
    f9ac:	89400017 	ldw	r5,0(r17)
    f9b0:	d9000017 	ldw	r4,0(sp)
    f9b4:	183ee83a 	callr	r3
    f9b8:	a0800117 	ldw	r2,4(r20)
    f9bc:	15bfbf1e 	bne	r2,r22,f8bc <__alt_data_end+0xfffc64dc>
    f9c0:	98800017 	ldw	r2,0(r19)
    f9c4:	153fcf26 	beq	r2,r20,f904 <__alt_data_end+0xfffc6524>
    f9c8:	003fbc06 	br	f8bc <__alt_data_end+0xfffc64dc>
    f9cc:	183ee83a 	callr	r3
    f9d0:	003ff906 	br	f9b8 <__alt_data_end+0xfffc65d8>
    f9d4:	a5c00115 	stw	r23,4(r20)
    f9d8:	003feb06 	br	f988 <__alt_data_end+0xfffc65a8>
    f9dc:	89000017 	ldw	r4,0(r17)
    f9e0:	183ee83a 	callr	r3
    f9e4:	003ff406 	br	f9b8 <__alt_data_end+0xfffc65d8>
    f9e8:	a0800017 	ldw	r2,0(r20)
    f9ec:	a027883a 	mov	r19,r20
    f9f0:	1029883a 	mov	r20,r2
    f9f4:	003fb606 	br	f8d0 <__alt_data_end+0xfffc64f0>
    f9f8:	0005883a 	mov	r2,zero
    f9fc:	003ffb06 	br	f9ec <__alt_data_end+0xfffc660c>

0000fa00 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    fa00:	defffd04 	addi	sp,sp,-12
    fa04:	df000215 	stw	fp,8(sp)
    fa08:	df000204 	addi	fp,sp,8
    fa0c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    fa10:	0001883a 	nop
    fa14:	e0bfff17 	ldw	r2,-4(fp)
    fa18:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    fa1c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    fa20:	10000226 	beq	r2,zero,fa2c <_exit+0x2c>
    ALT_SIM_FAIL();
    fa24:	002af070 	cmpltui	zero,zero,43969
    fa28:	00000106 	br	fa30 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    fa2c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    fa30:	003fff06 	br	fa30 <__alt_data_end+0xfffc6650>
